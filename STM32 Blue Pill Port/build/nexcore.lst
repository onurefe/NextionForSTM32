ARM GAS  /tmp/ccCyY6XY.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"nexcore.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.Nexcore_Init,"ax",%progbits
  16              		.align	1
  17              		.global	Nexcore_Init
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	Nexcore_Init:
  25              	.LFB85:
  26              		.file 1 "Src/nexcore.c"
   1:Src/nexcore.c **** /**
   2:Src/nexcore.c ****   ******************************************************************************
   3:Src/nexcore.c ****   * @file    nexcore.c
   4:Src/nexcore.c ****   * @author  Onur Efe
   5:Src/nexcore.c ****   * @brief   Nextion HMI core function implementations.
   6:Src/nexcore.c ****   * 
   7:Src/nexcore.c ****   @verbatim
   8:Src/nexcore.c ****   ==============================================================================
   9:Src/nexcore.c ****                             ##### How to use #####
  10:Src/nexcore.c ****   ==============================================================================
  11:Src/nexcore.c ****     In order to use this library there should be serial interface driver which 
  12:Src/nexcore.c ****     provides;
  13:Src/nexcore.c ****         -Bool_t Serial_TxBuffAvailable(void)
  14:Src/nexcore.c ****         -void Serial_Transmit(uint8_t *buff, uint16_t length);
  15:Src/nexcore.c ****         -uint16_t Serial_GetRecvData(uint8_t *buff, uint16_t maxLength);
  16:Src/nexcore.c ****     functions. The user should implement his own serial.c and serial.h files
  17:Src/nexcore.c ****     to adapt this code to his architecture. Example portage for STM32F1 is
  18:Src/nexcore.c ****     is given in the repository. 
  19:Src/nexcore.c ****   @endverbatim
  20:Src/nexcore.c **** */
  21:Src/nexcore.c **** 
  22:Src/nexcore.c **** #include "nexcore.h"
  23:Src/nexcore.c **** #include "nexserial.h"
  24:Src/nexcore.c **** #include "utilities.h"
  25:Src/nexcore.c **** #include "queue.h"
  26:Src/nexcore.c **** 
  27:Src/nexcore.c **** /* Private definitions -----------------------------------------------------*/
  28:Src/nexcore.c **** // Nextion HMI return codes.
  29:Src/nexcore.c **** #define NR_INVALID_INSTRUCTION ((uint8_t)0x00)
  30:Src/nexcore.c **** #define NR_INSTRUCTION_SUCCESSFUL ((uint8_t)0x01)
  31:Src/nexcore.c **** #define NR_INVALID_COMPONENT_ID ((uint8_t)0x02)
  32:Src/nexcore.c **** #define NR_INVALID_PAGE_ID ((uint8_t)0x03)
ARM GAS  /tmp/ccCyY6XY.s 			page 2


  33:Src/nexcore.c **** #define NR_INVALID_PICTURE_ID ((uint8_t)0x04)
  34:Src/nexcore.c **** #define NR_INVALID_FONT_ID ((uint8_t)0x05)
  35:Src/nexcore.c **** #define NR_INVALID_FILE_OPERATION ((uint8_t)0x06)
  36:Src/nexcore.c **** #define NR_INVALID_CRC ((uint8_t)0x09)
  37:Src/nexcore.c **** #define NR_INVALID_BAUDRATE_SETTING ((uint8_t)0x11)
  38:Src/nexcore.c **** #define NR_INVALID_WAVEFORM_ID_OR_CHANNEL ((uint8_t)0x12)
  39:Src/nexcore.c **** #define NR_INVALID_VARIABLE_NAME_OR_ATTIRIBUTE ((uint8_t)0x1A)
  40:Src/nexcore.c **** #define NR_INVALID_VARIABLE_OPERATION ((uint8_t)0x1B)
  41:Src/nexcore.c **** #define NR_ASSIGNMENT_FAILED_TO_ASSIGN ((uint8_t)0x1C)
  42:Src/nexcore.c **** #define NR_EEPROM_OPERATION_FAILED ((uint8_t)0x1D)
  43:Src/nexcore.c **** #define NR_INVALID_QUANTITY_OF_PARAMETERS ((uint8_t)0x1E)
  44:Src/nexcore.c **** #define NR_IO_OPERATION_FAILED ((uint8_t)0x1F)
  45:Src/nexcore.c **** #define NR_ESCAPE_CHARACTER_INVALID ((uint8_t)0x20)
  46:Src/nexcore.c **** #define NR_VARIABLE_NAME_TOO_LONG ((uint8_t)0x23)
  47:Src/nexcore.c **** #define NR_SERIAL_BUFFER_OVERFLOW ((uint8_t)0x24)
  48:Src/nexcore.c **** #define NR_TOUCH_EVENT ((uint8_t)0x65)
  49:Src/nexcore.c **** #define NR_CURRENT_PAGE_NUMBER ((uint8_t)0x66)
  50:Src/nexcore.c **** #define NR_TOUCH_COORDINATE_AWAKE ((uint8_t)0x67)
  51:Src/nexcore.c **** #define NR_TOUCH_COORDINATE_SLEEP ((uint8_t)0x68)
  52:Src/nexcore.c **** #define NR_VARIED_STRING_DATA_ENCLOSED ((uint8_t)0x70)
  53:Src/nexcore.c **** #define NR_NUMERIC_DATA_ENCLOSED ((uint8_t)0x71)
  54:Src/nexcore.c **** #define NR_AUTO_ENTERED_SLEEP_MODE ((uint8_t)0x86)
  55:Src/nexcore.c **** #define NR_AUTO_WAKE_FROM_SLEEP ((uint8_t)0x87)
  56:Src/nexcore.c **** #define NR_NEXTION_READY ((uint8_t)0x88)
  57:Src/nexcore.c **** #define NR_START_MICROSD_UPGRAGE ((uint8_t)0x89)
  58:Src/nexcore.c **** #define NR_TRANSPARENT_DATA_FINISHED ((uint8_t)0xFD)
  59:Src/nexcore.c **** #define NR_TRANSPARENT_DATA_READY ((uint8_t)0xFE)
  60:Src/nexcore.c **** 
  61:Src/nexcore.c **** /* Private function prototypes ---------------------------------------------*/
  62:Src/nexcore.c **** static void messageReceived(uint8_t messageLength);
  63:Src/nexcore.c **** 
  64:Src/nexcore.c **** /* Exported variables ------------------------------------------------------*/
  65:Src/nexcore.c **** extern UART_HandleTypeDef huart1;
  66:Src/nexcore.c **** 
  67:Src/nexcore.c **** /* Private variables -------------------------------------------------------*/
  68:Src/nexcore.c **** // Run-time variables.
  69:Src/nexcore.c **** static TaskStatus_t Status = UNINIT;
  70:Src/nexcore.c **** static Bool_t Busy;
  71:Src/nexcore.c **** static uint32_t ResponseStartTick;
  72:Src/nexcore.c **** static uint16_t ActiveTransactionBytesToSend;
  73:Src/nexcore.c **** static uint8_t TransactionNumerator;
  74:Src/nexcore.c **** static uint8_t ActiveTransactionId;
  75:Src/nexcore.c **** 
  76:Src/nexcore.c **** // Data buffers and data structures.
  77:Src/nexcore.c **** static uint8_t TxQueueContainer[NEXCORE_TX_QUEUE_SIZE];
  78:Src/nexcore.c **** static Queue_Buffer_t TxQueue;
  79:Src/nexcore.c **** static uint8_t RxQueueContainer[NEXCORE_RX_QUEUE_SIZE];
  80:Src/nexcore.c **** static Queue_Buffer_t RxQueue;
  81:Src/nexcore.c **** 
  82:Src/nexcore.c **** // Constant data.
  83:Src/nexcore.c **** static uint8_t MessageTerminator[] = {0xFF, 0xFF, 0xFF};
  84:Src/nexcore.c **** 
  85:Src/nexcore.c **** /* Exported functions ------------------------------------------------------*/
  86:Src/nexcore.c **** /**
  87:Src/nexcore.c ****  * @brief Initializes module. 
  88:Src/nexcore.c ****  */
  89:Src/nexcore.c **** void Nexcore_Init(void)
ARM GAS  /tmp/ccCyY6XY.s 			page 3


  90:Src/nexcore.c **** {
  27              		.loc 1 90 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  91:Src/nexcore.c ****     if (Status != UNINIT)
  32              		.loc 1 91 5 view .LVU1
  33              		.loc 1 91 16 is_stmt 0 view .LVU2
  34 0000 0B4B     		ldr	r3, .L3
  35 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  36              		.loc 1 91 8 view .LVU3
  37 0004 93B9     		cbnz	r3, .L1
  92:Src/nexcore.c ****     {
  93:Src/nexcore.c ****         return;
  94:Src/nexcore.c ****     }
  95:Src/nexcore.c **** 
  96:Src/nexcore.c ****     Queue_InitBuffer(&TxQueue, TxQueueContainer, NEXCORE_TX_QUEUE_SIZE);
  38              		.loc 1 96 5 is_stmt 1 view .LVU4
  39              	.LVL0:
  40              	.LBB110:
  41              	.LBI110:
  42              		.file 2 "Inc/queue.h"
   1:Inc/queue.h   **** /**
   2:Inc/queue.h   ****   ******************************************************************************
   3:Inc/queue.h   ****   * @file    queue.h
   4:Inc/queue.h   ****   * @author  Onur Efe
   5:Inc/queue.h   ****   * @brief   Queue structure implementation.
   6:Inc/queue.h   ****   */
   7:Inc/queue.h   **** #ifndef __QUEUE_H
   8:Inc/queue.h   **** #define __QUEUE_H
   9:Inc/queue.h   **** 
  10:Inc/queue.h   **** /* Includes ------------------------------------------------------------------*/
  11:Inc/queue.h   **** #include "global.h"
  12:Inc/queue.h   **** 
  13:Inc/queue.h   **** /* Typedefs ------------------------------------------------------------------*/
  14:Inc/queue.h   **** typedef struct
  15:Inc/queue.h   **** {
  16:Inc/queue.h   ****     uint16_t tail;
  17:Inc/queue.h   ****     uint16_t head;
  18:Inc/queue.h   ****     uint16_t size;
  19:Inc/queue.h   ****     uint8_t *pContainer;
  20:Inc/queue.h   **** } Queue_Buffer_t;
  21:Inc/queue.h   **** 
  22:Inc/queue.h   **** /* Exported functions --------------------------------------------------------*/
  23:Inc/queue.h   **** /**
  24:Inc/queue.h   ****     * @brief    Creates a buffer, allocates it's memory and returns the pointer
  25:Inc/queue.h   ****     *   of it.
  26:Inc/queue.h   ****     * @param    buff: Pointer to buffer.
  27:Inc/queue.h   ****     * @param    container: Pointer of the data container.
  28:Inc/queue.h   ****     * @param    size: Size of the data container.
  29:Inc/queue.h   ****     */
  30:Inc/queue.h   **** static inline void Queue_InitBuffer(Queue_Buffer_t *buff, uint8_t *container, uint16_t size)
  43              		.loc 2 30 20 view .LVU5
  44              	.LBB111:
  31:Inc/queue.h   **** {
  32:Inc/queue.h   ****     /* Initialize buffer. */
ARM GAS  /tmp/ccCyY6XY.s 			page 4


  33:Inc/queue.h   ****     buff->head = 0;
  45              		.loc 2 33 5 view .LVU6
  46              		.loc 2 33 16 is_stmt 0 view .LVU7
  47 0006 0B4B     		ldr	r3, .L3+4
  48 0008 0022     		movs	r2, #0
  49 000a 5A80     		strh	r2, [r3, #2]	@ movhi
  34:Inc/queue.h   ****     buff->tail = 0;
  50              		.loc 2 34 5 is_stmt 1 view .LVU8
  51              		.loc 2 34 16 is_stmt 0 view .LVU9
  52 000c 1A80     		strh	r2, [r3]	@ movhi
  35:Inc/queue.h   ****     buff->pContainer = container;
  53              		.loc 2 35 5 is_stmt 1 view .LVU10
  54              		.loc 2 35 22 is_stmt 0 view .LVU11
  55 000e 0A49     		ldr	r1, .L3+8
  56 0010 9960     		str	r1, [r3, #8]
  36:Inc/queue.h   ****     buff->size = size;
  57              		.loc 2 36 5 is_stmt 1 view .LVU12
  58              		.loc 2 36 16 is_stmt 0 view .LVU13
  59 0012 4FF48071 		mov	r1, #256
  60 0016 9980     		strh	r1, [r3, #4]	@ movhi
  61              	.LVL1:
  62              		.loc 2 36 16 view .LVU14
  63              	.LBE111:
  64              	.LBE110:
  97:Src/nexcore.c ****     Queue_InitBuffer(&RxQueue, RxQueueContainer, NEXCORE_RX_QUEUE_SIZE);
  65              		.loc 1 97 5 is_stmt 1 view .LVU15
  66              	.LBB112:
  67              	.LBI112:
  30:Inc/queue.h   **** {
  68              		.loc 2 30 20 view .LVU16
  69              	.LBB113:
  33:Inc/queue.h   ****     buff->tail = 0;
  70              		.loc 2 33 5 view .LVU17
  33:Inc/queue.h   ****     buff->tail = 0;
  71              		.loc 2 33 16 is_stmt 0 view .LVU18
  72 0018 084B     		ldr	r3, .L3+12
  73 001a 5A80     		strh	r2, [r3, #2]	@ movhi
  34:Inc/queue.h   ****     buff->pContainer = container;
  74              		.loc 2 34 5 is_stmt 1 view .LVU19
  34:Inc/queue.h   ****     buff->pContainer = container;
  75              		.loc 2 34 16 is_stmt 0 view .LVU20
  76 001c 1A80     		strh	r2, [r3]	@ movhi
  35:Inc/queue.h   ****     buff->size = size;
  77              		.loc 2 35 5 is_stmt 1 view .LVU21
  35:Inc/queue.h   ****     buff->size = size;
  78              		.loc 2 35 22 is_stmt 0 view .LVU22
  79 001e 084A     		ldr	r2, .L3+16
  80 0020 9A60     		str	r2, [r3, #8]
  81              		.loc 2 36 5 is_stmt 1 view .LVU23
  82              		.loc 2 36 16 is_stmt 0 view .LVU24
  83 0022 4022     		movs	r2, #64
  84 0024 9A80     		strh	r2, [r3, #4]	@ movhi
  85              	.LVL2:
  86              		.loc 2 36 16 view .LVU25
  87              	.LBE113:
  88              	.LBE112:
  98:Src/nexcore.c **** 
ARM GAS  /tmp/ccCyY6XY.s 			page 5


  99:Src/nexcore.c ****     Status = READY;
  89              		.loc 1 99 5 is_stmt 1 view .LVU26
  90              		.loc 1 99 12 is_stmt 0 view .LVU27
  91 0026 024B     		ldr	r3, .L3
  92 0028 0122     		movs	r2, #1
  93 002a 1A70     		strb	r2, [r3]
  94              	.L1:
 100:Src/nexcore.c **** }
  95              		.loc 1 100 1 view .LVU28
  96 002c 7047     		bx	lr
  97              	.L4:
  98 002e 00BF     		.align	2
  99              	.L3:
 100 0030 00000000 		.word	.LANCHOR0
 101 0034 00000000 		.word	.LANCHOR1
 102 0038 00000000 		.word	.LANCHOR2
 103 003c 00000000 		.word	.LANCHOR3
 104 0040 00000000 		.word	.LANCHOR4
 105              		.cfi_endproc
 106              	.LFE85:
 108              		.section	.text.Nexcore_Stop,"ax",%progbits
 109              		.align	1
 110              		.global	Nexcore_Stop
 111              		.syntax unified
 112              		.thumb
 113              		.thumb_func
 114              		.fpu softvfp
 116              	Nexcore_Stop:
 117              	.LFB88:
 101:Src/nexcore.c **** 
 102:Src/nexcore.c **** /**
 103:Src/nexcore.c ****  * @brief Starts the operation of the module.
 104:Src/nexcore.c ****  */
 105:Src/nexcore.c **** void Nexcore_Start(void)
 106:Src/nexcore.c **** {
 107:Src/nexcore.c ****     if (Status != READY)
 108:Src/nexcore.c ****     {
 109:Src/nexcore.c ****         return;
 110:Src/nexcore.c ****     }
 111:Src/nexcore.c **** 
 112:Src/nexcore.c ****     // Clear RX and TX queues.
 113:Src/nexcore.c ****     Queue_ClearBuffer(&RxQueue);
 114:Src/nexcore.c ****     Queue_ClearBuffer(&TxQueue);
 115:Src/nexcore.c **** 
 116:Src/nexcore.c ****     // Start runtime variables.
 117:Src/nexcore.c ****     Busy = FALSE;
 118:Src/nexcore.c ****     TransactionNumerator = 0;
 119:Src/nexcore.c **** 
 120:Src/nexcore.c ****     // Enqueue command response type setting operation.
 121:Src/nexcore.c ****     char sys_variable[] = "bkcmd";
 122:Src/nexcore.c ****     Nexcore_Set(sys_variable, NULL, "3");
 123:Src/nexcore.c **** 
 124:Src/nexcore.c ****     Status = OPERATING;
 125:Src/nexcore.c **** }
 126:Src/nexcore.c **** 
 127:Src/nexcore.c **** /**
 128:Src/nexcore.c ****  * @brief This function should be called to transfer control
ARM GAS  /tmp/ccCyY6XY.s 			page 6


 129:Src/nexcore.c ****  * to this module to complete it's pending operations.
 130:Src/nexcore.c ****  */
 131:Src/nexcore.c **** void Nexcore_Execute(void)
 132:Src/nexcore.c **** {
 133:Src/nexcore.c ****     if (Status != OPERATING)
 134:Src/nexcore.c ****     {
 135:Src/nexcore.c ****         return;
 136:Src/nexcore.c ****     }
 137:Src/nexcore.c **** 
 138:Src/nexcore.c ****     if (Busy)
 139:Src/nexcore.c ****     {
 140:Src/nexcore.c ****         // Transmit the data, if there are bytes to send.
 141:Src/nexcore.c ****         if (ActiveTransactionBytesToSend)
 142:Src/nexcore.c ****         {
 143:Src/nexcore.c ****             // Enqueue data to serial tx buffer.
 144:Src/nexcore.c ****             while (ActiveTransactionBytesToSend)
 145:Src/nexcore.c ****             {
 146:Src/nexcore.c ****                 if (!Serial_TxBuffAvailable())
 147:Src/nexcore.c ****                 {
 148:Src/nexcore.c ****                     break;
 149:Src/nexcore.c ****                 }
 150:Src/nexcore.c **** 
 151:Src/nexcore.c ****                 uint8_t tfreg;
 152:Src/nexcore.c ****                 if (ActiveTransactionBytesToSend > sizeof(MessageTerminator))
 153:Src/nexcore.c ****                 {
 154:Src/nexcore.c ****                     tfreg = Queue_Dequeue(&TxQueue);
 155:Src/nexcore.c ****                 }
 156:Src/nexcore.c ****                 else
 157:Src/nexcore.c ****                 {
 158:Src/nexcore.c ****                     tfreg = MessageTerminator[sizeof(MessageTerminator) - ActiveTransactionBytesToS
 159:Src/nexcore.c ****                 }
 160:Src/nexcore.c **** 
 161:Src/nexcore.c ****                 Serial_Transmit(&tfreg, sizeof(tfreg));
 162:Src/nexcore.c ****                 ActiveTransactionBytesToSend--;
 163:Src/nexcore.c ****             }
 164:Src/nexcore.c **** 
 165:Src/nexcore.c ****             if (ActiveTransactionBytesToSend == 0)
 166:Src/nexcore.c ****             {
 167:Src/nexcore.c ****                 // Get rid of null element.
 168:Src/nexcore.c ****                 Queue_Dequeue(&TxQueue);
 169:Src/nexcore.c ****                 ResponseStartTick = HAL_GetTick();
 170:Src/nexcore.c ****             }
 171:Src/nexcore.c ****         }
 172:Src/nexcore.c **** 
 173:Src/nexcore.c ****         // Check for transaction timeout if all the bytes are either sent or
 174:Src/nexcore.c ****         //transfered to the transmit buffer.
 175:Src/nexcore.c ****         if (!ActiveTransactionBytesToSend)
 176:Src/nexcore.c ****         {
 177:Src/nexcore.c ****             if (HAL_GetTick() - ResponseStartTick > NEXCORE_TRANSACTION_TIMEOUT)
 178:Src/nexcore.c ****             {
 179:Src/nexcore.c ****                 // Skip this transaction and invoke no response error.
 180:Src/nexcore.c ****                 Nexcore_ErrorCb(ActiveTransactionId, NEXCORE_ERROR_NO_RESPONSE);
 181:Src/nexcore.c ****                 Busy = FALSE;
 182:Src/nexcore.c ****             }
 183:Src/nexcore.c ****         }
 184:Src/nexcore.c ****     }
 185:Src/nexcore.c ****     else
ARM GAS  /tmp/ccCyY6XY.s 			page 7


 186:Src/nexcore.c ****     {
 187:Src/nexcore.c ****         uint16_t message_end_idx;
 188:Src/nexcore.c ****         message_end_idx = Queue_Search(&TxQueue, '\0');
 189:Src/nexcore.c **** 
 190:Src/nexcore.c ****         // If message end has been found;
 191:Src/nexcore.c ****         if (message_end_idx != 0xFFFF)
 192:Src/nexcore.c ****         {
 193:Src/nexcore.c ****             // Parse active transaction id.
 194:Src/nexcore.c ****             ActiveTransactionId = Queue_Dequeue(&TxQueue);
 195:Src/nexcore.c ****             message_end_idx--;
 196:Src/nexcore.c **** 
 197:Src/nexcore.c ****             // Set bytes to send.
 198:Src/nexcore.c ****             ActiveTransactionBytesToSend = message_end_idx + sizeof(MessageTerminator);
 199:Src/nexcore.c ****             Busy = TRUE;
 200:Src/nexcore.c ****         }
 201:Src/nexcore.c ****     }
 202:Src/nexcore.c **** 
 203:Src/nexcore.c ****     // Check if any message received.
 204:Src/nexcore.c ****     {
 205:Src/nexcore.c ****         uint16_t message_length;
 206:Src/nexcore.c ****         message_length = Queue_SearchArr(&RxQueue, MessageTerminator,
 207:Src/nexcore.c ****                                          sizeof(MessageTerminator));
 208:Src/nexcore.c **** 
 209:Src/nexcore.c ****         // Search for terminate flag.
 210:Src/nexcore.c ****         if (message_length != 0xFFFF)
 211:Src/nexcore.c ****         {
 212:Src/nexcore.c ****             // If the terminate flag is found, evaluate
 213:Src/nexcore.c ****             //received message(terminator not included in length).
 214:Src/nexcore.c ****             messageReceived(message_length);
 215:Src/nexcore.c **** 
 216:Src/nexcore.c ****             // If it was busy; clear the busy flag.
 217:Src/nexcore.c ****             if (Busy)
 218:Src/nexcore.c ****             {
 219:Src/nexcore.c ****                 Busy = FALSE;
 220:Src/nexcore.c ****             }
 221:Src/nexcore.c ****         }
 222:Src/nexcore.c ****     }
 223:Src/nexcore.c **** }
 224:Src/nexcore.c **** 
 225:Src/nexcore.c **** /**
 226:Src/nexcore.c ****  * @brief Stops the module.
 227:Src/nexcore.c ****  */
 228:Src/nexcore.c **** void Nexcore_Stop(void)
 229:Src/nexcore.c **** {
 118              		.loc 1 229 1 is_stmt 1 view -0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122 0000 08B5     		push	{r3, lr}
 123              	.LCFI0:
 124              		.cfi_def_cfa_offset 8
 125              		.cfi_offset 3, -8
 126              		.cfi_offset 14, -4
 230:Src/nexcore.c ****     if (Status != OPERATING)
 127              		.loc 1 230 5 view .LVU30
 128              		.loc 1 230 16 is_stmt 0 view .LVU31
 129 0002 064B     		ldr	r3, .L9
ARM GAS  /tmp/ccCyY6XY.s 			page 8


 130 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 131              		.loc 1 230 8 view .LVU32
 132 0006 022B     		cmp	r3, #2
 133 0008 00D0     		beq	.L8
 134              	.L5:
 231:Src/nexcore.c ****     {
 232:Src/nexcore.c ****         return;
 233:Src/nexcore.c ****     }
 234:Src/nexcore.c **** 
 235:Src/nexcore.c ****     HAL_UART_Abort_IT(&huart1);
 236:Src/nexcore.c ****     Status = READY;
 237:Src/nexcore.c **** }
 135              		.loc 1 237 1 view .LVU33
 136 000a 08BD     		pop	{r3, pc}
 137              	.L8:
 235:Src/nexcore.c ****     Status = READY;
 138              		.loc 1 235 5 is_stmt 1 view .LVU34
 139 000c 0448     		ldr	r0, .L9+4
 140 000e FFF7FEFF 		bl	HAL_UART_Abort_IT
 141              	.LVL3:
 236:Src/nexcore.c **** }
 142              		.loc 1 236 5 view .LVU35
 236:Src/nexcore.c **** }
 143              		.loc 1 236 12 is_stmt 0 view .LVU36
 144 0012 024B     		ldr	r3, .L9
 145 0014 0122     		movs	r2, #1
 146 0016 1A70     		strb	r2, [r3]
 147 0018 F7E7     		b	.L5
 148              	.L10:
 149 001a 00BF     		.align	2
 150              	.L9:
 151 001c 00000000 		.word	.LANCHOR0
 152 0020 00000000 		.word	huart1
 153              		.cfi_endproc
 154              	.LFE88:
 156              		.section	.text.Nexcore_EnqueueMsg,"ax",%progbits
 157              		.align	1
 158              		.global	Nexcore_EnqueueMsg
 159              		.syntax unified
 160              		.thumb
 161              		.thumb_func
 162              		.fpu softvfp
 164              	Nexcore_EnqueueMsg:
 165              	.LVL4:
 166              	.LFB89:
 238:Src/nexcore.c **** 
 239:Src/nexcore.c **** /**
 240:Src/nexcore.c ****  * @brief Concats the strings given as chunks and enqueues them
 241:Src/nexcore.c ****  * to the module's TxQueue. 
 242:Src/nexcore.c ****  * 
 243:Src/nexcore.c ****  * @param chunks: Array of pointers to the strings. 
 244:Src/nexcore.c ****  * @param chunkCount: Number of chunks to be concatted.
 245:Src/nexcore.c ****  * 
 246:Src/nexcore.c ****  * @retval TransactionId. 
 247:Src/nexcore.c ****  */
 248:Src/nexcore.c **** uint8_t Nexcore_EnqueueMsg(char **chunks, uint8_t chunkCount)
 249:Src/nexcore.c **** {
ARM GAS  /tmp/ccCyY6XY.s 			page 9


 167              		.loc 1 249 1 is_stmt 1 view -0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              		.loc 1 249 1 is_stmt 0 view .LVU38
 172 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 173              	.LCFI1:
 174              		.cfi_def_cfa_offset 24
 175              		.cfi_offset 4, -24
 176              		.cfi_offset 5, -20
 177              		.cfi_offset 6, -16
 178              		.cfi_offset 7, -12
 179              		.cfi_offset 8, -8
 180              		.cfi_offset 14, -4
 181 0004 0746     		mov	r7, r0
 182 0006 0E46     		mov	r6, r1
 250:Src/nexcore.c ****     // Enqueue transaction numerator.
 251:Src/nexcore.c ****     Queue_Enqueue(&TxQueue, TransactionNumerator);
 183              		.loc 1 251 5 is_stmt 1 view .LVU39
 184 0008 254B     		ldr	r3, .L27
 185 000a 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 186              	.LVL5:
 187              	.LBB114:
 188              	.LBI114:
  37:Inc/queue.h   **** }
  38:Inc/queue.h   **** 
  39:Inc/queue.h   **** /**
  40:Inc/queue.h   ****     * @brief    Clears the addressed buffer.
  41:Inc/queue.h   ****     *
  42:Inc/queue.h   ****     * @param    buff:Pointer to the buffer.
  43:Inc/queue.h   ****     */
  44:Inc/queue.h   **** static inline void Queue_ClearBuffer(Queue_Buffer_t *buff)
  45:Inc/queue.h   **** {
  46:Inc/queue.h   ****     buff->head = buff->tail;
  47:Inc/queue.h   **** }
  48:Inc/queue.h   **** 
  49:Inc/queue.h   **** /**
  50:Inc/queue.h   ****     * @brief    Enqueues byte to the given buffer.
  51:Inc/queue.h   ****     *
  52:Inc/queue.h   ****     * @param    buff: Pointer to the buffer.
  53:Inc/queue.h   ****     * @param    byte: Byte to be enqueued.
  54:Inc/queue.h   ****     */
  55:Inc/queue.h   **** static inline void Queue_Enqueue(Queue_Buffer_t *buff, uint8_t byte)
 189              		.loc 2 55 20 view .LVU40
 190              	.LBB115:
  56:Inc/queue.h   **** {
  57:Inc/queue.h   ****     uint16_t __tail = buff->tail;
 191              		.loc 2 57 5 view .LVU41
 192              		.loc 2 57 14 is_stmt 0 view .LVU42
 193 000c 254A     		ldr	r2, .L27+4
 194 000e 1188     		ldrh	r1, [r2]
 195              	.LVL6:
  58:Inc/queue.h   **** 
  59:Inc/queue.h   ****     // Set new tail element and update the tail value.
  60:Inc/queue.h   ****     buff->pContainer[__tail++] = byte;
 196              		.loc 2 60 5 is_stmt 1 view .LVU43
 197              		.loc 2 60 9 is_stmt 0 view .LVU44
ARM GAS  /tmp/ccCyY6XY.s 			page 10


 198 0010 9068     		ldr	r0, [r2, #8]
 199              	.LVL7:
 200              		.loc 2 60 28 view .LVU45
 201 0012 4B1C     		adds	r3, r1, #1
 202 0014 9BB2     		uxth	r3, r3
 203              	.LVL8:
 204              		.loc 2 60 32 view .LVU46
 205 0016 4454     		strb	r4, [r0, r1]
  61:Inc/queue.h   ****     if (__tail == buff->size)
 206              		.loc 2 61 5 is_stmt 1 view .LVU47
 207              		.loc 2 61 23 is_stmt 0 view .LVU48
 208 0018 9288     		ldrh	r2, [r2, #4]
 209              		.loc 2 61 8 view .LVU49
 210 001a 9342     		cmp	r3, r2
 211 001c 03D0     		beq	.L23
 212              	.LVL9:
 213              	.L12:
  62:Inc/queue.h   ****     {
  63:Inc/queue.h   ****         __tail = 0;
  64:Inc/queue.h   ****     }
  65:Inc/queue.h   **** 
  66:Inc/queue.h   ****     buff->tail = __tail;
 214              		.loc 2 66 5 is_stmt 1 view .LVU50
 215              		.loc 2 66 16 is_stmt 0 view .LVU51
 216 001e 214A     		ldr	r2, .L27+4
 217 0020 1380     		strh	r3, [r2]	@ movhi
 218              	.LVL10:
 219              		.loc 2 66 16 view .LVU52
 220              	.LBE115:
 221              	.LBE114:
 252:Src/nexcore.c **** 
 253:Src/nexcore.c ****     // Enqueue chunks(the strings which the message is composed of).
 254:Src/nexcore.c ****     for (uint8_t i = 0; i < chunkCount; i++)
 222              		.loc 1 254 5 is_stmt 1 view .LVU53
 223              	.LBB117:
 224              		.loc 1 254 10 view .LVU54
 225              		.loc 1 254 18 is_stmt 0 view .LVU55
 226 0022 0025     		movs	r5, #0
 227              		.loc 1 254 5 view .LVU56
 228 0024 1AE0     		b	.L13
 229              	.LVL11:
 230              	.L23:
 231              		.loc 1 254 5 view .LVU57
 232              	.LBE117:
 233              	.LBB124:
 234              	.LBB116:
  63:Inc/queue.h   ****     }
 235              		.loc 2 63 16 view .LVU58
 236 0026 0023     		movs	r3, #0
 237              	.LVL12:
  63:Inc/queue.h   ****     }
 238              		.loc 2 63 16 view .LVU59
 239 0028 F9E7     		b	.L12
 240              	.LVL13:
 241              	.L20:
  63:Inc/queue.h   ****     }
 242              		.loc 2 63 16 view .LVU60
ARM GAS  /tmp/ccCyY6XY.s 			page 11


 243              	.LBE116:
 244              	.LBE124:
 245              	.LBB125:
 246              	.LBB118:
 247              	.LBB119:
 248              	.LBB120:
  67:Inc/queue.h   **** }
  68:Inc/queue.h   **** 
  69:Inc/queue.h   **** /**
  70:Inc/queue.h   ****     * @brief    Enqueues byte array to the given buffer.
  71:Inc/queue.h   ****     *
  72:Inc/queue.h   ****     * @param    buff: Pointer to the buffer.
  73:Inc/queue.h   ****     * @param    data: Pointer to byte array to be enqueued.
  74:Inc/queue.h   ****     */
  75:Inc/queue.h   **** static inline void Queue_EnqueueArr(Queue_Buffer_t *buff, uint8_t *data, uint16_t dataLength)
  76:Inc/queue.h   **** {
  77:Inc/queue.h   ****     uint16_t __tail = buff->tail;
  78:Inc/queue.h   **** 
  79:Inc/queue.h   ****     for (uint16_t i = 0; i < dataLength; i++)
  80:Inc/queue.h   ****     {
  81:Inc/queue.h   ****         buff->pContainer[__tail++] = data[i];
  82:Inc/queue.h   ****         if (__tail == buff->size)
  83:Inc/queue.h   ****         {
  84:Inc/queue.h   ****             __tail = 0;
 249              		.loc 2 84 20 view .LVU61
 250 002a 4FF0000C 		mov	ip, #0
 251              	.L15:
 252              	.LVL14:
  79:Inc/queue.h   ****     {
 253              		.loc 2 79 43 view .LVU62
 254 002e 0133     		adds	r3, r3, #1
 255              	.LVL15:
  79:Inc/queue.h   ****     {
 256              		.loc 2 79 43 view .LVU63
 257 0030 9BB2     		uxth	r3, r3
 258              	.LVL16:
 259              	.L14:
  79:Inc/queue.h   ****     {
 260              		.loc 2 79 5 view .LVU64
 261 0032 9845     		cmp	r8, r3
 262 0034 0DD9     		bls	.L24
  81:Inc/queue.h   ****         if (__tail == buff->size)
 263              		.loc 2 81 9 is_stmt 1 view .LVU65
  81:Inc/queue.h   ****         if (__tail == buff->size)
 264              		.loc 2 81 13 is_stmt 0 view .LVU66
 265 0036 1B48     		ldr	r0, .L27+4
 266 0038 8168     		ldr	r1, [r0, #8]
  81:Inc/queue.h   ****         if (__tail == buff->size)
 267              		.loc 2 81 32 view .LVU67
 268 003a 0CF10102 		add	r2, ip, #1
 269 003e 92B2     		uxth	r2, r2
 270              	.LVL17:
  81:Inc/queue.h   ****         if (__tail == buff->size)
 271              		.loc 2 81 42 view .LVU68
 272 0040 14F803E0 		ldrb	lr, [r4, r3]	@ zero_extendqisi2
  81:Inc/queue.h   ****         if (__tail == buff->size)
 273              		.loc 2 81 36 view .LVU69
ARM GAS  /tmp/ccCyY6XY.s 			page 12


 274 0044 01F80CE0 		strb	lr, [r1, ip]
  82:Inc/queue.h   ****         {
 275              		.loc 2 82 9 is_stmt 1 view .LVU70
  82:Inc/queue.h   ****         {
 276              		.loc 2 82 27 is_stmt 0 view .LVU71
 277 0048 8188     		ldrh	r1, [r0, #4]
  82:Inc/queue.h   ****         {
 278              		.loc 2 82 12 view .LVU72
 279 004a 8A42     		cmp	r2, r1
 280 004c EDD0     		beq	.L20
  81:Inc/queue.h   ****         if (__tail == buff->size)
 281              		.loc 2 81 32 view .LVU73
 282 004e 9446     		mov	ip, r2
 283 0050 EDE7     		b	.L15
 284              	.LVL18:
 285              	.L24:
  81:Inc/queue.h   ****         if (__tail == buff->size)
 286              		.loc 2 81 32 view .LVU74
 287              	.LBE120:
  85:Inc/queue.h   ****         }
  86:Inc/queue.h   ****     }
  87:Inc/queue.h   **** 
  88:Inc/queue.h   ****     buff->tail = __tail;
 288              		.loc 2 88 5 is_stmt 1 view .LVU75
 289              		.loc 2 88 16 is_stmt 0 view .LVU76
 290 0052 144B     		ldr	r3, .L27+4
 291              	.LVL19:
 292              		.loc 2 88 16 view .LVU77
 293 0054 A3F800C0 		strh	ip, [r3]	@ movhi
 294              	.LVL20:
 295              		.loc 2 88 16 view .LVU78
 296              	.LBE119:
 297              	.LBE118:
 298              		.loc 1 254 42 view .LVU79
 299 0058 0135     		adds	r5, r5, #1
 300              	.LVL21:
 301              		.loc 1 254 42 view .LVU80
 302 005a EDB2     		uxtb	r5, r5
 303              	.LVL22:
 304              	.L13:
 305              		.loc 1 254 5 discriminator 1 view .LVU81
 306 005c B542     		cmp	r5, r6
 307 005e 0AD2     		bcs	.L25
 255:Src/nexcore.c ****     {
 256:Src/nexcore.c ****         Queue_EnqueueArr(&TxQueue, (uint8_t *)chunks[i], strLen(chunks[i]));
 308              		.loc 1 256 9 is_stmt 1 discriminator 3 view .LVU82
 309 0060 57F82540 		ldr	r4, [r7, r5, lsl #2]
 310 0064 2046     		mov	r0, r4
 311 0066 FFF7FEFF 		bl	strLen
 312              	.LVL23:
 313 006a 8046     		mov	r8, r0
 314              	.LVL24:
 315              	.LBB123:
 316              	.LBI118:
  75:Inc/queue.h   **** {
 317              		.loc 2 75 20 discriminator 3 view .LVU83
 318              	.LBB122:
ARM GAS  /tmp/ccCyY6XY.s 			page 13


  77:Inc/queue.h   **** 
 319              		.loc 2 77 5 discriminator 3 view .LVU84
  77:Inc/queue.h   **** 
 320              		.loc 2 77 14 is_stmt 0 discriminator 3 view .LVU85
 321 006c 0D4B     		ldr	r3, .L27+4
 322 006e B3F800C0 		ldrh	ip, [r3]
 323              	.LVL25:
  79:Inc/queue.h   ****     {
 324              		.loc 2 79 5 is_stmt 1 discriminator 3 view .LVU86
 325              	.LBB121:
  79:Inc/queue.h   ****     {
 326              		.loc 2 79 10 discriminator 3 view .LVU87
  79:Inc/queue.h   ****     {
 327              		.loc 2 79 19 is_stmt 0 discriminator 3 view .LVU88
 328 0072 0023     		movs	r3, #0
 329 0074 DDE7     		b	.L14
 330              	.LVL26:
 331              	.L25:
  79:Inc/queue.h   ****     {
 332              		.loc 2 79 19 discriminator 3 view .LVU89
 333              	.LBE121:
 334              	.LBE122:
 335              	.LBE123:
 336              	.LBE125:
 257:Src/nexcore.c ****     }
 258:Src/nexcore.c **** 
 259:Src/nexcore.c ****     // Enqueue null character.
 260:Src/nexcore.c ****     Queue_Enqueue(&TxQueue, '\0');
 337              		.loc 1 260 5 is_stmt 1 view .LVU90
 338              	.LBB126:
 339              	.LBI126:
  55:Inc/queue.h   **** {
 340              		.loc 2 55 20 view .LVU91
 341              	.LBB127:
  57:Inc/queue.h   **** 
 342              		.loc 2 57 5 view .LVU92
  57:Inc/queue.h   **** 
 343              		.loc 2 57 14 is_stmt 0 view .LVU93
 344 0076 0B4A     		ldr	r2, .L27+4
 345 0078 1188     		ldrh	r1, [r2]
 346              	.LVL27:
  60:Inc/queue.h   ****     if (__tail == buff->size)
 347              		.loc 2 60 5 is_stmt 1 view .LVU94
  60:Inc/queue.h   ****     if (__tail == buff->size)
 348              		.loc 2 60 9 is_stmt 0 view .LVU95
 349 007a 9068     		ldr	r0, [r2, #8]
  60:Inc/queue.h   ****     if (__tail == buff->size)
 350              		.loc 2 60 28 view .LVU96
 351 007c 4B1C     		adds	r3, r1, #1
 352 007e 9BB2     		uxth	r3, r3
 353              	.LVL28:
  60:Inc/queue.h   ****     if (__tail == buff->size)
 354              		.loc 2 60 32 view .LVU97
 355 0080 0024     		movs	r4, #0
 356 0082 4454     		strb	r4, [r0, r1]
  61:Inc/queue.h   ****     {
 357              		.loc 2 61 5 is_stmt 1 view .LVU98
ARM GAS  /tmp/ccCyY6XY.s 			page 14


  61:Inc/queue.h   ****     {
 358              		.loc 2 61 23 is_stmt 0 view .LVU99
 359 0084 9288     		ldrh	r2, [r2, #4]
  61:Inc/queue.h   ****     {
 360              		.loc 2 61 8 view .LVU100
 361 0086 9342     		cmp	r3, r2
 362 0088 07D0     		beq	.L26
 363              	.LVL29:
 364              	.L18:
  66:Inc/queue.h   **** }
 365              		.loc 2 66 5 is_stmt 1 view .LVU101
  66:Inc/queue.h   **** }
 366              		.loc 2 66 16 is_stmt 0 view .LVU102
 367 008a 064A     		ldr	r2, .L27+4
 368 008c 1380     		strh	r3, [r2]	@ movhi
 369              	.LVL30:
  66:Inc/queue.h   **** }
 370              		.loc 2 66 16 view .LVU103
 371              	.LBE127:
 372              	.LBE126:
 261:Src/nexcore.c **** 
 262:Src/nexcore.c ****     return TransactionNumerator++;
 373              		.loc 1 262 5 is_stmt 1 view .LVU104
 374              		.loc 1 262 32 is_stmt 0 view .LVU105
 375 008e 044B     		ldr	r3, .L27
 376 0090 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 377 0092 421C     		adds	r2, r0, #1
 378 0094 1A70     		strb	r2, [r3]
 263:Src/nexcore.c **** }
 379              		.loc 1 263 1 view .LVU106
 380 0096 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 381              	.LVL31:
 382              	.L26:
 383              	.LBB129:
 384              	.LBB128:
  63:Inc/queue.h   ****     }
 385              		.loc 2 63 16 view .LVU107
 386 009a 2346     		mov	r3, r4
 387              	.LVL32:
  63:Inc/queue.h   ****     }
 388              		.loc 2 63 16 view .LVU108
 389 009c F5E7     		b	.L18
 390              	.L28:
 391 009e 00BF     		.align	2
 392              	.L27:
 393 00a0 00000000 		.word	.LANCHOR5
 394 00a4 00000000 		.word	.LANCHOR1
 395              	.LBE128:
 396              	.LBE129:
 397              		.cfi_endproc
 398              	.LFE89:
 400              		.section	.text.Nexcore_Get,"ax",%progbits
 401              		.align	1
 402              		.global	Nexcore_Get
 403              		.syntax unified
 404              		.thumb
 405              		.thumb_func
ARM GAS  /tmp/ccCyY6XY.s 			page 15


 406              		.fpu softvfp
 408              	Nexcore_Get:
 409              	.LVL33:
 410              	.LFB90:
 264:Src/nexcore.c **** 
 265:Src/nexcore.c **** /**
 266:Src/nexcore.c ****  * @brief Gets the value of a component's attribute or a system variable.
 267:Src/nexcore.c ****  * 
 268:Src/nexcore.c ****  * @param name: Name of the component or the system variable.
 269:Src/nexcore.c ****  * @param attribute: Name of the component's attribute. NULL pointer 
 270:Src/nexcore.c ****  * if system variable is to be get.
 271:Src/nexcore.c ****  * 
 272:Src/nexcore.c ****  * @retval TransactionId.
 273:Src/nexcore.c ****  */
 274:Src/nexcore.c **** uint8_t Nexcore_Get(char *name, char *attribute)
 275:Src/nexcore.c **** {
 411              		.loc 1 275 1 is_stmt 1 view -0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 32
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 415              		.loc 1 275 1 is_stmt 0 view .LVU110
 416 0000 10B5     		push	{r4, lr}
 417              	.LCFI2:
 418              		.cfi_def_cfa_offset 8
 419              		.cfi_offset 4, -8
 420              		.cfi_offset 14, -4
 421 0002 88B0     		sub	sp, sp, #32
 422              	.LCFI3:
 423              		.cfi_def_cfa_offset 40
 424 0004 0446     		mov	r4, r0
 425 0006 0A46     		mov	r2, r1
 276:Src/nexcore.c ****     uint8_t idx = 0;
 426              		.loc 1 276 5 is_stmt 1 view .LVU111
 427              	.LVL34:
 277:Src/nexcore.c ****     char *chunks[4];
 428              		.loc 1 277 5 view .LVU112
 278:Src/nexcore.c ****     char cmd[] = "get ";
 429              		.loc 1 278 5 view .LVU113
 430              		.loc 1 278 10 is_stmt 0 view .LVU114
 431 0008 0B4B     		ldr	r3, .L33
 432 000a 93E80300 		ldm	r3, {r0, r1}
 433              	.LVL35:
 434              		.loc 1 278 10 view .LVU115
 435 000e 0290     		str	r0, [sp, #8]
 436 0010 8DF80C10 		strb	r1, [sp, #12]
 279:Src/nexcore.c ****     char op_dot[] = ".";
 437              		.loc 1 279 5 is_stmt 1 view .LVU116
 438              		.loc 1 279 10 is_stmt 0 view .LVU117
 439 0014 2E23     		movs	r3, #46
 440 0016 ADF80430 		strh	r3, [sp, #4]	@ movhi
 280:Src/nexcore.c **** 
 281:Src/nexcore.c ****     chunks[idx++] = cmd;
 441              		.loc 1 281 5 is_stmt 1 view .LVU118
 442              	.LVL36:
 443              		.loc 1 281 19 is_stmt 0 view .LVU119
 444 001a 02AB     		add	r3, sp, #8
 445 001c 0493     		str	r3, [sp, #16]
ARM GAS  /tmp/ccCyY6XY.s 			page 16


 282:Src/nexcore.c ****     chunks[idx++] = name;
 446              		.loc 1 282 5 is_stmt 1 view .LVU120
 447              	.LVL37:
 448              		.loc 1 282 19 is_stmt 0 view .LVU121
 449 001e 0594     		str	r4, [sp, #20]
 283:Src/nexcore.c ****     if (attribute)
 450              		.loc 1 283 5 is_stmt 1 view .LVU122
 451              		.loc 1 283 8 is_stmt 0 view .LVU123
 452 0020 42B1     		cbz	r2, .L31
 284:Src/nexcore.c ****     {
 285:Src/nexcore.c ****         chunks[idx++] = op_dot;
 453              		.loc 1 285 9 is_stmt 1 view .LVU124
 454              	.LVL38:
 455              		.loc 1 285 23 is_stmt 0 view .LVU125
 456 0022 01AB     		add	r3, sp, #4
 457 0024 0693     		str	r3, [sp, #24]
 286:Src/nexcore.c ****         chunks[idx++] = attribute;
 458              		.loc 1 286 9 is_stmt 1 view .LVU126
 459              	.LVL39:
 460              		.loc 1 286 23 is_stmt 0 view .LVU127
 461 0026 0792     		str	r2, [sp, #28]
 462              		.loc 1 286 19 view .LVU128
 463 0028 0421     		movs	r1, #4
 464              	.LVL40:
 465              	.L30:
 287:Src/nexcore.c ****     }
 288:Src/nexcore.c **** 
 289:Src/nexcore.c ****     return Nexcore_EnqueueMsg(chunks, idx);
 466              		.loc 1 289 5 is_stmt 1 view .LVU129
 467              		.loc 1 289 12 is_stmt 0 view .LVU130
 468 002a 04A8     		add	r0, sp, #16
 469 002c FFF7FEFF 		bl	Nexcore_EnqueueMsg
 470              	.LVL41:
 290:Src/nexcore.c **** }
 471              		.loc 1 290 1 view .LVU131
 472 0030 08B0     		add	sp, sp, #32
 473              	.LCFI4:
 474              		.cfi_remember_state
 475              		.cfi_def_cfa_offset 8
 476              		@ sp needed
 477 0032 10BD     		pop	{r4, pc}
 478              	.LVL42:
 479              	.L31:
 480              	.LCFI5:
 481              		.cfi_restore_state
 282:Src/nexcore.c ****     if (attribute)
 482              		.loc 1 282 15 view .LVU132
 483 0034 0221     		movs	r1, #2
 484 0036 F8E7     		b	.L30
 485              	.L34:
 486              		.align	2
 487              	.L33:
 488 0038 00000000 		.word	.LC0
 489              		.cfi_endproc
 490              	.LFE90:
 492              		.section	.text.Nexcore_Set,"ax",%progbits
 493              		.align	1
ARM GAS  /tmp/ccCyY6XY.s 			page 17


 494              		.global	Nexcore_Set
 495              		.syntax unified
 496              		.thumb
 497              		.thumb_func
 498              		.fpu softvfp
 500              	Nexcore_Set:
 501              	.LVL43:
 502              	.LFB91:
 291:Src/nexcore.c **** 
 292:Src/nexcore.c **** /**
 293:Src/nexcore.c ****  * @brief Sets the value of a component's attribute or a system variable.
 294:Src/nexcore.c ****  * 
 295:Src/nexcore.c ****  * @param name: Name of the component or the system variable.
 296:Src/nexcore.c ****  * @param attribute: Name of the component's attribute. NULL pointer 
 297:Src/nexcore.c ****  * if system variable is to be set.
 298:Src/nexcore.c ****  * 
 299:Src/nexcore.c ****  * @retval TransactionId.
 300:Src/nexcore.c ****  */
 301:Src/nexcore.c **** uint8_t Nexcore_Set(char *componentName, char *attribute, char *txt)
 302:Src/nexcore.c **** {
 503              		.loc 1 302 1 is_stmt 1 view -0
 504              		.cfi_startproc
 505              		@ args = 0, pretend = 0, frame = 32
 506              		@ frame_needed = 0, uses_anonymous_args = 0
 507              		.loc 1 302 1 is_stmt 0 view .LVU134
 508 0000 10B5     		push	{r4, lr}
 509              	.LCFI6:
 510              		.cfi_def_cfa_offset 8
 511              		.cfi_offset 4, -8
 512              		.cfi_offset 14, -4
 513 0002 88B0     		sub	sp, sp, #32
 514              	.LCFI7:
 515              		.cfi_def_cfa_offset 40
 303:Src/nexcore.c ****     uint8_t idx = 0;
 516              		.loc 1 303 5 is_stmt 1 view .LVU135
 517              	.LVL44:
 304:Src/nexcore.c ****     char *chunks[5];
 518              		.loc 1 304 5 view .LVU136
 305:Src/nexcore.c ****     char op_dot[] = ".";
 519              		.loc 1 305 5 view .LVU137
 520              		.loc 1 305 10 is_stmt 0 view .LVU138
 521 0004 2E23     		movs	r3, #46
 522 0006 ADF80830 		strh	r3, [sp, #8]	@ movhi
 306:Src/nexcore.c ****     char op_assign[] = "=";
 523              		.loc 1 306 5 is_stmt 1 view .LVU139
 524              		.loc 1 306 10 is_stmt 0 view .LVU140
 525 000a 3D23     		movs	r3, #61
 526 000c ADF80430 		strh	r3, [sp, #4]	@ movhi
 307:Src/nexcore.c **** 
 308:Src/nexcore.c ****     chunks[idx++] = componentName;
 527              		.loc 1 308 5 is_stmt 1 view .LVU141
 528              	.LVL45:
 529              		.loc 1 308 19 is_stmt 0 view .LVU142
 530 0010 0390     		str	r0, [sp, #12]
 309:Src/nexcore.c **** 
 310:Src/nexcore.c ****     if (attribute)
 531              		.loc 1 310 5 is_stmt 1 view .LVU143
ARM GAS  /tmp/ccCyY6XY.s 			page 18


 532              		.loc 1 310 8 is_stmt 0 view .LVU144
 533 0012 B1B1     		cbz	r1, .L37
 534 0014 0B46     		mov	r3, r1
 311:Src/nexcore.c ****     {
 312:Src/nexcore.c ****         chunks[idx++] = op_dot;
 535              		.loc 1 312 9 is_stmt 1 view .LVU145
 536              	.LVL46:
 537              		.loc 1 312 23 is_stmt 0 view .LVU146
 538 0016 02A9     		add	r1, sp, #8
 539              	.LVL47:
 540              		.loc 1 312 23 view .LVU147
 541 0018 0491     		str	r1, [sp, #16]
 313:Src/nexcore.c ****         chunks[idx++] = attribute;
 542              		.loc 1 313 9 is_stmt 1 view .LVU148
 543              	.LVL48:
 544              		.loc 1 313 23 is_stmt 0 view .LVU149
 545 001a 0593     		str	r3, [sp, #20]
 546              		.loc 1 313 19 view .LVU150
 547 001c 0321     		movs	r1, #3
 548              	.LVL49:
 549              	.L36:
 314:Src/nexcore.c ****     }
 315:Src/nexcore.c **** 
 316:Src/nexcore.c ****     chunks[idx++] = op_assign;
 550              		.loc 1 316 5 is_stmt 1 view .LVU151
 551              		.loc 1 316 15 is_stmt 0 view .LVU152
 552 001e 4B1C     		adds	r3, r1, #1
 553              	.LVL50:
 554              		.loc 1 316 19 view .LVU153
 555 0020 08A8     		add	r0, sp, #32
 556              	.LVL51:
 557              		.loc 1 316 19 view .LVU154
 558 0022 00EB8100 		add	r0, r0, r1, lsl #2
 559 0026 01AC     		add	r4, sp, #4
 560 0028 40F8144C 		str	r4, [r0, #-20]
 561              	.LVL52:
 317:Src/nexcore.c ****     chunks[idx++] = txt;
 562              		.loc 1 317 5 is_stmt 1 view .LVU155
 563              		.loc 1 317 19 is_stmt 0 view .LVU156
 564 002c 08A8     		add	r0, sp, #32
 565 002e 00EB8303 		add	r3, r0, r3, lsl #2
 566 0032 43F8142C 		str	r2, [r3, #-20]
 318:Src/nexcore.c **** 
 319:Src/nexcore.c ****     return Nexcore_EnqueueMsg(chunks, idx);
 567              		.loc 1 319 5 is_stmt 1 view .LVU157
 568              		.loc 1 319 12 is_stmt 0 view .LVU158
 569 0036 0231     		adds	r1, r1, #2
 570              	.LVL53:
 571              		.loc 1 319 12 view .LVU159
 572 0038 03A8     		add	r0, sp, #12
 573 003a FFF7FEFF 		bl	Nexcore_EnqueueMsg
 574              	.LVL54:
 320:Src/nexcore.c **** }
 575              		.loc 1 320 1 view .LVU160
 576 003e 08B0     		add	sp, sp, #32
 577              	.LCFI8:
 578              		.cfi_remember_state
ARM GAS  /tmp/ccCyY6XY.s 			page 19


 579              		.cfi_def_cfa_offset 8
 580              		@ sp needed
 581 0040 10BD     		pop	{r4, pc}
 582              	.LVL55:
 583              	.L37:
 584              	.LCFI9:
 585              		.cfi_restore_state
 308:Src/nexcore.c **** 
 586              		.loc 1 308 15 view .LVU161
 587 0042 0121     		movs	r1, #1
 588              	.LVL56:
 308:Src/nexcore.c **** 
 589              		.loc 1 308 15 view .LVU162
 590 0044 EBE7     		b	.L36
 591              		.cfi_endproc
 592              	.LFE91:
 594              		.section	.text.Nexcore_Start,"ax",%progbits
 595              		.align	1
 596              		.global	Nexcore_Start
 597              		.syntax unified
 598              		.thumb
 599              		.thumb_func
 600              		.fpu softvfp
 602              	Nexcore_Start:
 603              	.LFB86:
 106:Src/nexcore.c ****     if (Status != READY)
 604              		.loc 1 106 1 is_stmt 1 view -0
 605              		.cfi_startproc
 606              		@ args = 0, pretend = 0, frame = 8
 607              		@ frame_needed = 0, uses_anonymous_args = 0
 107:Src/nexcore.c ****     {
 608              		.loc 1 107 5 view .LVU164
 107:Src/nexcore.c ****     {
 609              		.loc 1 107 16 is_stmt 0 view .LVU165
 610 0000 114B     		ldr	r3, .L47
 611 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 107:Src/nexcore.c ****     {
 612              		.loc 1 107 8 view .LVU166
 613 0004 012B     		cmp	r3, #1
 614 0006 00D0     		beq	.L46
 615 0008 7047     		bx	lr
 616              	.L46:
 106:Src/nexcore.c ****     if (Status != READY)
 617              		.loc 1 106 1 view .LVU167
 618 000a 00B5     		push	{lr}
 619              	.LCFI10:
 620              		.cfi_def_cfa_offset 4
 621              		.cfi_offset 14, -4
 622 000c 83B0     		sub	sp, sp, #12
 623              	.LCFI11:
 624              		.cfi_def_cfa_offset 16
 113:Src/nexcore.c ****     Queue_ClearBuffer(&TxQueue);
 625              		.loc 1 113 5 is_stmt 1 view .LVU168
 626              	.LVL57:
 627              	.LBB130:
 628              	.LBI130:
  44:Inc/queue.h   **** {
ARM GAS  /tmp/ccCyY6XY.s 			page 20


 629              		.loc 2 44 20 view .LVU169
 630              	.LBB131:
  46:Inc/queue.h   **** }
 631              		.loc 2 46 5 view .LVU170
  46:Inc/queue.h   **** }
 632              		.loc 2 46 22 is_stmt 0 view .LVU171
 633 000e 0F4B     		ldr	r3, .L47+4
 634 0010 1A88     		ldrh	r2, [r3]
  46:Inc/queue.h   **** }
 635              		.loc 2 46 16 view .LVU172
 636 0012 5A80     		strh	r2, [r3, #2]	@ movhi
 637              	.LVL58:
  46:Inc/queue.h   **** }
 638              		.loc 2 46 16 view .LVU173
 639              	.LBE131:
 640              	.LBE130:
 114:Src/nexcore.c **** 
 641              		.loc 1 114 5 is_stmt 1 view .LVU174
 642              	.LBB132:
 643              	.LBI132:
  44:Inc/queue.h   **** {
 644              		.loc 2 44 20 view .LVU175
 645              	.LBB133:
  46:Inc/queue.h   **** }
 646              		.loc 2 46 5 view .LVU176
  46:Inc/queue.h   **** }
 647              		.loc 2 46 22 is_stmt 0 view .LVU177
 648 0014 0E4B     		ldr	r3, .L47+8
 649 0016 1A88     		ldrh	r2, [r3]
  46:Inc/queue.h   **** }
 650              		.loc 2 46 16 view .LVU178
 651 0018 5A80     		strh	r2, [r3, #2]	@ movhi
 652              	.LVL59:
  46:Inc/queue.h   **** }
 653              		.loc 2 46 16 view .LVU179
 654              	.LBE133:
 655              	.LBE132:
 117:Src/nexcore.c ****     TransactionNumerator = 0;
 656              		.loc 1 117 5 is_stmt 1 view .LVU180
 117:Src/nexcore.c ****     TransactionNumerator = 0;
 657              		.loc 1 117 10 is_stmt 0 view .LVU181
 658 001a 0023     		movs	r3, #0
 659 001c 0D4A     		ldr	r2, .L47+12
 660 001e 1370     		strb	r3, [r2]
 118:Src/nexcore.c **** 
 661              		.loc 1 118 5 is_stmt 1 view .LVU182
 118:Src/nexcore.c **** 
 662              		.loc 1 118 26 is_stmt 0 view .LVU183
 663 0020 0D4A     		ldr	r2, .L47+16
 664 0022 1370     		strb	r3, [r2]
 121:Src/nexcore.c ****     Nexcore_Set(sys_variable, NULL, "3");
 665              		.loc 1 121 5 is_stmt 1 view .LVU184
 121:Src/nexcore.c ****     Nexcore_Set(sys_variable, NULL, "3");
 666              		.loc 1 121 10 is_stmt 0 view .LVU185
 667 0024 0D4A     		ldr	r2, .L47+20
 668 0026 92E80300 		ldm	r2, {r0, r1}
 669 002a 0090     		str	r0, [sp]
ARM GAS  /tmp/ccCyY6XY.s 			page 21


 670 002c ADF80410 		strh	r1, [sp, #4]	@ movhi
 122:Src/nexcore.c **** 
 671              		.loc 1 122 5 is_stmt 1 view .LVU186
 672 0030 0B4A     		ldr	r2, .L47+24
 673 0032 1946     		mov	r1, r3
 674 0034 6846     		mov	r0, sp
 675 0036 FFF7FEFF 		bl	Nexcore_Set
 676              	.LVL60:
 124:Src/nexcore.c **** }
 677              		.loc 1 124 5 view .LVU187
 124:Src/nexcore.c **** }
 678              		.loc 1 124 12 is_stmt 0 view .LVU188
 679 003a 034B     		ldr	r3, .L47
 680 003c 0222     		movs	r2, #2
 681 003e 1A70     		strb	r2, [r3]
 125:Src/nexcore.c **** 
 682              		.loc 1 125 1 view .LVU189
 683 0040 03B0     		add	sp, sp, #12
 684              	.LCFI12:
 685              		.cfi_def_cfa_offset 4
 686              		@ sp needed
 687 0042 5DF804FB 		ldr	pc, [sp], #4
 688              	.L48:
 689 0046 00BF     		.align	2
 690              	.L47:
 691 0048 00000000 		.word	.LANCHOR0
 692 004c 00000000 		.word	.LANCHOR3
 693 0050 00000000 		.word	.LANCHOR1
 694 0054 00000000 		.word	.LANCHOR6
 695 0058 00000000 		.word	.LANCHOR5
 696 005c 04000000 		.word	.LC1
 697 0060 00000000 		.word	.LC2
 698              		.cfi_endproc
 699              	.LFE86:
 701              		.section	.text.Nexcore_Page,"ax",%progbits
 702              		.align	1
 703              		.global	Nexcore_Page
 704              		.syntax unified
 705              		.thumb
 706              		.thumb_func
 707              		.fpu softvfp
 709              	Nexcore_Page:
 710              	.LVL61:
 711              	.LFB92:
 321:Src/nexcore.c **** 
 322:Src/nexcore.c **** /**
 323:Src/nexcore.c ****  * @brief Changes active page.
 324:Src/nexcore.c ****  * 
 325:Src/nexcore.c ****  * @param pageName: Name of the page to be activated.
 326:Src/nexcore.c ****  * 
 327:Src/nexcore.c ****  * @retval TransactionId.
 328:Src/nexcore.c ****  */
 329:Src/nexcore.c **** uint8_t Nexcore_Page(char *pageName)
 330:Src/nexcore.c **** {
 712              		.loc 1 330 1 is_stmt 1 view -0
 713              		.cfi_startproc
 714              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/ccCyY6XY.s 			page 22


 715              		@ frame_needed = 0, uses_anonymous_args = 0
 716              		.loc 1 330 1 is_stmt 0 view .LVU191
 717 0000 00B5     		push	{lr}
 718              	.LCFI13:
 719              		.cfi_def_cfa_offset 4
 720              		.cfi_offset 14, -4
 721 0002 85B0     		sub	sp, sp, #20
 722              	.LCFI14:
 723              		.cfi_def_cfa_offset 24
 724 0004 0246     		mov	r2, r0
 331:Src/nexcore.c ****     char *chunks[2];
 725              		.loc 1 331 5 is_stmt 1 view .LVU192
 332:Src/nexcore.c ****     char cmd[] = "page ";
 726              		.loc 1 332 5 view .LVU193
 727              		.loc 1 332 10 is_stmt 0 view .LVU194
 728 0006 084B     		ldr	r3, .L51
 729 0008 93E80300 		ldm	r3, {r0, r1}
 730              	.LVL62:
 731              		.loc 1 332 10 view .LVU195
 732 000c 0090     		str	r0, [sp]
 733 000e ADF80410 		strh	r1, [sp, #4]	@ movhi
 333:Src/nexcore.c **** 
 334:Src/nexcore.c ****     chunks[0] = cmd;
 734              		.loc 1 334 5 is_stmt 1 view .LVU196
 735              		.loc 1 334 15 is_stmt 0 view .LVU197
 736 0012 CDF808D0 		str	sp, [sp, #8]
 335:Src/nexcore.c ****     chunks[1] = pageName;
 737              		.loc 1 335 5 is_stmt 1 view .LVU198
 738              		.loc 1 335 15 is_stmt 0 view .LVU199
 739 0016 0392     		str	r2, [sp, #12]
 336:Src/nexcore.c **** 
 337:Src/nexcore.c ****     return Nexcore_EnqueueMsg(chunks, 2);
 740              		.loc 1 337 5 is_stmt 1 view .LVU200
 741              		.loc 1 337 12 is_stmt 0 view .LVU201
 742 0018 0221     		movs	r1, #2
 743 001a 02A8     		add	r0, sp, #8
 744 001c FFF7FEFF 		bl	Nexcore_EnqueueMsg
 745              	.LVL63:
 338:Src/nexcore.c **** }
 746              		.loc 1 338 1 view .LVU202
 747 0020 05B0     		add	sp, sp, #20
 748              	.LCFI15:
 749              		.cfi_def_cfa_offset 4
 750              		@ sp needed
 751 0022 5DF804FB 		ldr	pc, [sp], #4
 752              	.L52:
 753 0026 00BF     		.align	2
 754              	.L51:
 755 0028 00000000 		.word	.LC3
 756              		.cfi_endproc
 757              	.LFE92:
 759              		.section	.text.Nexcore_Visible,"ax",%progbits
 760              		.align	1
 761              		.global	Nexcore_Visible
 762              		.syntax unified
 763              		.thumb
 764              		.thumb_func
ARM GAS  /tmp/ccCyY6XY.s 			page 23


 765              		.fpu softvfp
 767              	Nexcore_Visible:
 768              	.LVL64:
 769              	.LFB93:
 339:Src/nexcore.c **** 
 340:Src/nexcore.c **** /**
 341:Src/nexcore.c ****  * @brief Makes a component visible or invisible.
 342:Src/nexcore.c ****  * 
 343:Src/nexcore.c ****  * @param componentName: Name of the component.
 344:Src/nexcore.c ****  * @param visible: Set FALSE to make a component invisible. 
 345:Src/nexcore.c ****  * Set TRUE to make a component visible.
 346:Src/nexcore.c ****  * 
 347:Src/nexcore.c ****  * @retval TransactionId.
 348:Src/nexcore.c ****  */
 349:Src/nexcore.c **** uint8_t Nexcore_Visible(char *componentName, Bool_t visible)
 350:Src/nexcore.c **** {
 770              		.loc 1 350 1 is_stmt 1 view -0
 771              		.cfi_startproc
 772              		@ args = 0, pretend = 0, frame = 24
 773              		@ frame_needed = 0, uses_anonymous_args = 0
 774              		.loc 1 350 1 is_stmt 0 view .LVU204
 775 0000 00B5     		push	{lr}
 776              	.LCFI16:
 777              		.cfi_def_cfa_offset 4
 778              		.cfi_offset 14, -4
 779 0002 87B0     		sub	sp, sp, #28
 780              	.LCFI17:
 781              		.cfi_def_cfa_offset 32
 782 0004 0A46     		mov	r2, r1
 351:Src/nexcore.c ****     char *chunks[2];
 783              		.loc 1 351 5 is_stmt 1 view .LVU205
 352:Src/nexcore.c ****     char cmd[] = "vis ";
 784              		.loc 1 352 5 view .LVU206
 785              		.loc 1 352 10 is_stmt 0 view .LVU207
 786 0006 0D4B     		ldr	r3, .L57
 787 0008 93E80300 		ldm	r3, {r0, r1}
 788              	.LVL65:
 789              		.loc 1 352 10 view .LVU208
 790 000c 0290     		str	r0, [sp, #8]
 791 000e 8DF80C10 		strb	r1, [sp, #12]
 353:Src/nexcore.c ****     char visible_str[] = "0";
 792              		.loc 1 353 5 is_stmt 1 view .LVU209
 793              		.loc 1 353 10 is_stmt 0 view .LVU210
 794 0012 3023     		movs	r3, #48
 795 0014 ADF80430 		strh	r3, [sp, #4]	@ movhi
 354:Src/nexcore.c **** 
 355:Src/nexcore.c ****     visible_str[0] = visible ? '1' : '0';
 796              		.loc 1 355 5 is_stmt 1 view .LVU211
 797              		.loc 1 355 20 is_stmt 0 view .LVU212
 798 0018 6AB1     		cbz	r2, .L55
 799 001a 3123     		movs	r3, #49
 800              	.L54:
 801              		.loc 1 355 20 discriminator 4 view .LVU213
 802 001c 8DF80430 		strb	r3, [sp, #4]
 356:Src/nexcore.c ****     chunks[0] = cmd;
 803              		.loc 1 356 5 is_stmt 1 discriminator 4 view .LVU214
 804              		.loc 1 356 15 is_stmt 0 discriminator 4 view .LVU215
ARM GAS  /tmp/ccCyY6XY.s 			page 24


 805 0020 02AB     		add	r3, sp, #8
 806 0022 0493     		str	r3, [sp, #16]
 357:Src/nexcore.c ****     chunks[1] = visible_str;
 807              		.loc 1 357 5 is_stmt 1 discriminator 4 view .LVU216
 808              		.loc 1 357 15 is_stmt 0 discriminator 4 view .LVU217
 809 0024 01AB     		add	r3, sp, #4
 810 0026 0593     		str	r3, [sp, #20]
 358:Src/nexcore.c **** 
 359:Src/nexcore.c ****     return Nexcore_EnqueueMsg(chunks, 2);
 811              		.loc 1 359 5 is_stmt 1 discriminator 4 view .LVU218
 812              		.loc 1 359 12 is_stmt 0 discriminator 4 view .LVU219
 813 0028 0221     		movs	r1, #2
 814 002a 04A8     		add	r0, sp, #16
 815 002c FFF7FEFF 		bl	Nexcore_EnqueueMsg
 816              	.LVL66:
 360:Src/nexcore.c **** }
 817              		.loc 1 360 1 discriminator 4 view .LVU220
 818 0030 07B0     		add	sp, sp, #28
 819              	.LCFI18:
 820              		.cfi_remember_state
 821              		.cfi_def_cfa_offset 4
 822              		@ sp needed
 823 0032 5DF804FB 		ldr	pc, [sp], #4
 824              	.L55:
 825              	.LCFI19:
 826              		.cfi_restore_state
 355:Src/nexcore.c ****     chunks[0] = cmd;
 827              		.loc 1 355 20 view .LVU221
 828 0036 3023     		movs	r3, #48
 829 0038 F0E7     		b	.L54
 830              	.L58:
 831 003a 00BF     		.align	2
 832              	.L57:
 833 003c 00000000 		.word	.LC4
 834              		.cfi_endproc
 835              	.LFE93:
 837              		.section	.text.Nexcore_AddPointToWaveform,"ax",%progbits
 838              		.align	1
 839              		.global	Nexcore_AddPointToWaveform
 840              		.syntax unified
 841              		.thumb
 842              		.thumb_func
 843              		.fpu softvfp
 845              	Nexcore_AddPointToWaveform:
 846              	.LVL67:
 847              	.LFB94:
 361:Src/nexcore.c **** 
 362:Src/nexcore.c **** /** 
 363:Src/nexcore.c ****  * @brief Adds point to waveform component's channel.
 364:Src/nexcore.c ****  * 
 365:Src/nexcore.c ****  * @param componentId: Id of the component.
 366:Src/nexcore.c ****  * @param channel: Channel which the point will be added.
 367:Src/nexcore.c ****  * @param y: Height of the point.
 368:Src/nexcore.c ****  * 
 369:Src/nexcore.c ****  * @retval TransactionId.
 370:Src/nexcore.c ****  */
 371:Src/nexcore.c **** uint8_t Nexcore_AddPointToWaveform(uint8_t componentId, uint8_t channel, uint16_t y)
ARM GAS  /tmp/ccCyY6XY.s 			page 25


 372:Src/nexcore.c **** {
 848              		.loc 1 372 1 is_stmt 1 view -0
 849              		.cfi_startproc
 850              		@ args = 0, pretend = 0, frame = 40
 851              		@ frame_needed = 0, uses_anonymous_args = 0
 852              		.loc 1 372 1 is_stmt 0 view .LVU223
 853 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 854              	.LCFI20:
 855              		.cfi_def_cfa_offset 20
 856              		.cfi_offset 4, -20
 857              		.cfi_offset 5, -16
 858              		.cfi_offset 6, -12
 859              		.cfi_offset 7, -8
 860              		.cfi_offset 14, -4
 861 0002 8BB0     		sub	sp, sp, #44
 862              	.LCFI21:
 863              		.cfi_def_cfa_offset 64
 864 0004 0446     		mov	r4, r0
 865 0006 0F46     		mov	r7, r1
 866 0008 1646     		mov	r6, r2
 373:Src/nexcore.c ****     char *chunks[4];
 867              		.loc 1 373 5 is_stmt 1 view .LVU224
 374:Src/nexcore.c ****     char cmd[] = "add ";
 868              		.loc 1 374 5 view .LVU225
 869              		.loc 1 374 10 is_stmt 0 view .LVU226
 870 000a 104B     		ldr	r3, .L61
 871 000c 93E80300 		ldm	r3, {r0, r1}
 872              	.LVL68:
 873              		.loc 1 374 10 view .LVU227
 874 0010 0490     		str	r0, [sp, #16]
 875 0012 8DF81410 		strb	r1, [sp, #20]
 375:Src/nexcore.c ****     char comp_id_str[4];
 876              		.loc 1 375 5 is_stmt 1 view .LVU228
 376:Src/nexcore.c ****     char channel_str[4];
 877              		.loc 1 376 5 view .LVU229
 377:Src/nexcore.c ****     char y_str[6];
 878              		.loc 1 377 5 view .LVU230
 378:Src/nexcore.c **** 
 379:Src/nexcore.c ****     // Convert numbers to strings.
 380:Src/nexcore.c ****     num2str(componentId, comp_id_str);
 879              		.loc 1 380 5 view .LVU231
 880 0016 03AD     		add	r5, sp, #12
 881 0018 2946     		mov	r1, r5
 882 001a 2046     		mov	r0, r4
 883 001c FFF7FEFF 		bl	num2str
 884              	.LVL69:
 381:Src/nexcore.c ****     num2str(channel, channel_str);
 885              		.loc 1 381 5 view .LVU232
 886 0020 02AC     		add	r4, sp, #8
 887 0022 2146     		mov	r1, r4
 888 0024 3846     		mov	r0, r7
 889 0026 FFF7FEFF 		bl	num2str
 890              	.LVL70:
 382:Src/nexcore.c ****     num2str(y, y_str);
 891              		.loc 1 382 5 view .LVU233
 892 002a 6946     		mov	r1, sp
 893 002c 3046     		mov	r0, r6
ARM GAS  /tmp/ccCyY6XY.s 			page 26


 894 002e FFF7FEFF 		bl	num2str
 895              	.LVL71:
 383:Src/nexcore.c **** 
 384:Src/nexcore.c ****     chunks[0] = cmd;
 896              		.loc 1 384 5 view .LVU234
 897              		.loc 1 384 15 is_stmt 0 view .LVU235
 898 0032 04AB     		add	r3, sp, #16
 899 0034 0693     		str	r3, [sp, #24]
 385:Src/nexcore.c ****     chunks[1] = comp_id_str;
 900              		.loc 1 385 5 is_stmt 1 view .LVU236
 901              		.loc 1 385 15 is_stmt 0 view .LVU237
 902 0036 0795     		str	r5, [sp, #28]
 386:Src/nexcore.c ****     chunks[2] = channel_str;
 903              		.loc 1 386 5 is_stmt 1 view .LVU238
 904              		.loc 1 386 15 is_stmt 0 view .LVU239
 905 0038 0894     		str	r4, [sp, #32]
 387:Src/nexcore.c ****     chunks[3] = y_str;
 906              		.loc 1 387 5 is_stmt 1 view .LVU240
 907              		.loc 1 387 15 is_stmt 0 view .LVU241
 908 003a CDF824D0 		str	sp, [sp, #36]
 388:Src/nexcore.c **** 
 389:Src/nexcore.c ****     return Nexcore_EnqueueMsg(chunks, 4);
 909              		.loc 1 389 5 is_stmt 1 view .LVU242
 910              		.loc 1 389 12 is_stmt 0 view .LVU243
 911 003e 0421     		movs	r1, #4
 912 0040 06A8     		add	r0, sp, #24
 913 0042 FFF7FEFF 		bl	Nexcore_EnqueueMsg
 914              	.LVL72:
 390:Src/nexcore.c **** }
 915              		.loc 1 390 1 view .LVU244
 916 0046 0BB0     		add	sp, sp, #44
 917              	.LCFI22:
 918              		.cfi_def_cfa_offset 20
 919              		@ sp needed
 920 0048 F0BD     		pop	{r4, r5, r6, r7, pc}
 921              	.L62:
 922 004a 00BF     		.align	2
 923              	.L61:
 924 004c 00000000 		.word	.LC5
 925              		.cfi_endproc
 926              	.LFE94:
 928              		.section	.text.Nexcore_ClearWaveform,"ax",%progbits
 929              		.align	1
 930              		.global	Nexcore_ClearWaveform
 931              		.syntax unified
 932              		.thumb
 933              		.thumb_func
 934              		.fpu softvfp
 936              	Nexcore_ClearWaveform:
 937              	.LVL73:
 938              	.LFB95:
 391:Src/nexcore.c **** 
 392:Src/nexcore.c **** /** 
 393:Src/nexcore.c ****  * @brief Clear waveform component's channel.
 394:Src/nexcore.c ****  * 
 395:Src/nexcore.c ****  * @param componentId: Id of the component.
 396:Src/nexcore.c ****  * @param channel: Channel which will be cleared.
ARM GAS  /tmp/ccCyY6XY.s 			page 27


 397:Src/nexcore.c ****  * 
 398:Src/nexcore.c ****  * @retval TransactionId.
 399:Src/nexcore.c ****  */
 400:Src/nexcore.c **** uint8_t Nexcore_ClearWaveform(uint8_t componentId, uint8_t channel)
 401:Src/nexcore.c **** {
 939              		.loc 1 401 1 is_stmt 1 view -0
 940              		.cfi_startproc
 941              		@ args = 0, pretend = 0, frame = 32
 942              		@ frame_needed = 0, uses_anonymous_args = 0
 943              		.loc 1 401 1 is_stmt 0 view .LVU246
 944 0000 70B5     		push	{r4, r5, r6, lr}
 945              	.LCFI23:
 946              		.cfi_def_cfa_offset 16
 947              		.cfi_offset 4, -16
 948              		.cfi_offset 5, -12
 949              		.cfi_offset 6, -8
 950              		.cfi_offset 14, -4
 951 0002 88B0     		sub	sp, sp, #32
 952              	.LCFI24:
 953              		.cfi_def_cfa_offset 48
 954 0004 0246     		mov	r2, r0
 955 0006 0E46     		mov	r6, r1
 402:Src/nexcore.c ****     char *chunks[3];
 956              		.loc 1 402 5 is_stmt 1 view .LVU247
 403:Src/nexcore.c ****     char cmd[] = "cle ";
 957              		.loc 1 403 5 view .LVU248
 958              		.loc 1 403 10 is_stmt 0 view .LVU249
 959 0008 0C4B     		ldr	r3, .L65
 960 000a 93E80300 		ldm	r3, {r0, r1}
 961              	.LVL74:
 962              		.loc 1 403 10 view .LVU250
 963 000e 0390     		str	r0, [sp, #12]
 964 0010 8DF81010 		strb	r1, [sp, #16]
 404:Src/nexcore.c ****     char comp_id_str[4];
 965              		.loc 1 404 5 is_stmt 1 view .LVU251
 405:Src/nexcore.c ****     char channel_str[4];
 966              		.loc 1 405 5 view .LVU252
 406:Src/nexcore.c **** 
 407:Src/nexcore.c ****     // Convert numbers to strings.
 408:Src/nexcore.c ****     num2str(componentId, comp_id_str);
 967              		.loc 1 408 5 view .LVU253
 968 0014 02AD     		add	r5, sp, #8
 969 0016 2946     		mov	r1, r5
 970 0018 1046     		mov	r0, r2
 971 001a FFF7FEFF 		bl	num2str
 972              	.LVL75:
 409:Src/nexcore.c ****     num2str(channel, channel_str);
 973              		.loc 1 409 5 view .LVU254
 974 001e 01AC     		add	r4, sp, #4
 975 0020 2146     		mov	r1, r4
 976 0022 3046     		mov	r0, r6
 977 0024 FFF7FEFF 		bl	num2str
 978              	.LVL76:
 410:Src/nexcore.c **** 
 411:Src/nexcore.c ****     chunks[0] = cmd;
 979              		.loc 1 411 5 view .LVU255
 980              		.loc 1 411 15 is_stmt 0 view .LVU256
ARM GAS  /tmp/ccCyY6XY.s 			page 28


 981 0028 03AB     		add	r3, sp, #12
 982 002a 0593     		str	r3, [sp, #20]
 412:Src/nexcore.c ****     chunks[1] = comp_id_str;
 983              		.loc 1 412 5 is_stmt 1 view .LVU257
 984              		.loc 1 412 15 is_stmt 0 view .LVU258
 985 002c 0695     		str	r5, [sp, #24]
 413:Src/nexcore.c ****     chunks[2] = channel_str;
 986              		.loc 1 413 5 is_stmt 1 view .LVU259
 987              		.loc 1 413 15 is_stmt 0 view .LVU260
 988 002e 0794     		str	r4, [sp, #28]
 414:Src/nexcore.c **** 
 415:Src/nexcore.c ****     return Nexcore_EnqueueMsg(chunks, 3);
 989              		.loc 1 415 5 is_stmt 1 view .LVU261
 990              		.loc 1 415 12 is_stmt 0 view .LVU262
 991 0030 0321     		movs	r1, #3
 992 0032 05A8     		add	r0, sp, #20
 993 0034 FFF7FEFF 		bl	Nexcore_EnqueueMsg
 994              	.LVL77:
 416:Src/nexcore.c **** }
 995              		.loc 1 416 1 view .LVU263
 996 0038 08B0     		add	sp, sp, #32
 997              	.LCFI25:
 998              		.cfi_def_cfa_offset 16
 999              		@ sp needed
 1000 003a 70BD     		pop	{r4, r5, r6, pc}
 1001              	.L66:
 1002              		.align	2
 1003              	.L65:
 1004 003c 00000000 		.word	.LC6
 1005              		.cfi_endproc
 1006              	.LFE95:
 1008              		.section	.text.Nexcore_Reset,"ax",%progbits
 1009              		.align	1
 1010              		.global	Nexcore_Reset
 1011              		.syntax unified
 1012              		.thumb
 1013              		.thumb_func
 1014              		.fpu softvfp
 1016              	Nexcore_Reset:
 1017              	.LFB96:
 417:Src/nexcore.c **** 
 418:Src/nexcore.c **** /**
 419:Src/nexcore.c ****  * @brief Resets the screen.
 420:Src/nexcore.c ****  */
 421:Src/nexcore.c **** uint8_t Nexcore_Reset(void)
 422:Src/nexcore.c **** {
 1018              		.loc 1 422 1 is_stmt 1 view -0
 1019              		.cfi_startproc
 1020              		@ args = 0, pretend = 0, frame = 16
 1021              		@ frame_needed = 0, uses_anonymous_args = 0
 1022 0000 00B5     		push	{lr}
 1023              	.LCFI26:
 1024              		.cfi_def_cfa_offset 4
 1025              		.cfi_offset 14, -4
 1026 0002 85B0     		sub	sp, sp, #20
 1027              	.LCFI27:
 1028              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccCyY6XY.s 			page 29


 423:Src/nexcore.c ****     char *chunks[1];
 1029              		.loc 1 423 5 view .LVU265
 424:Src/nexcore.c ****     char cmd[] = "rest";
 1030              		.loc 1 424 5 view .LVU266
 1031              		.loc 1 424 10 is_stmt 0 view .LVU267
 1032 0004 074B     		ldr	r3, .L69
 1033 0006 93E80300 		ldm	r3, {r0, r1}
 1034 000a 0190     		str	r0, [sp, #4]
 1035 000c 8DF80810 		strb	r1, [sp, #8]
 425:Src/nexcore.c **** 
 426:Src/nexcore.c ****     chunks[0] = cmd;
 1036              		.loc 1 426 5 is_stmt 1 view .LVU268
 1037              		.loc 1 426 15 is_stmt 0 view .LVU269
 1038 0010 01AB     		add	r3, sp, #4
 1039 0012 0393     		str	r3, [sp, #12]
 427:Src/nexcore.c **** 
 428:Src/nexcore.c ****     return Nexcore_EnqueueMsg(chunks, 1);
 1040              		.loc 1 428 5 is_stmt 1 view .LVU270
 1041              		.loc 1 428 12 is_stmt 0 view .LVU271
 1042 0014 0121     		movs	r1, #1
 1043 0016 03A8     		add	r0, sp, #12
 1044 0018 FFF7FEFF 		bl	Nexcore_EnqueueMsg
 1045              	.LVL78:
 429:Src/nexcore.c **** }
 1046              		.loc 1 429 1 view .LVU272
 1047 001c 05B0     		add	sp, sp, #20
 1048              	.LCFI28:
 1049              		.cfi_def_cfa_offset 4
 1050              		@ sp needed
 1051 001e 5DF804FB 		ldr	pc, [sp], #4
 1052              	.L70:
 1053 0022 00BF     		.align	2
 1054              	.L69:
 1055 0024 00000000 		.word	.LC7
 1056              		.cfi_endproc
 1057              	.LFE96:
 1059              		.section	.text.Nexcore_ParseReturnedString,"ax",%progbits
 1060              		.align	1
 1061              		.global	Nexcore_ParseReturnedString
 1062              		.syntax unified
 1063              		.thumb
 1064              		.thumb_func
 1065              		.fpu softvfp
 1067              	Nexcore_ParseReturnedString:
 1068              	.LVL79:
 1069              	.LFB97:
 430:Src/nexcore.c **** 
 431:Src/nexcore.c **** /**
 432:Src/nexcore.c ****  * @brief After receiving string return data; callback is invoked to
 433:Src/nexcore.c ****  * inform this to the application program. Then the application program should
 434:Src/nexcore.c ****  * call this function to parse the string from the internal receive buffer
 435:Src/nexcore.c ****  * of the module. String can be parsed as chunks of strings or as a whole at a time.
 436:Src/nexcore.c ****  * 
 437:Src/nexcore.c ****  * @param buff: Pointer of the buffer to put received string.
 438:Src/nexcore.c ****  * @param maxLength: Length of the parsing.
 439:Src/nexcore.c ****  * 
 440:Src/nexcore.c ****  * @retval Characters to parse.
ARM GAS  /tmp/ccCyY6XY.s 			page 30


 441:Src/nexcore.c ****  */
 442:Src/nexcore.c **** uint8_t Nexcore_ParseReturnedString(char *buff, uint8_t maxLength)
 443:Src/nexcore.c **** {
 1070              		.loc 1 443 1 is_stmt 1 view -0
 1071              		.cfi_startproc
 1072              		@ args = 0, pretend = 0, frame = 0
 1073              		@ frame_needed = 0, uses_anonymous_args = 0
 1074              		.loc 1 443 1 is_stmt 0 view .LVU274
 1075 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1076              	.LCFI29:
 1077              		.cfi_def_cfa_offset 20
 1078              		.cfi_offset 4, -20
 1079              		.cfi_offset 5, -16
 1080              		.cfi_offset 6, -12
 1081              		.cfi_offset 7, -8
 1082              		.cfi_offset 14, -4
 444:Src/nexcore.c ****     uint8_t characters_to_parse;
 1083              		.loc 1 444 5 is_stmt 1 view .LVU275
 445:Src/nexcore.c ****     uint8_t parse_length;
 1084              		.loc 1 445 5 view .LVU276
 446:Src/nexcore.c ****     characters_to_parse = Queue_SearchArr(&RxQueue, MessageTerminator,
 1085              		.loc 1 446 5 view .LVU277
 1086              	.LVL80:
 1087              	.LBB151:
 1088              	.LBI151:
  89:Inc/queue.h   **** }
  90:Inc/queue.h   **** 
  91:Inc/queue.h   **** /**
  92:Inc/queue.h   ****     * @brief    Dequeues element from the given buffer.
  93:Inc/queue.h   ****     *
  94:Inc/queue.h   ****     * @param    buff: Pointer to the buffer.
  95:Inc/queue.h   ****     *
  96:Inc/queue.h   ****     * @retval   Element.
  97:Inc/queue.h   ****     */
  98:Inc/queue.h   **** static inline uint8_t Queue_Dequeue(Queue_Buffer_t *buff)
  99:Inc/queue.h   **** {
 100:Inc/queue.h   ****     uint16_t __head = buff->head;
 101:Inc/queue.h   **** 
 102:Inc/queue.h   ****     // Parse head element.
 103:Inc/queue.h   ****     uint8_t element = buff->pContainer[__head++];
 104:Inc/queue.h   ****     if (__head == buff->size)
 105:Inc/queue.h   ****     {
 106:Inc/queue.h   ****         __head = 0;
 107:Inc/queue.h   ****     }
 108:Inc/queue.h   **** 
 109:Inc/queue.h   ****     buff->head = __head;
 110:Inc/queue.h   **** 
 111:Inc/queue.h   ****     return element;
 112:Inc/queue.h   **** }
 113:Inc/queue.h   **** 
 114:Inc/queue.h   **** /**
 115:Inc/queue.h   ****     * @brief    Dequeues array from the given buffer.
 116:Inc/queue.h   ****     *
 117:Inc/queue.h   ****     * @param    buff: Pointer to the buffer.
 118:Inc/queue.h   ****     * 
 119:Inc/queue.h   ****     * @retval   None.
 120:Inc/queue.h   ****     */
ARM GAS  /tmp/ccCyY6XY.s 			page 31


 121:Inc/queue.h   **** static inline void Queue_DequeueArr(Queue_Buffer_t *buff, uint8_t *data, uint16_t dataLength)
 122:Inc/queue.h   **** {
 123:Inc/queue.h   ****     uint16_t __head = buff->head;
 124:Inc/queue.h   **** 
 125:Inc/queue.h   ****     for (uint16_t i = 0; i < dataLength; i++)
 126:Inc/queue.h   ****     {
 127:Inc/queue.h   ****         data[i] = buff->pContainer[__head++];
 128:Inc/queue.h   ****         if (__head == buff->size)
 129:Inc/queue.h   ****         {
 130:Inc/queue.h   ****             __head = 0;
 131:Inc/queue.h   ****         }
 132:Inc/queue.h   ****     }
 133:Inc/queue.h   **** 
 134:Inc/queue.h   ****     buff->head = __head;
 135:Inc/queue.h   **** }
 136:Inc/queue.h   **** 
 137:Inc/queue.h   **** /**
 138:Inc/queue.h   ****     * @brief    Returns number of elements the buffer contains.
 139:Inc/queue.h   ****     *
 140:Inc/queue.h   ****     * @param    buff: Buffer pointer.
 141:Inc/queue.h   ****     *
 142:Inc/queue.h   ****     * @retval   Element count.
 143:Inc/queue.h   ****     */
 144:Inc/queue.h   **** static inline uint16_t Queue_GetElementCount(Queue_Buffer_t *buff)
 145:Inc/queue.h   **** {
 146:Inc/queue.h   ****     int32_t elements = buff->tail - buff->head;
 147:Inc/queue.h   ****     if (elements < 0)
 148:Inc/queue.h   ****     {
 149:Inc/queue.h   ****         elements += buff->size;
 150:Inc/queue.h   ****     }
 151:Inc/queue.h   **** 
 152:Inc/queue.h   ****     return ((uint16_t)elements);
 153:Inc/queue.h   **** }
 154:Inc/queue.h   **** 
 155:Inc/queue.h   **** /**
 156:Inc/queue.h   ****     * @brief    Removes elements starting from the head.
 157:Inc/queue.h   ****     *
 158:Inc/queue.h   ****     * @param    buff: Pointer to the buffer.
 159:Inc/queue.h   ****     * @param    length: Length of removal.
 160:Inc/queue.h   ****     */
 161:Inc/queue.h   **** static inline void Queue_Remove(Queue_Buffer_t *buff, uint16_t length)
 162:Inc/queue.h   **** {
 163:Inc/queue.h   ****     /* Just change head index. */
 164:Inc/queue.h   ****     if (length <= Queue_GetElementCount(buff))
 165:Inc/queue.h   ****     {
 166:Inc/queue.h   ****         uint16_t __head = buff->head;
 167:Inc/queue.h   ****         __head += length;
 168:Inc/queue.h   ****         if (__head >= buff->size)
 169:Inc/queue.h   ****         {
 170:Inc/queue.h   ****             __head -= buff->size;
 171:Inc/queue.h   ****         }
 172:Inc/queue.h   ****         buff->head = __head;
 173:Inc/queue.h   ****     }
 174:Inc/queue.h   **** }
 175:Inc/queue.h   **** 
 176:Inc/queue.h   **** /**
 177:Inc/queue.h   ****     * @brief    Peeks element in the buffer. Indexing starts at the first element.
ARM GAS  /tmp/ccCyY6XY.s 			page 32


 178:Inc/queue.h   ****     *
 179:Inc/queue.h   ****     * @param    buff: Pointer to the buffer.
 180:Inc/queue.h   ****     * @param    elementIndex: Index of the element.
 181:Inc/queue.h   ****     *
 182:Inc/queue.h   ****     * @retval   Element value.
 183:Inc/queue.h   ****     */
 184:Inc/queue.h   **** static inline uint8_t Queue_Peek(Queue_Buffer_t *buff, uint16_t elementIndex)
 185:Inc/queue.h   **** {
 186:Inc/queue.h   ****     uint16_t element_position = buff->head + elementIndex;
 187:Inc/queue.h   ****     if (element_position >= buff->size)
 188:Inc/queue.h   ****     {
 189:Inc/queue.h   ****         element_position -= buff->size;
 190:Inc/queue.h   ****     }
 191:Inc/queue.h   **** 
 192:Inc/queue.h   ****     return (buff->pContainer[element_position]);
 193:Inc/queue.h   **** }
 194:Inc/queue.h   **** 
 195:Inc/queue.h   **** /**
 196:Inc/queue.h   ****     * @brief    Searches an element in the buffer. Returns element index if the element
 197:Inc/queue.h   ****     *           exists. Returns 0xFFFF otherwise.
 198:Inc/queue.h   ****     *
 199:Inc/queue.h   ****     * @param    buff: Buffer to be searched.
 200:Inc/queue.h   ****     * @param    element: Element value.
 201:Inc/queue.h   ****     *
 202:Inc/queue.h   ****     * @retval   Element index or if not found 0xFFFF.
 203:Inc/queue.h   ****     */
 204:Inc/queue.h   **** static inline uint16_t Queue_Search(Queue_Buffer_t *buff, uint8_t element)
 205:Inc/queue.h   **** {
 206:Inc/queue.h   ****     uint16_t num_of_elements;
 207:Inc/queue.h   ****     num_of_elements = Queue_GetElementCount(buff);
 208:Inc/queue.h   **** 
 209:Inc/queue.h   ****     // Search buffer.
 210:Inc/queue.h   ****     for (uint16_t i = 0; i < num_of_elements; i++)
 211:Inc/queue.h   ****     {
 212:Inc/queue.h   ****         if (Queue_Peek(buff, i) == element)
 213:Inc/queue.h   ****         {
 214:Inc/queue.h   ****             return i;
 215:Inc/queue.h   ****         }
 216:Inc/queue.h   ****     }
 217:Inc/queue.h   **** 
 218:Inc/queue.h   ****     return 0xFFFF;
 219:Inc/queue.h   **** }
 220:Inc/queue.h   **** 
 221:Inc/queue.h   **** /**
 222:Inc/queue.h   ****     * @brief    Searches an array in the buffer. Returns array start index if the such an array
 223:Inc/queue.h   ****     *           exists. Returns 0xFFFF otherwise.
 224:Inc/queue.h   ****     *
 225:Inc/queue.h   ****     * @param    buff: Buffer to be searched.
 226:Inc/queue.h   ****     * @param    arr: Pointer to array.
 227:Inc/queue.h   ****     *
 228:Inc/queue.h   ****     * @retval   Array start index or 0xFFFF.
 229:Inc/queue.h   ****     */
 230:Inc/queue.h   **** static inline uint16_t Queue_SearchArr(Queue_Buffer_t *buff, uint8_t *arr, uint16_t arrLength)
 1089              		.loc 2 230 24 view .LVU278
 1090              	.LBB152:
 231:Inc/queue.h   **** {
 232:Inc/queue.h   ****     uint16_t num_of_elements;
ARM GAS  /tmp/ccCyY6XY.s 			page 33


 1091              		.loc 2 232 5 view .LVU279
 233:Inc/queue.h   ****     num_of_elements = Queue_GetElementCount(buff);
 1092              		.loc 2 233 5 view .LVU280
 1093              	.LBB153:
 1094              	.LBI153:
 144:Inc/queue.h   **** {
 1095              		.loc 2 144 24 view .LVU281
 1096              	.LBB154:
 146:Inc/queue.h   ****     if (elements < 0)
 1097              		.loc 2 146 5 view .LVU282
 146:Inc/queue.h   ****     if (elements < 0)
 1098              		.loc 2 146 28 is_stmt 0 view .LVU283
 1099 0002 384B     		ldr	r3, .L96
 1100 0004 1F88     		ldrh	r7, [r3]
 146:Inc/queue.h   ****     if (elements < 0)
 1101              		.loc 2 146 41 view .LVU284
 1102 0006 5E88     		ldrh	r6, [r3, #2]
 1103              	.LVL81:
 147:Inc/queue.h   ****     {
 1104              		.loc 2 147 5 is_stmt 1 view .LVU285
 147:Inc/queue.h   ****     {
 1105              		.loc 2 147 8 is_stmt 0 view .LVU286
 1106 0008 BF1B     		subs	r7, r7, r6
 1107              	.LVL82:
 147:Inc/queue.h   ****     {
 1108              		.loc 2 147 8 view .LVU287
 1109 000a 07D4     		bmi	.L89
 1110              	.LVL83:
 1111              	.L72:
 152:Inc/queue.h   **** }
 1112              		.loc 2 152 5 is_stmt 1 view .LVU288
 152:Inc/queue.h   **** }
 1113              		.loc 2 152 13 is_stmt 0 view .LVU289
 1114 000c BFB2     		uxth	r7, r7
 1115              	.LVL84:
 152:Inc/queue.h   **** }
 1116              		.loc 2 152 13 view .LVU290
 1117              	.LBE154:
 1118              	.LBE153:
 234:Inc/queue.h   **** 
 235:Inc/queue.h   ****     // Search buffer.
 236:Inc/queue.h   ****     for (uint16_t i = 0; i < num_of_elements; i++)
 1119              		.loc 2 236 5 is_stmt 1 view .LVU291
 1120              	.LBB156:
 1121              		.loc 2 236 10 view .LVU292
 1122              		.loc 2 236 19 is_stmt 0 view .LVU293
 1123 000e 0025     		movs	r5, #0
 1124              	.LVL85:
 1125              	.L73:
 1126              		.loc 2 236 5 view .LVU294
 1127 0010 AF42     		cmp	r7, r5
 1128 0012 33D9     		bls	.L90
 1129              	.LBB157:
 1130              	.LBB158:
 237:Inc/queue.h   ****     {
 238:Inc/queue.h   ****         Bool_t matched = TRUE;
 239:Inc/queue.h   ****         for (uint16_t j = 0; j < arrLength; j++)
ARM GAS  /tmp/ccCyY6XY.s 			page 34


 1131              		.loc 2 239 23 view .LVU295
 1132 0014 0022     		movs	r2, #0
 1133              	.LBE158:
 238:Inc/queue.h   ****         for (uint16_t j = 0; j < arrLength; j++)
 1134              		.loc 2 238 16 view .LVU296
 1135 0016 4FF0010C 		mov	ip, #1
 1136 001a 0BE0     		b	.L78
 1137              	.LVL86:
 1138              	.L89:
 238:Inc/queue.h   ****         for (uint16_t j = 0; j < arrLength; j++)
 1139              		.loc 2 238 16 view .LVU297
 1140              	.LBE157:
 1141              	.LBE156:
 1142              	.LBB165:
 1143              	.LBB155:
 149:Inc/queue.h   ****     }
 1144              		.loc 2 149 9 is_stmt 1 view .LVU298
 149:Inc/queue.h   ****     }
 1145              		.loc 2 149 25 is_stmt 0 view .LVU299
 1146 001c 9B88     		ldrh	r3, [r3, #4]
 149:Inc/queue.h   ****     }
 1147              		.loc 2 149 18 view .LVU300
 1148 001e 1F44     		add	r7, r7, r3
 1149              	.LVL87:
 149:Inc/queue.h   ****     }
 1150              		.loc 2 149 18 view .LVU301
 1151 0020 F4E7     		b	.L72
 1152              	.LVL88:
 1153              	.L74:
 149:Inc/queue.h   ****     }
 1154              		.loc 2 149 18 view .LVU302
 1155              	.LBE155:
 1156              	.LBE165:
 1157              	.LBB166:
 1158              	.LBB164:
 1159              	.LBB163:
 1160              	.LBB159:
 1161              	.LBB160:
 192:Inc/queue.h   **** }
 1162              		.loc 2 192 5 is_stmt 1 view .LVU303
 192:Inc/queue.h   **** }
 1163              		.loc 2 192 17 is_stmt 0 view .LVU304
 1164 0022 304C     		ldr	r4, .L96
 1165 0024 A468     		ldr	r4, [r4, #8]
 192:Inc/queue.h   **** }
 1166              		.loc 2 192 29 view .LVU305
 1167 0026 E45C     		ldrb	r4, [r4, r3]	@ zero_extendqisi2
 1168              	.LVL89:
 192:Inc/queue.h   **** }
 1169              		.loc 2 192 29 view .LVU306
 1170              	.LBE160:
 1171              	.LBE159:
 240:Inc/queue.h   ****         {
 241:Inc/queue.h   ****             if (Queue_Peek(buff, i + j) != arr[j])
 1172              		.loc 2 241 47 view .LVU307
 1173 0028 2F4B     		ldr	r3, .L96+4
 1174 002a 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
ARM GAS  /tmp/ccCyY6XY.s 			page 35


 1175              		.loc 2 241 16 view .LVU308
 1176 002c 9C42     		cmp	r4, r3
 1177 002e 0ED1     		bne	.L91
 1178              	.LVL90:
 1179              	.L75:
 239:Inc/queue.h   ****         {
 1180              		.loc 2 239 46 view .LVU309
 1181 0030 0132     		adds	r2, r2, #1
 1182              	.LVL91:
 239:Inc/queue.h   ****         {
 1183              		.loc 2 239 46 view .LVU310
 1184 0032 92B2     		uxth	r2, r2
 1185              	.LVL92:
 1186              	.L78:
 239:Inc/queue.h   ****         {
 1187              		.loc 2 239 9 view .LVU311
 1188 0034 022A     		cmp	r2, #2
 1189 0036 0DD8     		bhi	.L92
 1190              		.loc 2 241 13 is_stmt 1 view .LVU312
 1191              		.loc 2 241 17 is_stmt 0 view .LVU313
 1192 0038 AB18     		adds	r3, r5, r2
 1193 003a 9BB2     		uxth	r3, r3
 1194              	.LVL93:
 1195              	.LBB162:
 1196              	.LBI159:
 184:Inc/queue.h   **** {
 1197              		.loc 2 184 23 is_stmt 1 view .LVU314
 1198              	.LBB161:
 186:Inc/queue.h   ****     if (element_position >= buff->size)
 1199              		.loc 2 186 5 view .LVU315
 186:Inc/queue.h   ****     if (element_position >= buff->size)
 1200              		.loc 2 186 14 is_stmt 0 view .LVU316
 1201 003c 3344     		add	r3, r3, r6
 1202              	.LVL94:
 186:Inc/queue.h   ****     if (element_position >= buff->size)
 1203              		.loc 2 186 14 view .LVU317
 1204 003e 9BB2     		uxth	r3, r3
 1205              	.LVL95:
 187:Inc/queue.h   ****     {
 1206              		.loc 2 187 5 is_stmt 1 view .LVU318
 187:Inc/queue.h   ****     {
 1207              		.loc 2 187 33 is_stmt 0 view .LVU319
 1208 0040 284C     		ldr	r4, .L96
 1209 0042 A488     		ldrh	r4, [r4, #4]
 187:Inc/queue.h   ****     {
 1210              		.loc 2 187 8 view .LVU320
 1211 0044 A342     		cmp	r3, r4
 1212 0046 ECD3     		bcc	.L74
 189:Inc/queue.h   ****     }
 1213              		.loc 2 189 9 is_stmt 1 view .LVU321
 189:Inc/queue.h   ****     }
 1214              		.loc 2 189 26 is_stmt 0 view .LVU322
 1215 0048 1B1B     		subs	r3, r3, r4
 1216              	.LVL96:
 189:Inc/queue.h   ****     }
 1217              		.loc 2 189 26 view .LVU323
 1218 004a 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccCyY6XY.s 			page 36


 1219              	.LVL97:
 189:Inc/queue.h   ****     }
 1220              		.loc 2 189 26 view .LVU324
 1221 004c E9E7     		b	.L74
 1222              	.LVL98:
 1223              	.L91:
 189:Inc/queue.h   ****     }
 1224              		.loc 2 189 26 view .LVU325
 1225              	.LBE161:
 1226              	.LBE162:
 242:Inc/queue.h   ****             {
 243:Inc/queue.h   ****                 matched = FALSE;
 1227              		.loc 2 243 25 view .LVU326
 1228 004e 4FF0000C 		mov	ip, #0
 1229              	.LVL99:
 1230              		.loc 2 243 25 view .LVU327
 1231 0052 EDE7     		b	.L75
 1232              	.LVL100:
 1233              	.L92:
 1234              		.loc 2 243 25 view .LVU328
 1235              	.LBE163:
 244:Inc/queue.h   ****                 continue;
 245:Inc/queue.h   ****             }
 246:Inc/queue.h   ****         }
 247:Inc/queue.h   **** 
 248:Inc/queue.h   ****         // If match found; return the start index.
 249:Inc/queue.h   ****         if (matched)
 1236              		.loc 2 249 9 is_stmt 1 view .LVU329
 1237              		.loc 2 249 12 is_stmt 0 view .LVU330
 1238 0054 BCF1000F 		cmp	ip, #0
 1239 0058 0DD0     		beq	.L93
 1240              	.LVL101:
 1241              	.L77:
 1242              		.loc 2 249 12 view .LVU331
 1243              	.LBE164:
 1244              	.LBE166:
 1245              	.LBE152:
 1246              	.LBE151:
 1247              		.loc 1 446 25 view .LVU332
 1248 005a 5FFA85FC 		uxtb	ip, r5
 1249              	.LVL102:
 447:Src/nexcore.c ****                                           sizeof(MessageTerminator));
 448:Src/nexcore.c ****     // Determine the parse length.
 449:Src/nexcore.c ****     parse_length = ((maxLength - 1) > characters_to_parse) ? characters_to_parse : (maxLength - 1);
 1250              		.loc 1 449 5 is_stmt 1 view .LVU333
 1251              		.loc 1 449 32 is_stmt 0 view .LVU334
 1252 005e 0139     		subs	r1, r1, #1
 1253              	.LVL103:
 1254              		.loc 1 449 82 view .LVU335
 1255 0060 6145     		cmp	r1, ip
 1256 0062 A8BF     		it	ge
 1257 0064 6146     		movge	r1, ip
 1258              		.loc 1 449 18 view .LVU336
 1259 0066 5FFA81FE 		uxtb	lr, r1
 1260              	.LVL104:
 450:Src/nexcore.c **** 
 451:Src/nexcore.c ****     // Read string.
ARM GAS  /tmp/ccCyY6XY.s 			page 37


 452:Src/nexcore.c ****     Queue_DequeueArr(&RxQueue, (uint8_t *)buff, parse_length);
 1261              		.loc 1 452 5 is_stmt 1 view .LVU337
 1262 006a 1FFA8EF7 		uxth	r7, lr
 1263              	.LVL105:
 1264              	.LBB169:
 1265              	.LBI169:
 121:Inc/queue.h   **** {
 1266              		.loc 2 121 20 view .LVU338
 1267              	.LBB170:
 123:Inc/queue.h   **** 
 1268              		.loc 2 123 5 view .LVU339
 123:Inc/queue.h   **** 
 1269              		.loc 2 123 14 is_stmt 0 view .LVU340
 1270 006e 1D4B     		ldr	r3, .L96
 1271 0070 5C88     		ldrh	r4, [r3, #2]
 1272              	.LVL106:
 125:Inc/queue.h   ****     {
 1273              		.loc 2 125 5 is_stmt 1 view .LVU341
 1274              	.LBB171:
 125:Inc/queue.h   ****     {
 1275              		.loc 2 125 10 view .LVU342
 125:Inc/queue.h   ****     {
 1276              		.loc 2 125 19 is_stmt 0 view .LVU343
 1277 0072 0023     		movs	r3, #0
 1278 0074 08E0     		b	.L79
 1279              	.LVL107:
 1280              	.L93:
 125:Inc/queue.h   ****     {
 1281              		.loc 2 125 19 view .LVU344
 1282              	.LBE171:
 1283              	.LBE170:
 1284              	.LBE169:
 1285              	.LBB174:
 1286              	.LBB168:
 1287              	.LBB167:
 236:Inc/queue.h   ****     {
 1288              		.loc 2 236 48 view .LVU345
 1289 0076 0135     		adds	r5, r5, #1
 1290              	.LVL108:
 236:Inc/queue.h   ****     {
 1291              		.loc 2 236 48 view .LVU346
 1292 0078 ADB2     		uxth	r5, r5
 1293              	.LVL109:
 236:Inc/queue.h   ****     {
 1294              		.loc 2 236 48 view .LVU347
 1295 007a C9E7     		b	.L73
 1296              	.LVL110:
 1297              	.L90:
 236:Inc/queue.h   ****     {
 1298              		.loc 2 236 48 view .LVU348
 1299              	.LBE167:
 250:Inc/queue.h   ****         {
 251:Inc/queue.h   ****             return i;
 252:Inc/queue.h   ****         }
 253:Inc/queue.h   ****     }
 254:Inc/queue.h   **** 
 255:Inc/queue.h   ****     return 0xFFFF;
ARM GAS  /tmp/ccCyY6XY.s 			page 38


 1300              		.loc 2 255 12 view .LVU349
 1301 007c 4FF6FF75 		movw	r5, #65535
 1302              	.LVL111:
 1303              		.loc 2 255 12 view .LVU350
 1304 0080 EBE7     		b	.L77
 1305              	.LVL112:
 1306              	.L87:
 1307              		.loc 2 255 12 view .LVU351
 1308              	.LBE168:
 1309              	.LBE174:
 1310              	.LBB175:
 1311              	.LBB173:
 1312              	.LBB172:
 130:Inc/queue.h   ****         }
 1313              		.loc 2 130 20 view .LVU352
 1314 0082 0024     		movs	r4, #0
 1315              	.L80:
 1316              	.LVL113:
 125:Inc/queue.h   ****     {
 1317              		.loc 2 125 43 view .LVU353
 1318 0084 0133     		adds	r3, r3, #1
 1319              	.LVL114:
 125:Inc/queue.h   ****     {
 1320              		.loc 2 125 43 view .LVU354
 1321 0086 9BB2     		uxth	r3, r3
 1322              	.LVL115:
 1323              	.L79:
 125:Inc/queue.h   ****     {
 1324              		.loc 2 125 5 view .LVU355
 1325 0088 9F42     		cmp	r7, r3
 1326 008a 0AD9     		bls	.L94
 127:Inc/queue.h   ****         if (__head == buff->size)
 1327              		.loc 2 127 9 is_stmt 1 view .LVU356
 127:Inc/queue.h   ****         if (__head == buff->size)
 1328              		.loc 2 127 23 is_stmt 0 view .LVU357
 1329 008c 154D     		ldr	r5, .L96
 1330 008e AE68     		ldr	r6, [r5, #8]
 127:Inc/queue.h   ****         if (__head == buff->size)
 1331              		.loc 2 127 42 view .LVU358
 1332 0090 621C     		adds	r2, r4, #1
 1333 0092 92B2     		uxth	r2, r2
 1334              	.LVL116:
 127:Inc/queue.h   ****         if (__head == buff->size)
 1335              		.loc 2 127 35 view .LVU359
 1336 0094 345D     		ldrb	r4, [r6, r4]	@ zero_extendqisi2
 127:Inc/queue.h   ****         if (__head == buff->size)
 1337              		.loc 2 127 17 view .LVU360
 1338 0096 C454     		strb	r4, [r0, r3]
 128:Inc/queue.h   ****         {
 1339              		.loc 2 128 9 is_stmt 1 view .LVU361
 128:Inc/queue.h   ****         {
 1340              		.loc 2 128 27 is_stmt 0 view .LVU362
 1341 0098 AC88     		ldrh	r4, [r5, #4]
 128:Inc/queue.h   ****         {
 1342              		.loc 2 128 12 view .LVU363
 1343 009a A242     		cmp	r2, r4
 1344 009c F1D0     		beq	.L87
ARM GAS  /tmp/ccCyY6XY.s 			page 39


 127:Inc/queue.h   ****         if (__head == buff->size)
 1345              		.loc 2 127 42 view .LVU364
 1346 009e 1446     		mov	r4, r2
 1347 00a0 F0E7     		b	.L80
 1348              	.LVL117:
 1349              	.L94:
 127:Inc/queue.h   ****         if (__head == buff->size)
 1350              		.loc 2 127 42 view .LVU365
 1351              	.LBE172:
 134:Inc/queue.h   **** }
 1352              		.loc 2 134 5 is_stmt 1 view .LVU366
 134:Inc/queue.h   **** }
 1353              		.loc 2 134 16 is_stmt 0 view .LVU367
 1354 00a2 104B     		ldr	r3, .L96
 1355              	.LVL118:
 134:Inc/queue.h   **** }
 1356              		.loc 2 134 16 view .LVU368
 1357 00a4 5C80     		strh	r4, [r3, #2]	@ movhi
 1358              	.LVL119:
 134:Inc/queue.h   **** }
 1359              		.loc 2 134 16 view .LVU369
 1360              	.LBE173:
 1361              	.LBE175:
 453:Src/nexcore.c ****     buff[parse_length] = '\0';
 1362              		.loc 1 453 5 is_stmt 1 view .LVU370
 1363              		.loc 1 453 9 is_stmt 0 view .LVU371
 1364 00a6 C9B2     		uxtb	r1, r1
 1365              		.loc 1 453 24 view .LVU372
 1366 00a8 0023     		movs	r3, #0
 1367 00aa 4354     		strb	r3, [r0, r1]
 454:Src/nexcore.c **** 
 455:Src/nexcore.c ****     characters_to_parse -= parse_length;
 1368              		.loc 1 455 5 is_stmt 1 view .LVU373
 1369              		.loc 1 455 25 is_stmt 0 view .LVU374
 1370 00ac ACEB0E05 		sub	r5, ip, lr
 1371              	.LVL120:
 456:Src/nexcore.c **** 
 457:Src/nexcore.c ****     // If all the data is parsed, remove the terminate flag.
 458:Src/nexcore.c ****     if (characters_to_parse == 0)
 1372              		.loc 1 458 5 is_stmt 1 view .LVU375
 1373              		.loc 1 458 8 is_stmt 0 view .LVU376
 1374 00b0 15F0FF00 		ands	r0, r5, #255
 1375              	.LVL121:
 1376              		.loc 1 458 8 view .LVU377
 1377 00b4 11D1     		bne	.L82
 459:Src/nexcore.c ****     {
 460:Src/nexcore.c ****         // Remove terminate flag.
 461:Src/nexcore.c ****         Queue_Remove(&RxQueue, sizeof(MessageTerminator));
 1378              		.loc 1 461 9 is_stmt 1 view .LVU378
 1379              	.LVL122:
 1380              	.LBB176:
 1381              	.LBI176:
 161:Inc/queue.h   **** {
 1382              		.loc 2 161 20 view .LVU379
 1383              	.LBB177:
 164:Inc/queue.h   ****     {
 1384              		.loc 2 164 5 view .LVU380
ARM GAS  /tmp/ccCyY6XY.s 			page 40


 1385              	.LBB178:
 1386              	.LBI178:
 144:Inc/queue.h   **** {
 1387              		.loc 2 144 24 view .LVU381
 1388              	.LBB179:
 146:Inc/queue.h   ****     if (elements < 0)
 1389              		.loc 2 146 5 view .LVU382
 146:Inc/queue.h   ****     if (elements < 0)
 1390              		.loc 2 146 28 is_stmt 0 view .LVU383
 1391 00b6 0B4A     		ldr	r2, .L96
 1392 00b8 1388     		ldrh	r3, [r2]
 146:Inc/queue.h   ****     if (elements < 0)
 1393              		.loc 2 146 41 view .LVU384
 1394 00ba 5288     		ldrh	r2, [r2, #2]
 1395              	.LVL123:
 147:Inc/queue.h   ****     {
 1396              		.loc 2 147 5 is_stmt 1 view .LVU385
 147:Inc/queue.h   ****     {
 1397              		.loc 2 147 8 is_stmt 0 view .LVU386
 1398 00bc 9B1A     		subs	r3, r3, r2
 1399              	.LVL124:
 147:Inc/queue.h   ****     {
 1400              		.loc 2 147 8 view .LVU387
 1401 00be 0DD4     		bmi	.L95
 1402              	.LVL125:
 1403              	.L83:
 152:Inc/queue.h   **** }
 1404              		.loc 2 152 5 is_stmt 1 view .LVU388
 152:Inc/queue.h   **** }
 1405              		.loc 2 152 13 is_stmt 0 view .LVU389
 1406 00c0 9BB2     		uxth	r3, r3
 1407              	.LVL126:
 152:Inc/queue.h   **** }
 1408              		.loc 2 152 13 view .LVU390
 1409              	.LBE179:
 1410              	.LBE178:
 164:Inc/queue.h   ****     {
 1411              		.loc 2 164 8 view .LVU391
 1412 00c2 022B     		cmp	r3, #2
 1413 00c4 09D9     		bls	.L82
 1414              	.LBB181:
 166:Inc/queue.h   ****         __head += length;
 1415              		.loc 2 166 9 is_stmt 1 view .LVU392
 1416              	.LVL127:
 167:Inc/queue.h   ****         if (__head >= buff->size)
 1417              		.loc 2 167 9 view .LVU393
 167:Inc/queue.h   ****         if (__head >= buff->size)
 1418              		.loc 2 167 16 is_stmt 0 view .LVU394
 1419 00c6 0332     		adds	r2, r2, #3
 1420              	.LVL128:
 167:Inc/queue.h   ****         if (__head >= buff->size)
 1421              		.loc 2 167 16 view .LVU395
 1422 00c8 92B2     		uxth	r2, r2
 1423              	.LVL129:
 168:Inc/queue.h   ****         {
 1424              		.loc 2 168 9 is_stmt 1 view .LVU396
 168:Inc/queue.h   ****         {
ARM GAS  /tmp/ccCyY6XY.s 			page 41


 1425              		.loc 2 168 27 is_stmt 0 view .LVU397
 1426 00ca 064B     		ldr	r3, .L96
 1427 00cc 9B88     		ldrh	r3, [r3, #4]
 168:Inc/queue.h   ****         {
 1428              		.loc 2 168 12 view .LVU398
 1429 00ce 9A42     		cmp	r2, r3
 1430 00d0 01D3     		bcc	.L84
 170:Inc/queue.h   ****         }
 1431              		.loc 2 170 13 is_stmt 1 view .LVU399
 170:Inc/queue.h   ****         }
 1432              		.loc 2 170 20 is_stmt 0 view .LVU400
 1433 00d2 D21A     		subs	r2, r2, r3
 1434              	.LVL130:
 170:Inc/queue.h   ****         }
 1435              		.loc 2 170 20 view .LVU401
 1436 00d4 92B2     		uxth	r2, r2
 1437              	.LVL131:
 1438              	.L84:
 172:Inc/queue.h   ****     }
 1439              		.loc 2 172 9 is_stmt 1 view .LVU402
 172:Inc/queue.h   ****     }
 1440              		.loc 2 172 20 is_stmt 0 view .LVU403
 1441 00d6 034B     		ldr	r3, .L96
 1442 00d8 5A80     		strh	r2, [r3, #2]	@ movhi
 1443              	.LVL132:
 1444              	.L82:
 172:Inc/queue.h   ****     }
 1445              		.loc 2 172 20 view .LVU404
 1446              	.LBE181:
 1447              	.LBE177:
 1448              	.LBE176:
 462:Src/nexcore.c ****     }
 463:Src/nexcore.c **** 
 464:Src/nexcore.c ****     return characters_to_parse;
 1449              		.loc 1 464 5 is_stmt 1 view .LVU405
 465:Src/nexcore.c **** }
 1450              		.loc 1 465 1 is_stmt 0 view .LVU406
 1451 00da F0BD     		pop	{r4, r5, r6, r7, pc}
 1452              	.LVL133:
 1453              	.L95:
 1454              	.LBB184:
 1455              	.LBB183:
 1456              	.LBB182:
 1457              	.LBB180:
 149:Inc/queue.h   ****     }
 1458              		.loc 2 149 9 is_stmt 1 view .LVU407
 149:Inc/queue.h   ****     }
 1459              		.loc 2 149 25 is_stmt 0 view .LVU408
 1460 00dc 0149     		ldr	r1, .L96
 1461 00de 8988     		ldrh	r1, [r1, #4]
 149:Inc/queue.h   ****     }
 1462              		.loc 2 149 18 view .LVU409
 1463 00e0 0B44     		add	r3, r3, r1
 1464              	.LVL134:
 149:Inc/queue.h   ****     }
 1465              		.loc 2 149 18 view .LVU410
 1466 00e2 EDE7     		b	.L83
ARM GAS  /tmp/ccCyY6XY.s 			page 42


 1467              	.L97:
 1468              		.align	2
 1469              	.L96:
 1470 00e4 00000000 		.word	.LANCHOR3
 1471 00e8 00000000 		.word	.LANCHOR7
 1472              	.LBE180:
 1473              	.LBE182:
 1474              	.LBE183:
 1475              	.LBE184:
 1476              		.cfi_endproc
 1477              	.LFE97:
 1479              		.section	.text.Nexcore_ErrorCb,"ax",%progbits
 1480              		.align	1
 1481              		.weak	Nexcore_ErrorCb
 1482              		.syntax unified
 1483              		.thumb
 1484              		.thumb_func
 1485              		.fpu softvfp
 1487              	Nexcore_ErrorCb:
 1488              	.LVL135:
 1489              	.LFB99:
 466:Src/nexcore.c **** 
 467:Src/nexcore.c **** /* Private functions -------------------------------------------------------*/
 468:Src/nexcore.c **** /**
 469:Src/nexcore.c ****  * @brief Called when terminator flag is detected. This function deserializes
 470:Src/nexcore.c ****  * the received message and triggers required callbacks.
 471:Src/nexcore.c ****  * 
 472:Src/nexcore.c ****  * @param length: Length of the message received.
 473:Src/nexcore.c ****  */
 474:Src/nexcore.c **** void messageReceived(uint8_t length)
 475:Src/nexcore.c **** {
 476:Src/nexcore.c ****     uint8_t bytes_to_parse = length;
 477:Src/nexcore.c ****     uint8_t ret_code;
 478:Src/nexcore.c ****     ret_code = Queue_Dequeue(&RxQueue);
 479:Src/nexcore.c ****     bytes_to_parse--;
 480:Src/nexcore.c **** 
 481:Src/nexcore.c ****     switch (ret_code)
 482:Src/nexcore.c ****     {
 483:Src/nexcore.c ****     case NR_TRANSPARENT_DATA_READY:
 484:Src/nexcore.c ****     case NR_TRANSPARENT_DATA_FINISHED:
 485:Src/nexcore.c ****     case NR_START_MICROSD_UPGRAGE:
 486:Src/nexcore.c ****     case NR_AUTO_ENTERED_SLEEP_MODE:
 487:Src/nexcore.c ****     case NR_AUTO_WAKE_FROM_SLEEP:
 488:Src/nexcore.c ****     case NR_TOUCH_COORDINATE_AWAKE:
 489:Src/nexcore.c ****     case NR_TOUCH_COORDINATE_SLEEP:
 490:Src/nexcore.c ****     case NR_CURRENT_PAGE_NUMBER:
 491:Src/nexcore.c ****     case NR_INVALID_CRC:
 492:Src/nexcore.c ****     case NR_INVALID_FILE_OPERATION:
 493:Src/nexcore.c ****     case NR_EEPROM_OPERATION_FAILED:
 494:Src/nexcore.c ****     case NR_IO_OPERATION_FAILED:
 495:Src/nexcore.c ****         break;
 496:Src/nexcore.c **** 
 497:Src/nexcore.c ****     case NR_INVALID_INSTRUCTION:
 498:Src/nexcore.c ****     case NR_INVALID_COMPONENT_ID:
 499:Src/nexcore.c ****     case NR_INVALID_PAGE_ID:
 500:Src/nexcore.c ****     case NR_INVALID_PICTURE_ID:
 501:Src/nexcore.c ****     case NR_INVALID_FONT_ID:
ARM GAS  /tmp/ccCyY6XY.s 			page 43


 502:Src/nexcore.c ****     case NR_INVALID_WAVEFORM_ID_OR_CHANNEL:
 503:Src/nexcore.c ****     case NR_INVALID_VARIABLE_NAME_OR_ATTIRIBUTE:
 504:Src/nexcore.c ****     case NR_INVALID_VARIABLE_OPERATION:
 505:Src/nexcore.c ****     case NR_ASSIGNMENT_FAILED_TO_ASSIGN:
 506:Src/nexcore.c ****     case NR_INVALID_QUANTITY_OF_PARAMETERS:
 507:Src/nexcore.c ****     case NR_VARIABLE_NAME_TOO_LONG:
 508:Src/nexcore.c ****     {
 509:Src/nexcore.c ****         if (bytes_to_parse != 0)
 510:Src/nexcore.c ****         {
 511:Src/nexcore.c ****             Nexcore_ErrorCb(ActiveTransactionId, NEXCORE_ERROR_INVALID_RECV_MSG);
 512:Src/nexcore.c ****             Queue_Remove(&RxQueue, bytes_to_parse);
 513:Src/nexcore.c ****         }
 514:Src/nexcore.c ****         else
 515:Src/nexcore.c ****         {
 516:Src/nexcore.c ****             Nexcore_ErrorCb(ActiveTransactionId, NEXCORE_ERROR_INVALID_OPERATION);
 517:Src/nexcore.c ****         }
 518:Src/nexcore.c ****     }
 519:Src/nexcore.c ****     break;
 520:Src/nexcore.c **** 
 521:Src/nexcore.c ****     case NR_ESCAPE_CHARACTER_INVALID:
 522:Src/nexcore.c ****     case NR_INVALID_BAUDRATE_SETTING:
 523:Src/nexcore.c ****     {
 524:Src/nexcore.c ****         if (bytes_to_parse != 0)
 525:Src/nexcore.c ****         {
 526:Src/nexcore.c ****             Nexcore_ErrorCb(ActiveTransactionId, NEXCORE_ERROR_INVALID_RECV_MSG);
 527:Src/nexcore.c ****             Queue_Remove(&RxQueue, bytes_to_parse);
 528:Src/nexcore.c ****         }
 529:Src/nexcore.c ****         else
 530:Src/nexcore.c ****         {
 531:Src/nexcore.c ****             Nexcore_ErrorCb(ActiveTransactionId, NEXCORE_ERROR_COMMUNICATION_PROBLEM);
 532:Src/nexcore.c ****         }
 533:Src/nexcore.c ****     }
 534:Src/nexcore.c ****     break;
 535:Src/nexcore.c **** 
 536:Src/nexcore.c ****     case NR_SERIAL_BUFFER_OVERFLOW:
 537:Src/nexcore.c ****     {
 538:Src/nexcore.c ****         if (bytes_to_parse != 0)
 539:Src/nexcore.c ****         {
 540:Src/nexcore.c ****             Nexcore_ErrorCb(ActiveTransactionId, NEXCORE_ERROR_INVALID_RECV_MSG);
 541:Src/nexcore.c ****             Queue_Remove(&RxQueue, bytes_to_parse);
 542:Src/nexcore.c ****         }
 543:Src/nexcore.c ****         else
 544:Src/nexcore.c ****         {
 545:Src/nexcore.c ****             Nexcore_ErrorCb(ActiveTransactionId, NEXCORE_ERROR_BUFFER_OVERFLOW);
 546:Src/nexcore.c ****         }
 547:Src/nexcore.c ****     }
 548:Src/nexcore.c ****     break;
 549:Src/nexcore.c **** 
 550:Src/nexcore.c ****     case NR_NEXTION_READY:
 551:Src/nexcore.c ****     {
 552:Src/nexcore.c ****         if (bytes_to_parse != 0)
 553:Src/nexcore.c ****         {
 554:Src/nexcore.c ****             Nexcore_ErrorCb(ActiveTransactionId, NEXCORE_ERROR_INVALID_RECV_MSG);
 555:Src/nexcore.c ****             Queue_Remove(&RxQueue, bytes_to_parse);
 556:Src/nexcore.c ****         }
 557:Src/nexcore.c ****         else
 558:Src/nexcore.c ****         {
ARM GAS  /tmp/ccCyY6XY.s 			page 44


 559:Src/nexcore.c ****             Nexcore_InfoCb(ActiveTransactionId, NEXCORE_INFO_READY);
 560:Src/nexcore.c ****         }
 561:Src/nexcore.c ****     }
 562:Src/nexcore.c ****     break;
 563:Src/nexcore.c **** 
 564:Src/nexcore.c ****     case NR_INSTRUCTION_SUCCESSFUL:
 565:Src/nexcore.c ****     {
 566:Src/nexcore.c ****         if (bytes_to_parse != 0)
 567:Src/nexcore.c ****         {
 568:Src/nexcore.c ****             Nexcore_ErrorCb(ActiveTransactionId, NEXCORE_ERROR_INVALID_RECV_MSG);
 569:Src/nexcore.c ****             Queue_Remove(&RxQueue, bytes_to_parse);
 570:Src/nexcore.c ****         }
 571:Src/nexcore.c ****         else
 572:Src/nexcore.c ****         {
 573:Src/nexcore.c ****             Nexcore_InfoCb(ActiveTransactionId, NEXCORE_INFO_INSTRUCTION_SUCCESSFUL);
 574:Src/nexcore.c ****         }
 575:Src/nexcore.c ****     }
 576:Src/nexcore.c ****     break;
 577:Src/nexcore.c **** 
 578:Src/nexcore.c ****     case NR_TOUCH_EVENT:
 579:Src/nexcore.c ****     {
 580:Src/nexcore.c ****         if (bytes_to_parse != 3)
 581:Src/nexcore.c ****         {
 582:Src/nexcore.c ****             Nexcore_ErrorCb(ActiveTransactionId, NEXCORE_ERROR_INVALID_RECV_MSG);
 583:Src/nexcore.c ****             Queue_Remove(&RxQueue, bytes_to_parse);
 584:Src/nexcore.c ****         }
 585:Src/nexcore.c ****         else
 586:Src/nexcore.c ****         {
 587:Src/nexcore.c ****             uint8_t page_id, comp_id;
 588:Src/nexcore.c ****             Bool_t pressed;
 589:Src/nexcore.c ****             page_id = Queue_Dequeue(&RxQueue);
 590:Src/nexcore.c ****             comp_id = Queue_Dequeue(&RxQueue);
 591:Src/nexcore.c ****             pressed = (Queue_Dequeue(&RxQueue) == 0x01) ? TRUE : FALSE;
 592:Src/nexcore.c ****             Nexcore_TouchEventCb(ActiveTransactionId, page_id, comp_id, pressed);
 593:Src/nexcore.c ****         }
 594:Src/nexcore.c ****     }
 595:Src/nexcore.c ****     break;
 596:Src/nexcore.c **** 
 597:Src/nexcore.c ****     case NR_VARIED_STRING_DATA_ENCLOSED:
 598:Src/nexcore.c ****     {
 599:Src/nexcore.c ****         Nexcore_GetStringRspCb(ActiveTransactionId, bytes_to_parse);
 600:Src/nexcore.c ****     }
 601:Src/nexcore.c ****     break;
 602:Src/nexcore.c **** 
 603:Src/nexcore.c ****     case NR_NUMERIC_DATA_ENCLOSED:
 604:Src/nexcore.c ****     {
 605:Src/nexcore.c ****         if (bytes_to_parse != 4)
 606:Src/nexcore.c ****         {
 607:Src/nexcore.c ****             Nexcore_ErrorCb(ActiveTransactionId, NEXCORE_ERROR_INVALID_RECV_MSG);
 608:Src/nexcore.c ****             Queue_Remove(&RxQueue, bytes_to_parse);
 609:Src/nexcore.c ****         }
 610:Src/nexcore.c ****         else
 611:Src/nexcore.c ****         {
 612:Src/nexcore.c ****             uint8_t bytes[sizeof(uint32_t)];
 613:Src/nexcore.c ****             uint32_t value;
 614:Src/nexcore.c ****             Queue_DequeueArr(&RxQueue, bytes, sizeof(bytes));
 615:Src/nexcore.c ****             value = bytes[0] + (bytes[1] << 8) + (bytes[2] << 16) + (bytes[3] << 24);
ARM GAS  /tmp/ccCyY6XY.s 			page 45


 616:Src/nexcore.c ****             Nexcore_GetNumberRspCb(ActiveTransactionId, value);
 617:Src/nexcore.c ****         }
 618:Src/nexcore.c ****     }
 619:Src/nexcore.c ****     break;
 620:Src/nexcore.c ****     }
 621:Src/nexcore.c **** 
 622:Src/nexcore.c ****     // If nothing to parse; get rid of the terminator bytes in the buffer.
 623:Src/nexcore.c ****     if (bytes_to_parse == 0)
 624:Src/nexcore.c ****     {
 625:Src/nexcore.c ****         Queue_Remove(&RxQueue, sizeof(MessageTerminator));
 626:Src/nexcore.c ****     }
 627:Src/nexcore.c **** }
 628:Src/nexcore.c **** 
 629:Src/nexcore.c **** /* Default callbacks -------------------------------------------------------*/
 630:Src/nexcore.c **** /**
 631:Src/nexcore.c ****  * @brief Default implementation of the error callback function.
 632:Src/nexcore.c ****  * 
 633:Src/nexcore.c ****  * @param activeTransactionId: Current transaction ID.
 634:Src/nexcore.c ****  * @param error: Error code.
 635:Src/nexcore.c ****  */
 636:Src/nexcore.c **** __weak void Nexcore_ErrorCb(uint8_t activeTransactionId, Nexcore_Error_t error)
 637:Src/nexcore.c **** {
 1490              		.loc 1 637 1 is_stmt 1 view -0
 1491              		.cfi_startproc
 1492              		@ args = 0, pretend = 0, frame = 0
 1493              		@ frame_needed = 0, uses_anonymous_args = 0
 1494              		@ link register save eliminated.
 638:Src/nexcore.c **** }
 1495              		.loc 1 638 1 view .LVU412
 1496 0000 7047     		bx	lr
 1497              		.cfi_endproc
 1498              	.LFE99:
 1500              		.section	.text.Nexcore_InfoCb,"ax",%progbits
 1501              		.align	1
 1502              		.weak	Nexcore_InfoCb
 1503              		.syntax unified
 1504              		.thumb
 1505              		.thumb_func
 1506              		.fpu softvfp
 1508              	Nexcore_InfoCb:
 1509              	.LVL136:
 1510              	.LFB100:
 639:Src/nexcore.c **** 
 640:Src/nexcore.c **** /**
 641:Src/nexcore.c ****  * @brief Default implementation of the info callback function.
 642:Src/nexcore.c ****  * 
 643:Src/nexcore.c ****  * @param activeTransactionId: Current transaction ID.
 644:Src/nexcore.c ****  * @param error: Info code.
 645:Src/nexcore.c ****  */
 646:Src/nexcore.c **** __weak void Nexcore_InfoCb(uint8_t activeTransactionId, Nexcore_Info_t info)
 647:Src/nexcore.c **** {
 1511              		.loc 1 647 1 view -0
 1512              		.cfi_startproc
 1513              		@ args = 0, pretend = 0, frame = 0
 1514              		@ frame_needed = 0, uses_anonymous_args = 0
 1515              		@ link register save eliminated.
 648:Src/nexcore.c **** }
ARM GAS  /tmp/ccCyY6XY.s 			page 46


 1516              		.loc 1 648 1 view .LVU414
 1517 0000 7047     		bx	lr
 1518              		.cfi_endproc
 1519              	.LFE100:
 1521              		.section	.text.Nexcore_TouchEventCb,"ax",%progbits
 1522              		.align	1
 1523              		.weak	Nexcore_TouchEventCb
 1524              		.syntax unified
 1525              		.thumb
 1526              		.thumb_func
 1527              		.fpu softvfp
 1529              	Nexcore_TouchEventCb:
 1530              	.LVL137:
 1531              	.LFB101:
 649:Src/nexcore.c **** 
 650:Src/nexcore.c **** /**
 651:Src/nexcore.c ****  * @brief Default implementation of the touch event callback function.
 652:Src/nexcore.c ****  * 
 653:Src/nexcore.c ****  * @param activeTransactionId: Current transaction ID.
 654:Src/nexcore.c ****  * @param pageId: Active page ID.
 655:Src/nexcore.c ****  * @param componentId: ID of the component whom touch event is triggered.
 656:Src/nexcore.c ****  * @param pressed: Touch event type; TRUE if pressed FALSE if released.
 657:Src/nexcore.c ****  */
 658:Src/nexcore.c **** __weak void Nexcore_TouchEventCb(uint8_t activeTransactionId, uint8_t pageId,
 659:Src/nexcore.c ****                                  uint8_t componentId, Bool_t pressed)
 660:Src/nexcore.c **** {
 1532              		.loc 1 660 1 view -0
 1533              		.cfi_startproc
 1534              		@ args = 0, pretend = 0, frame = 0
 1535              		@ frame_needed = 0, uses_anonymous_args = 0
 1536              		@ link register save eliminated.
 661:Src/nexcore.c **** }
 1537              		.loc 1 661 1 view .LVU416
 1538 0000 7047     		bx	lr
 1539              		.cfi_endproc
 1540              	.LFE101:
 1542              		.section	.text.Nexcore_GetStringRspCb,"ax",%progbits
 1543              		.align	1
 1544              		.weak	Nexcore_GetStringRspCb
 1545              		.syntax unified
 1546              		.thumb
 1547              		.thumb_func
 1548              		.fpu softvfp
 1550              	Nexcore_GetStringRspCb:
 1551              	.LVL138:
 1552              	.LFB102:
 662:Src/nexcore.c **** 
 663:Src/nexcore.c **** /**
 664:Src/nexcore.c ****  * @brief Default implementation of the get(string attribute) response callback function.
 665:Src/nexcore.c ****  * Nexcore_ParseReturnedString function should be called after this function to parse the
 666:Src/nexcore.c ****  * returned string.
 667:Src/nexcore.c ****  * 
 668:Src/nexcore.c ****  * @param activeTransactionId: Current transaction ID.
 669:Src/nexcore.c ****  * @param stringLength: Length of the returned string.
 670:Src/nexcore.c ****  */
 671:Src/nexcore.c **** __weak void Nexcore_GetStringRspCb(uint8_t activeTransactionId, uint8_t stringLength)
 672:Src/nexcore.c **** {
ARM GAS  /tmp/ccCyY6XY.s 			page 47


 1553              		.loc 1 672 1 view -0
 1554              		.cfi_startproc
 1555              		@ args = 0, pretend = 0, frame = 0
 1556              		@ frame_needed = 0, uses_anonymous_args = 0
 1557              		@ link register save eliminated.
 673:Src/nexcore.c **** }
 1558              		.loc 1 673 1 view .LVU418
 1559 0000 7047     		bx	lr
 1560              		.cfi_endproc
 1561              	.LFE102:
 1563              		.section	.text.Nexcore_GetNumberRspCb,"ax",%progbits
 1564              		.align	1
 1565              		.weak	Nexcore_GetNumberRspCb
 1566              		.syntax unified
 1567              		.thumb
 1568              		.thumb_func
 1569              		.fpu softvfp
 1571              	Nexcore_GetNumberRspCb:
 1572              	.LVL139:
 1573              	.LFB103:
 674:Src/nexcore.c **** 
 675:Src/nexcore.c **** /**
 676:Src/nexcore.c ****  * @brief Default implementation of the get(numeric attribute) response callback function.
 677:Src/nexcore.c ****  * 
 678:Src/nexcore.c ****  * @param activeTransactionId: Current transaction ID.
 679:Src/nexcore.c ****  * @param value: Returned value.
 680:Src/nexcore.c ****  */
 681:Src/nexcore.c **** __weak void Nexcore_GetNumberRspCb(uint8_t ActiveTransactionId, uint32_t value)
 682:Src/nexcore.c **** {
 1574              		.loc 1 682 1 view -0
 1575              		.cfi_startproc
 1576              		@ args = 0, pretend = 0, frame = 0
 1577              		@ frame_needed = 0, uses_anonymous_args = 0
 1578              		@ link register save eliminated.
 683:Src/nexcore.c **** }...
 1579              		.loc 1 683 1 view .LVU420
 1580 0000 7047     		bx	lr
 1581              		.cfi_endproc
 1582              	.LFE103:
 1584              		.section	.text.messageReceived,"ax",%progbits
 1585              		.align	1
 1586              		.syntax unified
 1587              		.thumb
 1588              		.thumb_func
 1589              		.fpu softvfp
 1591              	messageReceived:
 1592              	.LVL140:
 1593              	.LFB98:
 475:Src/nexcore.c **** {
 1594              		.loc 1 475 1 view -0
 1595              		.cfi_startproc
 1596              		@ args = 0, pretend = 0, frame = 8
 1597              		@ frame_needed = 0, uses_anonymous_args = 0
 475:Src/nexcore.c **** {
 1598              		.loc 1 475 1 is_stmt 0 view .LVU422
 1599 0000 70B5     		push	{r4, r5, r6, lr}
 1600              	.LCFI30:
ARM GAS  /tmp/ccCyY6XY.s 			page 48


 1601              		.cfi_def_cfa_offset 16
 1602              		.cfi_offset 4, -16
 1603              		.cfi_offset 5, -12
 1604              		.cfi_offset 6, -8
 1605              		.cfi_offset 14, -4
 1606 0002 82B0     		sub	sp, sp, #8
 1607              	.LCFI31:
 1608              		.cfi_def_cfa_offset 24
 476:Src/nexcore.c ****     uint8_t bytes_to_parse = length;
 1609              		.loc 1 476 5 is_stmt 1 view .LVU423
 1610              	.LVL141:
 477:Src/nexcore.c ****     uint8_t ret_code;
 1611              		.loc 1 477 5 view .LVU424
 478:Src/nexcore.c ****     ret_code = Queue_Dequeue(&RxQueue);
 1612              		.loc 1 478 5 view .LVU425
 1613              	.LBB185:
 1614              	.LBI185:
  98:Inc/queue.h   **** {
 1615              		.loc 2 98 23 view .LVU426
 1616              	.LBB186:
 100:Inc/queue.h   **** 
 1617              		.loc 2 100 5 view .LVU427
 100:Inc/queue.h   **** 
 1618              		.loc 2 100 14 is_stmt 0 view .LVU428
 1619 0004 864A     		ldr	r2, .L166
 1620 0006 5188     		ldrh	r1, [r2, #2]
 1621              	.LVL142:
 103:Inc/queue.h   ****     if (__head == buff->size)
 1622              		.loc 2 103 5 is_stmt 1 view .LVU429
 103:Inc/queue.h   ****     if (__head == buff->size)
 1623              		.loc 2 103 27 is_stmt 0 view .LVU430
 1624 0008 9668     		ldr	r6, [r2, #8]
 103:Inc/queue.h   ****     if (__head == buff->size)
 1625              		.loc 2 103 46 view .LVU431
 1626 000a 4B1C     		adds	r3, r1, #1
 1627 000c 9BB2     		uxth	r3, r3
 1628              	.LVL143:
 103:Inc/queue.h   ****     if (__head == buff->size)
 1629              		.loc 2 103 13 view .LVU432
 1630 000e 715C     		ldrb	r1, [r6, r1]	@ zero_extendqisi2
 1631              	.LVL144:
 104:Inc/queue.h   ****     {
 1632              		.loc 2 104 5 is_stmt 1 view .LVU433
 104:Inc/queue.h   ****     {
 1633              		.loc 2 104 23 is_stmt 0 view .LVU434
 1634 0010 9588     		ldrh	r5, [r2, #4]
 104:Inc/queue.h   ****     {
 1635              		.loc 2 104 8 view .LVU435
 1636 0012 AB42     		cmp	r3, r5
 1637 0014 00F09280 		beq	.L151
 1638              	.LVL145:
 1639              	.L104:
 109:Inc/queue.h   **** 
 1640              		.loc 2 109 5 is_stmt 1 view .LVU436
 109:Inc/queue.h   **** 
 1641              		.loc 2 109 16 is_stmt 0 view .LVU437
 1642 0018 814A     		ldr	r2, .L166
ARM GAS  /tmp/ccCyY6XY.s 			page 49


 1643 001a 5380     		strh	r3, [r2, #2]	@ movhi
 111:Inc/queue.h   **** }
 1644              		.loc 2 111 5 is_stmt 1 view .LVU438
 1645              	.LVL146:
 111:Inc/queue.h   **** }
 1646              		.loc 2 111 5 is_stmt 0 view .LVU439
 1647              	.LBE186:
 1648              	.LBE185:
 479:Src/nexcore.c ****     bytes_to_parse--;
 1649              		.loc 1 479 5 is_stmt 1 view .LVU440
 479:Src/nexcore.c ****     bytes_to_parse--;
 1650              		.loc 1 479 19 is_stmt 0 view .LVU441
 1651 001c 441E     		subs	r4, r0, #1
 1652 001e E4B2     		uxtb	r4, r4
 1653              	.LVL147:
 481:Src/nexcore.c ****     switch (ret_code)
 1654              		.loc 1 481 5 is_stmt 1 view .LVU442
 1655 0020 8829     		cmp	r1, #136
 1656 0022 00F29281 		bhi	.L105
 1657 0026 DFE811F0 		tbh	[pc, r1, lsl #1]
 1658              	.L107:
 1659 002a 8B00     		.2byte	(.L112-.L107)/2
 1660 002c 2401     		.2byte	(.L114-.L107)/2
 1661 002e 8B00     		.2byte	(.L112-.L107)/2
 1662 0030 8B00     		.2byte	(.L112-.L107)/2
 1663 0032 8B00     		.2byte	(.L112-.L107)/2
 1664 0034 8B00     		.2byte	(.L112-.L107)/2
 1665 0036 9001     		.2byte	(.L105-.L107)/2
 1666 0038 9001     		.2byte	(.L105-.L107)/2
 1667 003a 9001     		.2byte	(.L105-.L107)/2
 1668 003c 9001     		.2byte	(.L105-.L107)/2
 1669 003e 9001     		.2byte	(.L105-.L107)/2
 1670 0040 9001     		.2byte	(.L105-.L107)/2
 1671 0042 9001     		.2byte	(.L105-.L107)/2
 1672 0044 9001     		.2byte	(.L105-.L107)/2
 1673 0046 9001     		.2byte	(.L105-.L107)/2
 1674 0048 9001     		.2byte	(.L105-.L107)/2
 1675 004a 9001     		.2byte	(.L105-.L107)/2
 1676 004c B000     		.2byte	(.L113-.L107)/2
 1677 004e 8B00     		.2byte	(.L112-.L107)/2
 1678 0050 9001     		.2byte	(.L105-.L107)/2
 1679 0052 9001     		.2byte	(.L105-.L107)/2
 1680 0054 9001     		.2byte	(.L105-.L107)/2
 1681 0056 9001     		.2byte	(.L105-.L107)/2
 1682 0058 9001     		.2byte	(.L105-.L107)/2
 1683 005a 9001     		.2byte	(.L105-.L107)/2
 1684 005c 9001     		.2byte	(.L105-.L107)/2
 1685 005e 8B00     		.2byte	(.L112-.L107)/2
 1686 0060 8B00     		.2byte	(.L112-.L107)/2
 1687 0062 8B00     		.2byte	(.L112-.L107)/2
 1688 0064 9001     		.2byte	(.L105-.L107)/2
 1689 0066 8B00     		.2byte	(.L112-.L107)/2
 1690 0068 9001     		.2byte	(.L105-.L107)/2
 1691 006a B000     		.2byte	(.L113-.L107)/2
 1692 006c 9001     		.2byte	(.L105-.L107)/2
 1693 006e 9001     		.2byte	(.L105-.L107)/2
 1694 0070 8B00     		.2byte	(.L112-.L107)/2
ARM GAS  /tmp/ccCyY6XY.s 			page 50


 1695 0072 D500     		.2byte	(.L111-.L107)/2
 1696 0074 9001     		.2byte	(.L105-.L107)/2
 1697 0076 9001     		.2byte	(.L105-.L107)/2
 1698 0078 9001     		.2byte	(.L105-.L107)/2
 1699 007a 9001     		.2byte	(.L105-.L107)/2
 1700 007c 9001     		.2byte	(.L105-.L107)/2
 1701 007e 9001     		.2byte	(.L105-.L107)/2
 1702 0080 9001     		.2byte	(.L105-.L107)/2
 1703 0082 9001     		.2byte	(.L105-.L107)/2
 1704 0084 9001     		.2byte	(.L105-.L107)/2
 1705 0086 9001     		.2byte	(.L105-.L107)/2
 1706 0088 9001     		.2byte	(.L105-.L107)/2
 1707 008a 9001     		.2byte	(.L105-.L107)/2
 1708 008c 9001     		.2byte	(.L105-.L107)/2
 1709 008e 9001     		.2byte	(.L105-.L107)/2
 1710 0090 9001     		.2byte	(.L105-.L107)/2
 1711 0092 9001     		.2byte	(.L105-.L107)/2
 1712 0094 9001     		.2byte	(.L105-.L107)/2
 1713 0096 9001     		.2byte	(.L105-.L107)/2
 1714 0098 9001     		.2byte	(.L105-.L107)/2
 1715 009a 9001     		.2byte	(.L105-.L107)/2
 1716 009c 9001     		.2byte	(.L105-.L107)/2
 1717 009e 9001     		.2byte	(.L105-.L107)/2
 1718 00a0 9001     		.2byte	(.L105-.L107)/2
 1719 00a2 9001     		.2byte	(.L105-.L107)/2
 1720 00a4 9001     		.2byte	(.L105-.L107)/2
 1721 00a6 9001     		.2byte	(.L105-.L107)/2
 1722 00a8 9001     		.2byte	(.L105-.L107)/2
 1723 00aa 9001     		.2byte	(.L105-.L107)/2
 1724 00ac 9001     		.2byte	(.L105-.L107)/2
 1725 00ae 9001     		.2byte	(.L105-.L107)/2
 1726 00b0 9001     		.2byte	(.L105-.L107)/2
 1727 00b2 9001     		.2byte	(.L105-.L107)/2
 1728 00b4 9001     		.2byte	(.L105-.L107)/2
 1729 00b6 9001     		.2byte	(.L105-.L107)/2
 1730 00b8 9001     		.2byte	(.L105-.L107)/2
 1731 00ba 9001     		.2byte	(.L105-.L107)/2
 1732 00bc 9001     		.2byte	(.L105-.L107)/2
 1733 00be 9001     		.2byte	(.L105-.L107)/2
 1734 00c0 9001     		.2byte	(.L105-.L107)/2
 1735 00c2 9001     		.2byte	(.L105-.L107)/2
 1736 00c4 9001     		.2byte	(.L105-.L107)/2
 1737 00c6 9001     		.2byte	(.L105-.L107)/2
 1738 00c8 9001     		.2byte	(.L105-.L107)/2
 1739 00ca 9001     		.2byte	(.L105-.L107)/2
 1740 00cc 9001     		.2byte	(.L105-.L107)/2
 1741 00ce 9001     		.2byte	(.L105-.L107)/2
 1742 00d0 9001     		.2byte	(.L105-.L107)/2
 1743 00d2 9001     		.2byte	(.L105-.L107)/2
 1744 00d4 9001     		.2byte	(.L105-.L107)/2
 1745 00d6 9001     		.2byte	(.L105-.L107)/2
 1746 00d8 9001     		.2byte	(.L105-.L107)/2
 1747 00da 9001     		.2byte	(.L105-.L107)/2
 1748 00dc 9001     		.2byte	(.L105-.L107)/2
 1749 00de 9001     		.2byte	(.L105-.L107)/2
 1750 00e0 9001     		.2byte	(.L105-.L107)/2
 1751 00e2 9001     		.2byte	(.L105-.L107)/2
ARM GAS  /tmp/ccCyY6XY.s 			page 51


 1752 00e4 9001     		.2byte	(.L105-.L107)/2
 1753 00e6 9001     		.2byte	(.L105-.L107)/2
 1754 00e8 9001     		.2byte	(.L105-.L107)/2
 1755 00ea 9001     		.2byte	(.L105-.L107)/2
 1756 00ec 9001     		.2byte	(.L105-.L107)/2
 1757 00ee 9001     		.2byte	(.L105-.L107)/2
 1758 00f0 9001     		.2byte	(.L105-.L107)/2
 1759 00f2 9001     		.2byte	(.L105-.L107)/2
 1760 00f4 4801     		.2byte	(.L110-.L107)/2
 1761 00f6 9001     		.2byte	(.L105-.L107)/2
 1762 00f8 9001     		.2byte	(.L105-.L107)/2
 1763 00fa 9001     		.2byte	(.L105-.L107)/2
 1764 00fc 9001     		.2byte	(.L105-.L107)/2
 1765 00fe 9001     		.2byte	(.L105-.L107)/2
 1766 0100 9001     		.2byte	(.L105-.L107)/2
 1767 0102 9001     		.2byte	(.L105-.L107)/2
 1768 0104 9001     		.2byte	(.L105-.L107)/2
 1769 0106 9001     		.2byte	(.L105-.L107)/2
 1770 0108 9001     		.2byte	(.L105-.L107)/2
 1771 010a 8B01     		.2byte	(.L109-.L107)/2
 1772 010c A501     		.2byte	(.L108-.L107)/2
 1773 010e 9001     		.2byte	(.L105-.L107)/2
 1774 0110 9001     		.2byte	(.L105-.L107)/2
 1775 0112 9001     		.2byte	(.L105-.L107)/2
 1776 0114 9001     		.2byte	(.L105-.L107)/2
 1777 0116 9001     		.2byte	(.L105-.L107)/2
 1778 0118 9001     		.2byte	(.L105-.L107)/2
 1779 011a 9001     		.2byte	(.L105-.L107)/2
 1780 011c 9001     		.2byte	(.L105-.L107)/2
 1781 011e 9001     		.2byte	(.L105-.L107)/2
 1782 0120 9001     		.2byte	(.L105-.L107)/2
 1783 0122 9001     		.2byte	(.L105-.L107)/2
 1784 0124 9001     		.2byte	(.L105-.L107)/2
 1785 0126 9001     		.2byte	(.L105-.L107)/2
 1786 0128 9001     		.2byte	(.L105-.L107)/2
 1787 012a 9001     		.2byte	(.L105-.L107)/2
 1788 012c 9001     		.2byte	(.L105-.L107)/2
 1789 012e 9001     		.2byte	(.L105-.L107)/2
 1790 0130 9001     		.2byte	(.L105-.L107)/2
 1791 0132 9001     		.2byte	(.L105-.L107)/2
 1792 0134 9001     		.2byte	(.L105-.L107)/2
 1793 0136 9001     		.2byte	(.L105-.L107)/2
 1794 0138 9001     		.2byte	(.L105-.L107)/2
 1795 013a FF00     		.2byte	(.L106-.L107)/2
 1796              	.LVL148:
 1797              		.p2align 1
 1798              	.L151:
 1799              	.LBB188:
 1800              	.LBB187:
 106:Inc/queue.h   ****     }
 1801              		.loc 2 106 16 is_stmt 0 view .LVU443
 1802 013c 0023     		movs	r3, #0
 1803              	.LVL149:
 106:Inc/queue.h   ****     }
 1804              		.loc 2 106 16 view .LVU444
 1805 013e 6BE7     		b	.L104
 1806              	.LVL150:
ARM GAS  /tmp/ccCyY6XY.s 			page 52


 1807              	.L112:
 106:Inc/queue.h   ****     }
 1808              		.loc 2 106 16 view .LVU445
 1809              	.LBE187:
 1810              	.LBE188:
 509:Src/nexcore.c ****         if (bytes_to_parse != 0)
 1811              		.loc 1 509 9 is_stmt 1 view .LVU446
 509:Src/nexcore.c ****         if (bytes_to_parse != 0)
 1812              		.loc 1 509 12 is_stmt 0 view .LVU447
 1813 0140 ECB1     		cbz	r4, .L115
 511:Src/nexcore.c ****             Nexcore_ErrorCb(ActiveTransactionId, NEXCORE_ERROR_INVALID_RECV_MSG);
 1814              		.loc 1 511 13 is_stmt 1 view .LVU448
 1815 0142 0421     		movs	r1, #4
 1816              	.LVL151:
 511:Src/nexcore.c ****             Nexcore_ErrorCb(ActiveTransactionId, NEXCORE_ERROR_INVALID_RECV_MSG);
 1817              		.loc 1 511 13 is_stmt 0 view .LVU449
 1818 0144 374B     		ldr	r3, .L166+4
 1819 0146 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1820              	.LVL152:
 511:Src/nexcore.c ****             Nexcore_ErrorCb(ActiveTransactionId, NEXCORE_ERROR_INVALID_RECV_MSG);
 1821              		.loc 1 511 13 view .LVU450
 1822 0148 FFF7FEFF 		bl	Nexcore_ErrorCb
 1823              	.LVL153:
 512:Src/nexcore.c ****             Queue_Remove(&RxQueue, bytes_to_parse);
 1824              		.loc 1 512 13 is_stmt 1 view .LVU451
 1825 014c A2B2     		uxth	r2, r4
 1826              	.LVL154:
 1827              	.LBB189:
 1828              	.LBI189:
 161:Inc/queue.h   **** {
 1829              		.loc 2 161 20 view .LVU452
 1830              	.LBB190:
 164:Inc/queue.h   ****     {
 1831              		.loc 2 164 5 view .LVU453
 1832              	.LBB191:
 1833              	.LBI191:
 144:Inc/queue.h   **** {
 1834              		.loc 2 144 24 view .LVU454
 1835              	.LBB192:
 146:Inc/queue.h   ****     if (elements < 0)
 1836              		.loc 2 146 5 view .LVU455
 146:Inc/queue.h   ****     if (elements < 0)
 1837              		.loc 2 146 28 is_stmt 0 view .LVU456
 1838 014e 3449     		ldr	r1, .L166
 1839 0150 0B88     		ldrh	r3, [r1]
 146:Inc/queue.h   ****     if (elements < 0)
 1840              		.loc 2 146 41 view .LVU457
 1841 0152 4988     		ldrh	r1, [r1, #2]
 1842              	.LVL155:
 147:Inc/queue.h   ****     {
 1843              		.loc 2 147 5 is_stmt 1 view .LVU458
 147:Inc/queue.h   ****     {
 1844              		.loc 2 147 8 is_stmt 0 view .LVU459
 1845 0154 5B1A     		subs	r3, r3, r1
 1846              	.LVL156:
 147:Inc/queue.h   ****     {
 1847              		.loc 2 147 8 view .LVU460
ARM GAS  /tmp/ccCyY6XY.s 			page 53


 1848 0156 0ED4     		bmi	.L152
 1849              	.LVL157:
 1850              	.L116:
 152:Inc/queue.h   **** }
 1851              		.loc 2 152 5 is_stmt 1 view .LVU461
 152:Inc/queue.h   **** }
 1852              		.loc 2 152 13 is_stmt 0 view .LVU462
 1853 0158 9BB2     		uxth	r3, r3
 1854              	.LVL158:
 152:Inc/queue.h   **** }
 1855              		.loc 2 152 13 view .LVU463
 1856              	.LBE192:
 1857              	.LBE191:
 164:Inc/queue.h   ****     {
 1858              		.loc 2 164 8 view .LVU464
 1859 015a 9A42     		cmp	r2, r3
 1860 015c 00F2F580 		bhi	.L105
 1861              	.LBB194:
 166:Inc/queue.h   ****         __head += length;
 1862              		.loc 2 166 9 is_stmt 1 view .LVU465
 1863              	.LVL159:
 167:Inc/queue.h   ****         if (__head >= buff->size)
 1864              		.loc 2 167 9 view .LVU466
 167:Inc/queue.h   ****         if (__head >= buff->size)
 1865              		.loc 2 167 16 is_stmt 0 view .LVU467
 1866 0160 0A44     		add	r2, r2, r1
 1867              	.LVL160:
 167:Inc/queue.h   ****         if (__head >= buff->size)
 1868              		.loc 2 167 16 view .LVU468
 1869 0162 92B2     		uxth	r2, r2
 1870              	.LVL161:
 168:Inc/queue.h   ****         {
 1871              		.loc 2 168 9 is_stmt 1 view .LVU469
 168:Inc/queue.h   ****         {
 1872              		.loc 2 168 27 is_stmt 0 view .LVU470
 1873 0164 2E4B     		ldr	r3, .L166
 1874 0166 9B88     		ldrh	r3, [r3, #4]
 168:Inc/queue.h   ****         {
 1875              		.loc 2 168 12 view .LVU471
 1876 0168 9A42     		cmp	r2, r3
 1877 016a 01D3     		bcc	.L117
 170:Inc/queue.h   ****         }
 1878              		.loc 2 170 13 is_stmt 1 view .LVU472
 170:Inc/queue.h   ****         }
 1879              		.loc 2 170 20 is_stmt 0 view .LVU473
 1880 016c D21A     		subs	r2, r2, r3
 1881              	.LVL162:
 170:Inc/queue.h   ****         }
 1882              		.loc 2 170 20 view .LVU474
 1883 016e 92B2     		uxth	r2, r2
 1884              	.LVL163:
 1885              	.L117:
 172:Inc/queue.h   ****     }
 1886              		.loc 2 172 9 is_stmt 1 view .LVU475
 172:Inc/queue.h   ****     }
 1887              		.loc 2 172 20 is_stmt 0 view .LVU476
 1888 0170 2B4B     		ldr	r3, .L166
ARM GAS  /tmp/ccCyY6XY.s 			page 54


 1889 0172 5A80     		strh	r2, [r3, #2]	@ movhi
 1890 0174 E9E0     		b	.L105
 1891              	.LVL164:
 1892              	.L152:
 172:Inc/queue.h   ****     }
 1893              		.loc 2 172 20 view .LVU477
 1894              	.LBE194:
 1895              	.LBB195:
 1896              	.LBB193:
 149:Inc/queue.h   ****     }
 1897              		.loc 2 149 9 is_stmt 1 view .LVU478
 149:Inc/queue.h   ****     }
 1898              		.loc 2 149 25 is_stmt 0 view .LVU479
 1899 0176 2A48     		ldr	r0, .L166
 1900 0178 8088     		ldrh	r0, [r0, #4]
 149:Inc/queue.h   ****     }
 1901              		.loc 2 149 18 view .LVU480
 1902 017a 0344     		add	r3, r3, r0
 1903              	.LVL165:
 149:Inc/queue.h   ****     }
 1904              		.loc 2 149 18 view .LVU481
 1905 017c ECE7     		b	.L116
 1906              	.LVL166:
 1907              	.L115:
 149:Inc/queue.h   ****     }
 1908              		.loc 2 149 18 view .LVU482
 1909              	.LBE193:
 1910              	.LBE195:
 1911              	.LBE190:
 1912              	.LBE189:
 516:Src/nexcore.c ****             Nexcore_ErrorCb(ActiveTransactionId, NEXCORE_ERROR_INVALID_OPERATION);
 1913              		.loc 1 516 13 is_stmt 1 view .LVU483
 1914 017e 0021     		movs	r1, #0
 1915              	.LVL167:
 516:Src/nexcore.c ****             Nexcore_ErrorCb(ActiveTransactionId, NEXCORE_ERROR_INVALID_OPERATION);
 1916              		.loc 1 516 13 is_stmt 0 view .LVU484
 1917 0180 284B     		ldr	r3, .L166+4
 1918 0182 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1919              	.LVL168:
 516:Src/nexcore.c ****             Nexcore_ErrorCb(ActiveTransactionId, NEXCORE_ERROR_INVALID_OPERATION);
 1920              		.loc 1 516 13 view .LVU485
 1921 0184 FFF7FEFF 		bl	Nexcore_ErrorCb
 1922              	.LVL169:
 1923 0188 DFE0     		b	.L105
 1924              	.LVL170:
 1925              	.L113:
 524:Src/nexcore.c ****         if (bytes_to_parse != 0)
 1926              		.loc 1 524 9 is_stmt 1 view .LVU486
 524:Src/nexcore.c ****         if (bytes_to_parse != 0)
 1927              		.loc 1 524 12 is_stmt 0 view .LVU487
 1928 018a ECB1     		cbz	r4, .L118
 526:Src/nexcore.c ****             Nexcore_ErrorCb(ActiveTransactionId, NEXCORE_ERROR_INVALID_RECV_MSG);
 1929              		.loc 1 526 13 is_stmt 1 view .LVU488
 1930 018c 0421     		movs	r1, #4
 1931              	.LVL171:
 526:Src/nexcore.c ****             Nexcore_ErrorCb(ActiveTransactionId, NEXCORE_ERROR_INVALID_RECV_MSG);
 1932              		.loc 1 526 13 is_stmt 0 view .LVU489
ARM GAS  /tmp/ccCyY6XY.s 			page 55


 1933 018e 254B     		ldr	r3, .L166+4
 1934 0190 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1935              	.LVL172:
 526:Src/nexcore.c ****             Nexcore_ErrorCb(ActiveTransactionId, NEXCORE_ERROR_INVALID_RECV_MSG);
 1936              		.loc 1 526 13 view .LVU490
 1937 0192 FFF7FEFF 		bl	Nexcore_ErrorCb
 1938              	.LVL173:
 527:Src/nexcore.c ****             Queue_Remove(&RxQueue, bytes_to_parse);
 1939              		.loc 1 527 13 is_stmt 1 view .LVU491
 1940 0196 A2B2     		uxth	r2, r4
 1941              	.LVL174:
 1942              	.LBB196:
 1943              	.LBI196:
 161:Inc/queue.h   **** {
 1944              		.loc 2 161 20 view .LVU492
 1945              	.LBB197:
 164:Inc/queue.h   ****     {
 1946              		.loc 2 164 5 view .LVU493
 1947              	.LBB198:
 1948              	.LBI198:
 144:Inc/queue.h   **** {
 1949              		.loc 2 144 24 view .LVU494
 1950              	.LBB199:
 146:Inc/queue.h   ****     if (elements < 0)
 1951              		.loc 2 146 5 view .LVU495
 146:Inc/queue.h   ****     if (elements < 0)
 1952              		.loc 2 146 28 is_stmt 0 view .LVU496
 1953 0198 2149     		ldr	r1, .L166
 1954 019a 0B88     		ldrh	r3, [r1]
 146:Inc/queue.h   ****     if (elements < 0)
 1955              		.loc 2 146 41 view .LVU497
 1956 019c 4988     		ldrh	r1, [r1, #2]
 1957              	.LVL175:
 147:Inc/queue.h   ****     {
 1958              		.loc 2 147 5 is_stmt 1 view .LVU498
 147:Inc/queue.h   ****     {
 1959              		.loc 2 147 8 is_stmt 0 view .LVU499
 1960 019e 5B1A     		subs	r3, r3, r1
 1961              	.LVL176:
 147:Inc/queue.h   ****     {
 1962              		.loc 2 147 8 view .LVU500
 1963 01a0 0ED4     		bmi	.L153
 1964              	.LVL177:
 1965              	.L119:
 152:Inc/queue.h   **** }
 1966              		.loc 2 152 5 is_stmt 1 view .LVU501
 152:Inc/queue.h   **** }
 1967              		.loc 2 152 13 is_stmt 0 view .LVU502
 1968 01a2 9BB2     		uxth	r3, r3
 1969              	.LVL178:
 152:Inc/queue.h   **** }
 1970              		.loc 2 152 13 view .LVU503
 1971              	.LBE199:
 1972              	.LBE198:
 164:Inc/queue.h   ****     {
 1973              		.loc 2 164 8 view .LVU504
 1974 01a4 9A42     		cmp	r2, r3
ARM GAS  /tmp/ccCyY6XY.s 			page 56


 1975 01a6 00F2D080 		bhi	.L105
 1976              	.LBB201:
 166:Inc/queue.h   ****         __head += length;
 1977              		.loc 2 166 9 is_stmt 1 view .LVU505
 1978              	.LVL179:
 167:Inc/queue.h   ****         if (__head >= buff->size)
 1979              		.loc 2 167 9 view .LVU506
 167:Inc/queue.h   ****         if (__head >= buff->size)
 1980              		.loc 2 167 16 is_stmt 0 view .LVU507
 1981 01aa 0A44     		add	r2, r2, r1
 1982              	.LVL180:
 167:Inc/queue.h   ****         if (__head >= buff->size)
 1983              		.loc 2 167 16 view .LVU508
 1984 01ac 92B2     		uxth	r2, r2
 1985              	.LVL181:
 168:Inc/queue.h   ****         {
 1986              		.loc 2 168 9 is_stmt 1 view .LVU509
 168:Inc/queue.h   ****         {
 1987              		.loc 2 168 27 is_stmt 0 view .LVU510
 1988 01ae 1C4B     		ldr	r3, .L166
 1989 01b0 9B88     		ldrh	r3, [r3, #4]
 168:Inc/queue.h   ****         {
 1990              		.loc 2 168 12 view .LVU511
 1991 01b2 9A42     		cmp	r2, r3
 1992 01b4 01D3     		bcc	.L120
 170:Inc/queue.h   ****         }
 1993              		.loc 2 170 13 is_stmt 1 view .LVU512
 170:Inc/queue.h   ****         }
 1994              		.loc 2 170 20 is_stmt 0 view .LVU513
 1995 01b6 D21A     		subs	r2, r2, r3
 1996              	.LVL182:
 170:Inc/queue.h   ****         }
 1997              		.loc 2 170 20 view .LVU514
 1998 01b8 92B2     		uxth	r2, r2
 1999              	.LVL183:
 2000              	.L120:
 172:Inc/queue.h   ****     }
 2001              		.loc 2 172 9 is_stmt 1 view .LVU515
 172:Inc/queue.h   ****     }
 2002              		.loc 2 172 20 is_stmt 0 view .LVU516
 2003 01ba 194B     		ldr	r3, .L166
 2004 01bc 5A80     		strh	r2, [r3, #2]	@ movhi
 2005 01be C4E0     		b	.L105
 2006              	.LVL184:
 2007              	.L153:
 172:Inc/queue.h   ****     }
 2008              		.loc 2 172 20 view .LVU517
 2009              	.LBE201:
 2010              	.LBB202:
 2011              	.LBB200:
 149:Inc/queue.h   ****     }
 2012              		.loc 2 149 9 is_stmt 1 view .LVU518
 149:Inc/queue.h   ****     }
 2013              		.loc 2 149 25 is_stmt 0 view .LVU519
 2014 01c0 1748     		ldr	r0, .L166
 2015 01c2 8088     		ldrh	r0, [r0, #4]
 149:Inc/queue.h   ****     }
ARM GAS  /tmp/ccCyY6XY.s 			page 57


 2016              		.loc 2 149 18 view .LVU520
 2017 01c4 0344     		add	r3, r3, r0
 2018              	.LVL185:
 149:Inc/queue.h   ****     }
 2019              		.loc 2 149 18 view .LVU521
 2020 01c6 ECE7     		b	.L119
 2021              	.LVL186:
 2022              	.L118:
 149:Inc/queue.h   ****     }
 2023              		.loc 2 149 18 view .LVU522
 2024              	.LBE200:
 2025              	.LBE202:
 2026              	.LBE197:
 2027              	.LBE196:
 531:Src/nexcore.c ****             Nexcore_ErrorCb(ActiveTransactionId, NEXCORE_ERROR_COMMUNICATION_PROBLEM);
 2028              		.loc 1 531 13 is_stmt 1 view .LVU523
 2029 01c8 0121     		movs	r1, #1
 2030              	.LVL187:
 531:Src/nexcore.c ****             Nexcore_ErrorCb(ActiveTransactionId, NEXCORE_ERROR_COMMUNICATION_PROBLEM);
 2031              		.loc 1 531 13 is_stmt 0 view .LVU524
 2032 01ca 164B     		ldr	r3, .L166+4
 2033 01cc 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2034              	.LVL188:
 531:Src/nexcore.c ****             Nexcore_ErrorCb(ActiveTransactionId, NEXCORE_ERROR_COMMUNICATION_PROBLEM);
 2035              		.loc 1 531 13 view .LVU525
 2036 01ce FFF7FEFF 		bl	Nexcore_ErrorCb
 2037              	.LVL189:
 2038 01d2 BAE0     		b	.L105
 2039              	.LVL190:
 2040              	.L111:
 538:Src/nexcore.c ****         if (bytes_to_parse != 0)
 2041              		.loc 1 538 9 is_stmt 1 view .LVU526
 538:Src/nexcore.c ****         if (bytes_to_parse != 0)
 2042              		.loc 1 538 12 is_stmt 0 view .LVU527
 2043 01d4 ECB1     		cbz	r4, .L121
 540:Src/nexcore.c ****             Nexcore_ErrorCb(ActiveTransactionId, NEXCORE_ERROR_INVALID_RECV_MSG);
 2044              		.loc 1 540 13 is_stmt 1 view .LVU528
 2045 01d6 0421     		movs	r1, #4
 2046              	.LVL191:
 540:Src/nexcore.c ****             Nexcore_ErrorCb(ActiveTransactionId, NEXCORE_ERROR_INVALID_RECV_MSG);
 2047              		.loc 1 540 13 is_stmt 0 view .LVU529
 2048 01d8 124B     		ldr	r3, .L166+4
 2049 01da 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2050              	.LVL192:
 540:Src/nexcore.c ****             Nexcore_ErrorCb(ActiveTransactionId, NEXCORE_ERROR_INVALID_RECV_MSG);
 2051              		.loc 1 540 13 view .LVU530
 2052 01dc FFF7FEFF 		bl	Nexcore_ErrorCb
 2053              	.LVL193:
 541:Src/nexcore.c ****             Queue_Remove(&RxQueue, bytes_to_parse);
 2054              		.loc 1 541 13 is_stmt 1 view .LVU531
 2055 01e0 A2B2     		uxth	r2, r4
 2056              	.LVL194:
 2057              	.LBB203:
 2058              	.LBI203:
 161:Inc/queue.h   **** {
 2059              		.loc 2 161 20 view .LVU532
 2060              	.LBB204:
ARM GAS  /tmp/ccCyY6XY.s 			page 58


 164:Inc/queue.h   ****     {
 2061              		.loc 2 164 5 view .LVU533
 2062              	.LBB205:
 2063              	.LBI205:
 144:Inc/queue.h   **** {
 2064              		.loc 2 144 24 view .LVU534
 2065              	.LBB206:
 146:Inc/queue.h   ****     if (elements < 0)
 2066              		.loc 2 146 5 view .LVU535
 146:Inc/queue.h   ****     if (elements < 0)
 2067              		.loc 2 146 28 is_stmt 0 view .LVU536
 2068 01e2 0F49     		ldr	r1, .L166
 2069 01e4 0B88     		ldrh	r3, [r1]
 146:Inc/queue.h   ****     if (elements < 0)
 2070              		.loc 2 146 41 view .LVU537
 2071 01e6 4988     		ldrh	r1, [r1, #2]
 2072              	.LVL195:
 147:Inc/queue.h   ****     {
 2073              		.loc 2 147 5 is_stmt 1 view .LVU538
 147:Inc/queue.h   ****     {
 2074              		.loc 2 147 8 is_stmt 0 view .LVU539
 2075 01e8 5B1A     		subs	r3, r3, r1
 2076              	.LVL196:
 147:Inc/queue.h   ****     {
 2077              		.loc 2 147 8 view .LVU540
 2078 01ea 0ED4     		bmi	.L154
 2079              	.LVL197:
 2080              	.L122:
 152:Inc/queue.h   **** }
 2081              		.loc 2 152 5 is_stmt 1 view .LVU541
 152:Inc/queue.h   **** }
 2082              		.loc 2 152 13 is_stmt 0 view .LVU542
 2083 01ec 9BB2     		uxth	r3, r3
 2084              	.LVL198:
 152:Inc/queue.h   **** }
 2085              		.loc 2 152 13 view .LVU543
 2086              	.LBE206:
 2087              	.LBE205:
 164:Inc/queue.h   ****     {
 2088              		.loc 2 164 8 view .LVU544
 2089 01ee 9A42     		cmp	r2, r3
 2090 01f0 00F2AB80 		bhi	.L105
 2091              	.LBB208:
 166:Inc/queue.h   ****         __head += length;
 2092              		.loc 2 166 9 is_stmt 1 view .LVU545
 2093              	.LVL199:
 167:Inc/queue.h   ****         if (__head >= buff->size)
 2094              		.loc 2 167 9 view .LVU546
 167:Inc/queue.h   ****         if (__head >= buff->size)
 2095              		.loc 2 167 16 is_stmt 0 view .LVU547
 2096 01f4 0A44     		add	r2, r2, r1
 2097              	.LVL200:
 167:Inc/queue.h   ****         if (__head >= buff->size)
 2098              		.loc 2 167 16 view .LVU548
 2099 01f6 92B2     		uxth	r2, r2
 2100              	.LVL201:
 168:Inc/queue.h   ****         {
ARM GAS  /tmp/ccCyY6XY.s 			page 59


 2101              		.loc 2 168 9 is_stmt 1 view .LVU549
 168:Inc/queue.h   ****         {
 2102              		.loc 2 168 27 is_stmt 0 view .LVU550
 2103 01f8 094B     		ldr	r3, .L166
 2104 01fa 9B88     		ldrh	r3, [r3, #4]
 168:Inc/queue.h   ****         {
 2105              		.loc 2 168 12 view .LVU551
 2106 01fc 9A42     		cmp	r2, r3
 2107 01fe 01D3     		bcc	.L123
 170:Inc/queue.h   ****         }
 2108              		.loc 2 170 13 is_stmt 1 view .LVU552
 170:Inc/queue.h   ****         }
 2109              		.loc 2 170 20 is_stmt 0 view .LVU553
 2110 0200 D21A     		subs	r2, r2, r3
 2111              	.LVL202:
 170:Inc/queue.h   ****         }
 2112              		.loc 2 170 20 view .LVU554
 2113 0202 92B2     		uxth	r2, r2
 2114              	.LVL203:
 2115              	.L123:
 172:Inc/queue.h   ****     }
 2116              		.loc 2 172 9 is_stmt 1 view .LVU555
 172:Inc/queue.h   ****     }
 2117              		.loc 2 172 20 is_stmt 0 view .LVU556
 2118 0204 064B     		ldr	r3, .L166
 2119 0206 5A80     		strh	r2, [r3, #2]	@ movhi
 2120 0208 9FE0     		b	.L105
 2121              	.LVL204:
 2122              	.L154:
 172:Inc/queue.h   ****     }
 2123              		.loc 2 172 20 view .LVU557
 2124              	.LBE208:
 2125              	.LBB209:
 2126              	.LBB207:
 149:Inc/queue.h   ****     }
 2127              		.loc 2 149 9 is_stmt 1 view .LVU558
 149:Inc/queue.h   ****     }
 2128              		.loc 2 149 25 is_stmt 0 view .LVU559
 2129 020a 0548     		ldr	r0, .L166
 2130 020c 8088     		ldrh	r0, [r0, #4]
 149:Inc/queue.h   ****     }
 2131              		.loc 2 149 18 view .LVU560
 2132 020e 0344     		add	r3, r3, r0
 2133              	.LVL205:
 149:Inc/queue.h   ****     }
 2134              		.loc 2 149 18 view .LVU561
 2135 0210 ECE7     		b	.L122
 2136              	.LVL206:
 2137              	.L121:
 149:Inc/queue.h   ****     }
 2138              		.loc 2 149 18 view .LVU562
 2139              	.LBE207:
 2140              	.LBE209:
 2141              	.LBE204:
 2142              	.LBE203:
 545:Src/nexcore.c ****             Nexcore_ErrorCb(ActiveTransactionId, NEXCORE_ERROR_BUFFER_OVERFLOW);
 2143              		.loc 1 545 13 is_stmt 1 view .LVU563
ARM GAS  /tmp/ccCyY6XY.s 			page 60


 2144 0212 0221     		movs	r1, #2
 2145              	.LVL207:
 545:Src/nexcore.c ****             Nexcore_ErrorCb(ActiveTransactionId, NEXCORE_ERROR_BUFFER_OVERFLOW);
 2146              		.loc 1 545 13 is_stmt 0 view .LVU564
 2147 0214 034B     		ldr	r3, .L166+4
 2148 0216 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2149              	.LVL208:
 545:Src/nexcore.c ****             Nexcore_ErrorCb(ActiveTransactionId, NEXCORE_ERROR_BUFFER_OVERFLOW);
 2150              		.loc 1 545 13 view .LVU565
 2151 0218 FFF7FEFF 		bl	Nexcore_ErrorCb
 2152              	.LVL209:
 2153 021c 95E0     		b	.L105
 2154              	.L167:
 2155 021e 00BF     		.align	2
 2156              	.L166:
 2157 0220 00000000 		.word	.LANCHOR3
 2158 0224 00000000 		.word	.LANCHOR8
 2159              	.LVL210:
 2160              	.L106:
 552:Src/nexcore.c ****         if (bytes_to_parse != 0)
 2161              		.loc 1 552 9 is_stmt 1 view .LVU566
 552:Src/nexcore.c ****         if (bytes_to_parse != 0)
 2162              		.loc 1 552 12 is_stmt 0 view .LVU567
 2163 0228 ECB1     		cbz	r4, .L124
 554:Src/nexcore.c ****             Nexcore_ErrorCb(ActiveTransactionId, NEXCORE_ERROR_INVALID_RECV_MSG);
 2164              		.loc 1 554 13 is_stmt 1 view .LVU568
 2165 022a 0421     		movs	r1, #4
 2166              	.LVL211:
 554:Src/nexcore.c ****             Nexcore_ErrorCb(ActiveTransactionId, NEXCORE_ERROR_INVALID_RECV_MSG);
 2167              		.loc 1 554 13 is_stmt 0 view .LVU569
 2168 022c 774B     		ldr	r3, .L168
 2169 022e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2170              	.LVL212:
 554:Src/nexcore.c ****             Nexcore_ErrorCb(ActiveTransactionId, NEXCORE_ERROR_INVALID_RECV_MSG);
 2171              		.loc 1 554 13 view .LVU570
 2172 0230 FFF7FEFF 		bl	Nexcore_ErrorCb
 2173              	.LVL213:
 555:Src/nexcore.c ****             Queue_Remove(&RxQueue, bytes_to_parse);
 2174              		.loc 1 555 13 is_stmt 1 view .LVU571
 2175 0234 A2B2     		uxth	r2, r4
 2176              	.LVL214:
 2177              	.LBB210:
 2178              	.LBI210:
 161:Inc/queue.h   **** {
 2179              		.loc 2 161 20 view .LVU572
 2180              	.LBB211:
 164:Inc/queue.h   ****     {
 2181              		.loc 2 164 5 view .LVU573
 2182              	.LBB212:
 2183              	.LBI212:
 144:Inc/queue.h   **** {
 2184              		.loc 2 144 24 view .LVU574
 2185              	.LBB213:
 146:Inc/queue.h   ****     if (elements < 0)
 2186              		.loc 2 146 5 view .LVU575
 146:Inc/queue.h   ****     if (elements < 0)
 2187              		.loc 2 146 28 is_stmt 0 view .LVU576
ARM GAS  /tmp/ccCyY6XY.s 			page 61


 2188 0236 7649     		ldr	r1, .L168+4
 2189 0238 0B88     		ldrh	r3, [r1]
 146:Inc/queue.h   ****     if (elements < 0)
 2190              		.loc 2 146 41 view .LVU577
 2191 023a 4988     		ldrh	r1, [r1, #2]
 2192              	.LVL215:
 147:Inc/queue.h   ****     {
 2193              		.loc 2 147 5 is_stmt 1 view .LVU578
 147:Inc/queue.h   ****     {
 2194              		.loc 2 147 8 is_stmt 0 view .LVU579
 2195 023c 5B1A     		subs	r3, r3, r1
 2196              	.LVL216:
 147:Inc/queue.h   ****     {
 2197              		.loc 2 147 8 view .LVU580
 2198 023e 0ED4     		bmi	.L155
 2199              	.LVL217:
 2200              	.L125:
 152:Inc/queue.h   **** }
 2201              		.loc 2 152 5 is_stmt 1 view .LVU581
 152:Inc/queue.h   **** }
 2202              		.loc 2 152 13 is_stmt 0 view .LVU582
 2203 0240 9BB2     		uxth	r3, r3
 2204              	.LVL218:
 152:Inc/queue.h   **** }
 2205              		.loc 2 152 13 view .LVU583
 2206              	.LBE213:
 2207              	.LBE212:
 164:Inc/queue.h   ****     {
 2208              		.loc 2 164 8 view .LVU584
 2209 0242 9A42     		cmp	r2, r3
 2210 0244 00F28180 		bhi	.L105
 2211              	.LBB215:
 166:Inc/queue.h   ****         __head += length;
 2212              		.loc 2 166 9 is_stmt 1 view .LVU585
 2213              	.LVL219:
 167:Inc/queue.h   ****         if (__head >= buff->size)
 2214              		.loc 2 167 9 view .LVU586
 167:Inc/queue.h   ****         if (__head >= buff->size)
 2215              		.loc 2 167 16 is_stmt 0 view .LVU587
 2216 0248 0A44     		add	r2, r2, r1
 2217              	.LVL220:
 167:Inc/queue.h   ****         if (__head >= buff->size)
 2218              		.loc 2 167 16 view .LVU588
 2219 024a 92B2     		uxth	r2, r2
 2220              	.LVL221:
 168:Inc/queue.h   ****         {
 2221              		.loc 2 168 9 is_stmt 1 view .LVU589
 168:Inc/queue.h   ****         {
 2222              		.loc 2 168 27 is_stmt 0 view .LVU590
 2223 024c 704B     		ldr	r3, .L168+4
 2224 024e 9B88     		ldrh	r3, [r3, #4]
 168:Inc/queue.h   ****         {
 2225              		.loc 2 168 12 view .LVU591
 2226 0250 9A42     		cmp	r2, r3
 2227 0252 01D3     		bcc	.L126
 170:Inc/queue.h   ****         }
 2228              		.loc 2 170 13 is_stmt 1 view .LVU592
ARM GAS  /tmp/ccCyY6XY.s 			page 62


 170:Inc/queue.h   ****         }
 2229              		.loc 2 170 20 is_stmt 0 view .LVU593
 2230 0254 D21A     		subs	r2, r2, r3
 2231              	.LVL222:
 170:Inc/queue.h   ****         }
 2232              		.loc 2 170 20 view .LVU594
 2233 0256 92B2     		uxth	r2, r2
 2234              	.LVL223:
 2235              	.L126:
 172:Inc/queue.h   ****     }
 2236              		.loc 2 172 9 is_stmt 1 view .LVU595
 172:Inc/queue.h   ****     }
 2237              		.loc 2 172 20 is_stmt 0 view .LVU596
 2238 0258 6D4B     		ldr	r3, .L168+4
 2239 025a 5A80     		strh	r2, [r3, #2]	@ movhi
 2240 025c 75E0     		b	.L105
 2241              	.LVL224:
 2242              	.L155:
 172:Inc/queue.h   ****     }
 2243              		.loc 2 172 20 view .LVU597
 2244              	.LBE215:
 2245              	.LBB216:
 2246              	.LBB214:
 149:Inc/queue.h   ****     }
 2247              		.loc 2 149 9 is_stmt 1 view .LVU598
 149:Inc/queue.h   ****     }
 2248              		.loc 2 149 25 is_stmt 0 view .LVU599
 2249 025e 6C48     		ldr	r0, .L168+4
 2250 0260 8088     		ldrh	r0, [r0, #4]
 149:Inc/queue.h   ****     }
 2251              		.loc 2 149 18 view .LVU600
 2252 0262 0344     		add	r3, r3, r0
 2253              	.LVL225:
 149:Inc/queue.h   ****     }
 2254              		.loc 2 149 18 view .LVU601
 2255 0264 ECE7     		b	.L125
 2256              	.LVL226:
 2257              	.L124:
 149:Inc/queue.h   ****     }
 2258              		.loc 2 149 18 view .LVU602
 2259              	.LBE214:
 2260              	.LBE216:
 2261              	.LBE211:
 2262              	.LBE210:
 559:Src/nexcore.c ****             Nexcore_InfoCb(ActiveTransactionId, NEXCORE_INFO_READY);
 2263              		.loc 1 559 13 is_stmt 1 view .LVU603
 2264 0266 0021     		movs	r1, #0
 2265              	.LVL227:
 559:Src/nexcore.c ****             Nexcore_InfoCb(ActiveTransactionId, NEXCORE_INFO_READY);
 2266              		.loc 1 559 13 is_stmt 0 view .LVU604
 2267 0268 684B     		ldr	r3, .L168
 2268 026a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2269              	.LVL228:
 559:Src/nexcore.c ****             Nexcore_InfoCb(ActiveTransactionId, NEXCORE_INFO_READY);
 2270              		.loc 1 559 13 view .LVU605
 2271 026c FFF7FEFF 		bl	Nexcore_InfoCb
 2272              	.LVL229:
ARM GAS  /tmp/ccCyY6XY.s 			page 63


 2273 0270 6BE0     		b	.L105
 2274              	.LVL230:
 2275              	.L114:
 566:Src/nexcore.c ****         if (bytes_to_parse != 0)
 2276              		.loc 1 566 9 is_stmt 1 view .LVU606
 566:Src/nexcore.c ****         if (bytes_to_parse != 0)
 2277              		.loc 1 566 12 is_stmt 0 view .LVU607
 2278 0272 E4B1     		cbz	r4, .L127
 568:Src/nexcore.c ****             Nexcore_ErrorCb(ActiveTransactionId, NEXCORE_ERROR_INVALID_RECV_MSG);
 2279              		.loc 1 568 13 is_stmt 1 view .LVU608
 2280 0274 0421     		movs	r1, #4
 2281              	.LVL231:
 568:Src/nexcore.c ****             Nexcore_ErrorCb(ActiveTransactionId, NEXCORE_ERROR_INVALID_RECV_MSG);
 2282              		.loc 1 568 13 is_stmt 0 view .LVU609
 2283 0276 654B     		ldr	r3, .L168
 2284 0278 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2285              	.LVL232:
 568:Src/nexcore.c ****             Nexcore_ErrorCb(ActiveTransactionId, NEXCORE_ERROR_INVALID_RECV_MSG);
 2286              		.loc 1 568 13 view .LVU610
 2287 027a FFF7FEFF 		bl	Nexcore_ErrorCb
 2288              	.LVL233:
 569:Src/nexcore.c ****             Queue_Remove(&RxQueue, bytes_to_parse);
 2289              		.loc 1 569 13 is_stmt 1 view .LVU611
 2290 027e A2B2     		uxth	r2, r4
 2291              	.LVL234:
 2292              	.LBB217:
 2293              	.LBI217:
 161:Inc/queue.h   **** {
 2294              		.loc 2 161 20 view .LVU612
 2295              	.LBB218:
 164:Inc/queue.h   ****     {
 2296              		.loc 2 164 5 view .LVU613
 2297              	.LBB219:
 2298              	.LBI219:
 144:Inc/queue.h   **** {
 2299              		.loc 2 144 24 view .LVU614
 2300              	.LBB220:
 146:Inc/queue.h   ****     if (elements < 0)
 2301              		.loc 2 146 5 view .LVU615
 146:Inc/queue.h   ****     if (elements < 0)
 2302              		.loc 2 146 28 is_stmt 0 view .LVU616
 2303 0280 6349     		ldr	r1, .L168+4
 2304 0282 0B88     		ldrh	r3, [r1]
 146:Inc/queue.h   ****     if (elements < 0)
 2305              		.loc 2 146 41 view .LVU617
 2306 0284 4988     		ldrh	r1, [r1, #2]
 2307              	.LVL235:
 147:Inc/queue.h   ****     {
 2308              		.loc 2 147 5 is_stmt 1 view .LVU618
 147:Inc/queue.h   ****     {
 2309              		.loc 2 147 8 is_stmt 0 view .LVU619
 2310 0286 5B1A     		subs	r3, r3, r1
 2311              	.LVL236:
 147:Inc/queue.h   ****     {
 2312              		.loc 2 147 8 view .LVU620
 2313 0288 0DD4     		bmi	.L156
 2314              	.LVL237:
ARM GAS  /tmp/ccCyY6XY.s 			page 64


 2315              	.L128:
 152:Inc/queue.h   **** }
 2316              		.loc 2 152 5 is_stmt 1 view .LVU621
 152:Inc/queue.h   **** }
 2317              		.loc 2 152 13 is_stmt 0 view .LVU622
 2318 028a 9BB2     		uxth	r3, r3
 2319              	.LVL238:
 152:Inc/queue.h   **** }
 2320              		.loc 2 152 13 view .LVU623
 2321              	.LBE220:
 2322              	.LBE219:
 164:Inc/queue.h   ****     {
 2323              		.loc 2 164 8 view .LVU624
 2324 028c 9A42     		cmp	r2, r3
 2325 028e 5CD8     		bhi	.L105
 2326              	.LBB222:
 166:Inc/queue.h   ****         __head += length;
 2327              		.loc 2 166 9 is_stmt 1 view .LVU625
 2328              	.LVL239:
 167:Inc/queue.h   ****         if (__head >= buff->size)
 2329              		.loc 2 167 9 view .LVU626
 167:Inc/queue.h   ****         if (__head >= buff->size)
 2330              		.loc 2 167 16 is_stmt 0 view .LVU627
 2331 0290 0A44     		add	r2, r2, r1
 2332              	.LVL240:
 167:Inc/queue.h   ****         if (__head >= buff->size)
 2333              		.loc 2 167 16 view .LVU628
 2334 0292 92B2     		uxth	r2, r2
 2335              	.LVL241:
 168:Inc/queue.h   ****         {
 2336              		.loc 2 168 9 is_stmt 1 view .LVU629
 168:Inc/queue.h   ****         {
 2337              		.loc 2 168 27 is_stmt 0 view .LVU630
 2338 0294 5E4B     		ldr	r3, .L168+4
 2339 0296 9B88     		ldrh	r3, [r3, #4]
 168:Inc/queue.h   ****         {
 2340              		.loc 2 168 12 view .LVU631
 2341 0298 9A42     		cmp	r2, r3
 2342 029a 01D3     		bcc	.L129
 170:Inc/queue.h   ****         }
 2343              		.loc 2 170 13 is_stmt 1 view .LVU632
 170:Inc/queue.h   ****         }
 2344              		.loc 2 170 20 is_stmt 0 view .LVU633
 2345 029c D21A     		subs	r2, r2, r3
 2346              	.LVL242:
 170:Inc/queue.h   ****         }
 2347              		.loc 2 170 20 view .LVU634
 2348 029e 92B2     		uxth	r2, r2
 2349              	.LVL243:
 2350              	.L129:
 172:Inc/queue.h   ****     }
 2351              		.loc 2 172 9 is_stmt 1 view .LVU635
 172:Inc/queue.h   ****     }
 2352              		.loc 2 172 20 is_stmt 0 view .LVU636
 2353 02a0 5B4B     		ldr	r3, .L168+4
 2354 02a2 5A80     		strh	r2, [r3, #2]	@ movhi
 2355 02a4 51E0     		b	.L105
ARM GAS  /tmp/ccCyY6XY.s 			page 65


 2356              	.LVL244:
 2357              	.L156:
 172:Inc/queue.h   ****     }
 2358              		.loc 2 172 20 view .LVU637
 2359              	.LBE222:
 2360              	.LBB223:
 2361              	.LBB221:
 149:Inc/queue.h   ****     }
 2362              		.loc 2 149 9 is_stmt 1 view .LVU638
 149:Inc/queue.h   ****     }
 2363              		.loc 2 149 25 is_stmt 0 view .LVU639
 2364 02a6 5A48     		ldr	r0, .L168+4
 2365 02a8 8088     		ldrh	r0, [r0, #4]
 149:Inc/queue.h   ****     }
 2366              		.loc 2 149 18 view .LVU640
 2367 02aa 0344     		add	r3, r3, r0
 2368              	.LVL245:
 149:Inc/queue.h   ****     }
 2369              		.loc 2 149 18 view .LVU641
 2370 02ac EDE7     		b	.L128
 2371              	.LVL246:
 2372              	.L127:
 149:Inc/queue.h   ****     }
 2373              		.loc 2 149 18 view .LVU642
 2374              	.LBE221:
 2375              	.LBE223:
 2376              	.LBE218:
 2377              	.LBE217:
 573:Src/nexcore.c ****             Nexcore_InfoCb(ActiveTransactionId, NEXCORE_INFO_INSTRUCTION_SUCCESSFUL);
 2378              		.loc 1 573 13 is_stmt 1 view .LVU643
 2379 02ae 0121     		movs	r1, #1
 2380              	.LVL247:
 573:Src/nexcore.c ****             Nexcore_InfoCb(ActiveTransactionId, NEXCORE_INFO_INSTRUCTION_SUCCESSFUL);
 2381              		.loc 1 573 13 is_stmt 0 view .LVU644
 2382 02b0 564B     		ldr	r3, .L168
 2383 02b2 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2384              	.LVL248:
 573:Src/nexcore.c ****             Nexcore_InfoCb(ActiveTransactionId, NEXCORE_INFO_INSTRUCTION_SUCCESSFUL);
 2385              		.loc 1 573 13 view .LVU645
 2386 02b4 FFF7FEFF 		bl	Nexcore_InfoCb
 2387              	.LVL249:
 2388 02b8 47E0     		b	.L105
 2389              	.LVL250:
 2390              	.L110:
 580:Src/nexcore.c ****         if (bytes_to_parse != 3)
 2391              		.loc 1 580 9 is_stmt 1 view .LVU646
 580:Src/nexcore.c ****         if (bytes_to_parse != 3)
 2392              		.loc 1 580 12 is_stmt 0 view .LVU647
 2393 02ba 032C     		cmp	r4, #3
 2394 02bc 1DD1     		bne	.L157
 2395              	.LBB224:
 587:Src/nexcore.c ****             uint8_t page_id, comp_id;
 2396              		.loc 1 587 13 is_stmt 1 view .LVU648
 588:Src/nexcore.c ****             Bool_t pressed;
 2397              		.loc 1 588 13 view .LVU649
 589:Src/nexcore.c ****             page_id = Queue_Dequeue(&RxQueue);
 2398              		.loc 1 589 13 view .LVU650
ARM GAS  /tmp/ccCyY6XY.s 			page 66


 2399              	.LVL251:
 2400              	.LBB225:
 2401              	.LBI225:
  98:Inc/queue.h   **** {
 2402              		.loc 2 98 23 view .LVU651
 2403              	.LBB226:
 100:Inc/queue.h   **** 
 2404              		.loc 2 100 5 view .LVU652
 103:Inc/queue.h   ****     if (__head == buff->size)
 2405              		.loc 2 103 5 view .LVU653
 103:Inc/queue.h   ****     if (__head == buff->size)
 2406              		.loc 2 103 46 is_stmt 0 view .LVU654
 2407 02be 5A1C     		adds	r2, r3, #1
 2408 02c0 92B2     		uxth	r2, r2
 2409              	.LVL252:
 103:Inc/queue.h   ****     if (__head == buff->size)
 2410              		.loc 2 103 13 view .LVU655
 2411 02c2 F15C     		ldrb	r1, [r6, r3]	@ zero_extendqisi2
 2412              	.LVL253:
 104:Inc/queue.h   ****     {
 2413              		.loc 2 104 5 is_stmt 1 view .LVU656
 104:Inc/queue.h   ****     {
 2414              		.loc 2 104 8 is_stmt 0 view .LVU657
 2415 02c4 9542     		cmp	r5, r2
 2416 02c6 35D0     		beq	.L158
 2417              	.LVL254:
 2418              	.L133:
 109:Inc/queue.h   **** 
 2419              		.loc 2 109 5 is_stmt 1 view .LVU658
 109:Inc/queue.h   **** 
 2420              		.loc 2 109 16 is_stmt 0 view .LVU659
 2421 02c8 514B     		ldr	r3, .L168+4
 2422 02ca 5A80     		strh	r2, [r3, #2]	@ movhi
 111:Inc/queue.h   **** }
 2423              		.loc 2 111 5 is_stmt 1 view .LVU660
 2424              	.LVL255:
 111:Inc/queue.h   **** }
 2425              		.loc 2 111 5 is_stmt 0 view .LVU661
 2426              	.LBE226:
 2427              	.LBE225:
 590:Src/nexcore.c ****             comp_id = Queue_Dequeue(&RxQueue);
 2428              		.loc 1 590 13 is_stmt 1 view .LVU662
 2429              	.LBB228:
 2430              	.LBI228:
  98:Inc/queue.h   **** {
 2431              		.loc 2 98 23 view .LVU663
 2432              	.LBB229:
 100:Inc/queue.h   **** 
 2433              		.loc 2 100 5 view .LVU664
 103:Inc/queue.h   ****     if (__head == buff->size)
 2434              		.loc 2 103 5 view .LVU665
 103:Inc/queue.h   ****     if (__head == buff->size)
 2435              		.loc 2 103 46 is_stmt 0 view .LVU666
 2436 02cc 531C     		adds	r3, r2, #1
 2437 02ce 9BB2     		uxth	r3, r3
 2438              	.LVL256:
 103:Inc/queue.h   ****     if (__head == buff->size)
ARM GAS  /tmp/ccCyY6XY.s 			page 67


 2439              		.loc 2 103 13 view .LVU667
 2440 02d0 B25C     		ldrb	r2, [r6, r2]	@ zero_extendqisi2
 2441              	.LVL257:
 104:Inc/queue.h   ****     {
 2442              		.loc 2 104 5 is_stmt 1 view .LVU668
 104:Inc/queue.h   ****     {
 2443              		.loc 2 104 8 is_stmt 0 view .LVU669
 2444 02d2 9D42     		cmp	r5, r3
 2445 02d4 30D0     		beq	.L159
 2446              	.LVL258:
 2447              	.L134:
 109:Inc/queue.h   **** 
 2448              		.loc 2 109 5 is_stmt 1 view .LVU670
 109:Inc/queue.h   **** 
 2449              		.loc 2 109 16 is_stmt 0 view .LVU671
 2450 02d6 4E48     		ldr	r0, .L168+4
 2451              	.LVL259:
 109:Inc/queue.h   **** 
 2452              		.loc 2 109 16 view .LVU672
 2453 02d8 4380     		strh	r3, [r0, #2]	@ movhi
 111:Inc/queue.h   **** }
 2454              		.loc 2 111 5 is_stmt 1 view .LVU673
 2455              	.LVL260:
 111:Inc/queue.h   **** }
 2456              		.loc 2 111 5 is_stmt 0 view .LVU674
 2457              	.LBE229:
 2458              	.LBE228:
 591:Src/nexcore.c ****             pressed = (Queue_Dequeue(&RxQueue) == 0x01) ? TRUE : FALSE;
 2459              		.loc 1 591 13 is_stmt 1 view .LVU675
 2460              	.LBB231:
 2461              	.LBI231:
  98:Inc/queue.h   **** {
 2462              		.loc 2 98 23 view .LVU676
 2463              	.LBB232:
 100:Inc/queue.h   **** 
 2464              		.loc 2 100 5 view .LVU677
 103:Inc/queue.h   ****     if (__head == buff->size)
 2465              		.loc 2 103 5 view .LVU678
 103:Inc/queue.h   ****     if (__head == buff->size)
 2466              		.loc 2 103 46 is_stmt 0 view .LVU679
 2467 02da 581C     		adds	r0, r3, #1
 2468 02dc 80B2     		uxth	r0, r0
 2469              	.LVL261:
 103:Inc/queue.h   ****     if (__head == buff->size)
 2470              		.loc 2 103 13 view .LVU680
 2471 02de F35C     		ldrb	r3, [r6, r3]	@ zero_extendqisi2
 2472              	.LVL262:
 104:Inc/queue.h   ****     {
 2473              		.loc 2 104 5 is_stmt 1 view .LVU681
 104:Inc/queue.h   ****     {
 2474              		.loc 2 104 8 is_stmt 0 view .LVU682
 2475 02e0 8542     		cmp	r5, r0
 2476 02e2 2BD0     		beq	.L160
 2477              	.LVL263:
 2478              	.L135:
 109:Inc/queue.h   **** 
 2479              		.loc 2 109 5 is_stmt 1 view .LVU683
ARM GAS  /tmp/ccCyY6XY.s 			page 68


 109:Inc/queue.h   **** 
 2480              		.loc 2 109 16 is_stmt 0 view .LVU684
 2481 02e4 4A4D     		ldr	r5, .L168+4
 2482 02e6 6880     		strh	r0, [r5, #2]	@ movhi
 111:Inc/queue.h   **** }
 2483              		.loc 2 111 5 is_stmt 1 view .LVU685
 2484              	.LVL264:
 111:Inc/queue.h   **** }
 2485              		.loc 2 111 5 is_stmt 0 view .LVU686
 2486              	.LBE232:
 2487              	.LBE231:
 592:Src/nexcore.c ****             Nexcore_TouchEventCb(ActiveTransactionId, page_id, comp_id, pressed);
 2488              		.loc 1 592 13 is_stmt 1 view .LVU687
 2489 02e8 012B     		cmp	r3, #1
 2490 02ea 14BF     		ite	ne
 2491 02ec 0023     		movne	r3, #0
 2492              	.LVL265:
 592:Src/nexcore.c ****             Nexcore_TouchEventCb(ActiveTransactionId, page_id, comp_id, pressed);
 2493              		.loc 1 592 13 is_stmt 0 view .LVU688
 2494 02ee 0123     		moveq	r3, #1
 2495 02f0 4648     		ldr	r0, .L168
 2496 02f2 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 2497 02f4 FFF7FEFF 		bl	Nexcore_TouchEventCb
 2498              	.LVL266:
 592:Src/nexcore.c ****             Nexcore_TouchEventCb(ActiveTransactionId, page_id, comp_id, pressed);
 2499              		.loc 1 592 13 view .LVU689
 2500 02f8 27E0     		b	.L105
 2501              	.LVL267:
 2502              	.L157:
 592:Src/nexcore.c ****             Nexcore_TouchEventCb(ActiveTransactionId, page_id, comp_id, pressed);
 2503              		.loc 1 592 13 view .LVU690
 2504              	.LBE224:
 582:Src/nexcore.c ****             Nexcore_ErrorCb(ActiveTransactionId, NEXCORE_ERROR_INVALID_RECV_MSG);
 2505              		.loc 1 582 13 is_stmt 1 view .LVU691
 2506 02fa 0421     		movs	r1, #4
 2507              	.LVL268:
 582:Src/nexcore.c ****             Nexcore_ErrorCb(ActiveTransactionId, NEXCORE_ERROR_INVALID_RECV_MSG);
 2508              		.loc 1 582 13 is_stmt 0 view .LVU692
 2509 02fc 434B     		ldr	r3, .L168
 2510 02fe 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2511              	.LVL269:
 582:Src/nexcore.c ****             Nexcore_ErrorCb(ActiveTransactionId, NEXCORE_ERROR_INVALID_RECV_MSG);
 2512              		.loc 1 582 13 view .LVU693
 2513 0300 FFF7FEFF 		bl	Nexcore_ErrorCb
 2514              	.LVL270:
 583:Src/nexcore.c ****             Queue_Remove(&RxQueue, bytes_to_parse);
 2515              		.loc 1 583 13 is_stmt 1 view .LVU694
 2516 0304 A2B2     		uxth	r2, r4
 2517              	.LVL271:
 2518              	.LBB237:
 2519              	.LBI237:
 161:Inc/queue.h   **** {
 2520              		.loc 2 161 20 view .LVU695
 2521              	.LBB238:
 164:Inc/queue.h   ****     {
 2522              		.loc 2 164 5 view .LVU696
 2523              	.LBB239:
ARM GAS  /tmp/ccCyY6XY.s 			page 69


 2524              	.LBI239:
 144:Inc/queue.h   **** {
 2525              		.loc 2 144 24 view .LVU697
 2526              	.LBB240:
 146:Inc/queue.h   ****     if (elements < 0)
 2527              		.loc 2 146 5 view .LVU698
 146:Inc/queue.h   ****     if (elements < 0)
 2528              		.loc 2 146 28 is_stmt 0 view .LVU699
 2529 0306 4249     		ldr	r1, .L168+4
 2530 0308 0B88     		ldrh	r3, [r1]
 146:Inc/queue.h   ****     if (elements < 0)
 2531              		.loc 2 146 41 view .LVU700
 2532 030a 4988     		ldrh	r1, [r1, #2]
 2533              	.LVL272:
 147:Inc/queue.h   ****     {
 2534              		.loc 2 147 5 is_stmt 1 view .LVU701
 147:Inc/queue.h   ****     {
 2535              		.loc 2 147 8 is_stmt 0 view .LVU702
 2536 030c 5B1A     		subs	r3, r3, r1
 2537              	.LVL273:
 147:Inc/queue.h   ****     {
 2538              		.loc 2 147 8 view .LVU703
 2539 030e 0DD4     		bmi	.L161
 2540              	.LVL274:
 2541              	.L131:
 152:Inc/queue.h   **** }
 2542              		.loc 2 152 5 is_stmt 1 view .LVU704
 152:Inc/queue.h   **** }
 2543              		.loc 2 152 13 is_stmt 0 view .LVU705
 2544 0310 9BB2     		uxth	r3, r3
 2545              	.LVL275:
 152:Inc/queue.h   **** }
 2546              		.loc 2 152 13 view .LVU706
 2547              	.LBE240:
 2548              	.LBE239:
 164:Inc/queue.h   ****     {
 2549              		.loc 2 164 8 view .LVU707
 2550 0312 9A42     		cmp	r2, r3
 2551 0314 19D8     		bhi	.L105
 2552              	.LBB242:
 166:Inc/queue.h   ****         __head += length;
 2553              		.loc 2 166 9 is_stmt 1 view .LVU708
 2554              	.LVL276:
 167:Inc/queue.h   ****         if (__head >= buff->size)
 2555              		.loc 2 167 9 view .LVU709
 167:Inc/queue.h   ****         if (__head >= buff->size)
 2556              		.loc 2 167 16 is_stmt 0 view .LVU710
 2557 0316 0A44     		add	r2, r2, r1
 2558              	.LVL277:
 167:Inc/queue.h   ****         if (__head >= buff->size)
 2559              		.loc 2 167 16 view .LVU711
 2560 0318 92B2     		uxth	r2, r2
 2561              	.LVL278:
 168:Inc/queue.h   ****         {
 2562              		.loc 2 168 9 is_stmt 1 view .LVU712
 168:Inc/queue.h   ****         {
 2563              		.loc 2 168 27 is_stmt 0 view .LVU713
ARM GAS  /tmp/ccCyY6XY.s 			page 70


 2564 031a 3D4B     		ldr	r3, .L168+4
 2565 031c 9B88     		ldrh	r3, [r3, #4]
 168:Inc/queue.h   ****         {
 2566              		.loc 2 168 12 view .LVU714
 2567 031e 9A42     		cmp	r2, r3
 2568 0320 01D3     		bcc	.L132
 170:Inc/queue.h   ****         }
 2569              		.loc 2 170 13 is_stmt 1 view .LVU715
 170:Inc/queue.h   ****         }
 2570              		.loc 2 170 20 is_stmt 0 view .LVU716
 2571 0322 D21A     		subs	r2, r2, r3
 2572              	.LVL279:
 170:Inc/queue.h   ****         }
 2573              		.loc 2 170 20 view .LVU717
 2574 0324 92B2     		uxth	r2, r2
 2575              	.LVL280:
 2576              	.L132:
 172:Inc/queue.h   ****     }
 2577              		.loc 2 172 9 is_stmt 1 view .LVU718
 172:Inc/queue.h   ****     }
 2578              		.loc 2 172 20 is_stmt 0 view .LVU719
 2579 0326 3A4B     		ldr	r3, .L168+4
 2580 0328 5A80     		strh	r2, [r3, #2]	@ movhi
 2581 032a 0EE0     		b	.L105
 2582              	.LVL281:
 2583              	.L161:
 172:Inc/queue.h   ****     }
 2584              		.loc 2 172 20 view .LVU720
 2585              	.LBE242:
 2586              	.LBB243:
 2587              	.LBB241:
 149:Inc/queue.h   ****     }
 2588              		.loc 2 149 9 is_stmt 1 view .LVU721
 149:Inc/queue.h   ****     }
 2589              		.loc 2 149 25 is_stmt 0 view .LVU722
 2590 032c 3848     		ldr	r0, .L168+4
 2591 032e 8088     		ldrh	r0, [r0, #4]
 149:Inc/queue.h   ****     }
 2592              		.loc 2 149 18 view .LVU723
 2593 0330 0344     		add	r3, r3, r0
 2594              	.LVL282:
 149:Inc/queue.h   ****     }
 2595              		.loc 2 149 18 view .LVU724
 2596 0332 EDE7     		b	.L131
 2597              	.LVL283:
 2598              	.L158:
 149:Inc/queue.h   ****     }
 2599              		.loc 2 149 18 view .LVU725
 2600              	.LBE241:
 2601              	.LBE243:
 2602              	.LBE238:
 2603              	.LBE237:
 2604              	.LBB244:
 2605              	.LBB234:
 2606              	.LBB227:
 106:Inc/queue.h   ****     }
 2607              		.loc 2 106 16 view .LVU726
ARM GAS  /tmp/ccCyY6XY.s 			page 71


 2608 0334 0022     		movs	r2, #0
 2609              	.LVL284:
 106:Inc/queue.h   ****     }
 2610              		.loc 2 106 16 view .LVU727
 2611 0336 C7E7     		b	.L133
 2612              	.LVL285:
 2613              	.L159:
 106:Inc/queue.h   ****     }
 2614              		.loc 2 106 16 view .LVU728
 2615              	.LBE227:
 2616              	.LBE234:
 2617              	.LBB235:
 2618              	.LBB230:
 2619 0338 0023     		movs	r3, #0
 2620              	.LVL286:
 106:Inc/queue.h   ****     }
 2621              		.loc 2 106 16 view .LVU729
 2622 033a CCE7     		b	.L134
 2623              	.LVL287:
 2624              	.L160:
 106:Inc/queue.h   ****     }
 2625              		.loc 2 106 16 view .LVU730
 2626              	.LBE230:
 2627              	.LBE235:
 2628              	.LBB236:
 2629              	.LBB233:
 2630 033c 0020     		movs	r0, #0
 2631              	.LVL288:
 106:Inc/queue.h   ****     }
 2632              		.loc 2 106 16 view .LVU731
 2633 033e D1E7     		b	.L135
 2634              	.LVL289:
 2635              	.L109:
 106:Inc/queue.h   ****     }
 2636              		.loc 2 106 16 view .LVU732
 2637              	.LBE233:
 2638              	.LBE236:
 2639              	.LBE244:
 599:Src/nexcore.c ****         Nexcore_GetStringRspCb(ActiveTransactionId, bytes_to_parse);
 2640              		.loc 1 599 9 is_stmt 1 view .LVU733
 2641 0340 2146     		mov	r1, r4
 2642              	.LVL290:
 599:Src/nexcore.c ****         Nexcore_GetStringRspCb(ActiveTransactionId, bytes_to_parse);
 2643              		.loc 1 599 9 is_stmt 0 view .LVU734
 2644 0342 324B     		ldr	r3, .L168
 2645 0344 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2646              	.LVL291:
 599:Src/nexcore.c ****         Nexcore_GetStringRspCb(ActiveTransactionId, bytes_to_parse);
 2647              		.loc 1 599 9 view .LVU735
 2648 0346 FFF7FEFF 		bl	Nexcore_GetStringRspCb
 2649              	.LVL292:
 601:Src/nexcore.c ****     break;
 2650              		.loc 1 601 5 is_stmt 1 view .LVU736
 2651              	.L105:
 623:Src/nexcore.c ****     if (bytes_to_parse == 0)
 2652              		.loc 1 623 5 view .LVU737
 623:Src/nexcore.c ****     if (bytes_to_parse == 0)
ARM GAS  /tmp/ccCyY6XY.s 			page 72


 2653              		.loc 1 623 8 is_stmt 0 view .LVU738
 2654 034a 8CB9     		cbnz	r4, .L103
 625:Src/nexcore.c ****         Queue_Remove(&RxQueue, sizeof(MessageTerminator));
 2655              		.loc 1 625 9 is_stmt 1 view .LVU739
 2656              	.LVL293:
 2657              	.LBB245:
 2658              	.LBI245:
 161:Inc/queue.h   **** {
 2659              		.loc 2 161 20 view .LVU740
 2660              	.LBB246:
 164:Inc/queue.h   ****     {
 2661              		.loc 2 164 5 view .LVU741
 2662              	.LBB247:
 2663              	.LBI247:
 144:Inc/queue.h   **** {
 2664              		.loc 2 144 24 view .LVU742
 2665              	.LBB248:
 146:Inc/queue.h   ****     if (elements < 0)
 2666              		.loc 2 146 5 view .LVU743
 146:Inc/queue.h   ****     if (elements < 0)
 2667              		.loc 2 146 28 is_stmt 0 view .LVU744
 2668 034c 304A     		ldr	r2, .L168+4
 2669 034e 1388     		ldrh	r3, [r2]
 146:Inc/queue.h   ****     if (elements < 0)
 2670              		.loc 2 146 41 view .LVU745
 2671 0350 5288     		ldrh	r2, [r2, #2]
 2672              	.LVL294:
 147:Inc/queue.h   ****     {
 2673              		.loc 2 147 5 is_stmt 1 view .LVU746
 147:Inc/queue.h   ****     {
 2674              		.loc 2 147 8 is_stmt 0 view .LVU747
 2675 0352 9B1A     		subs	r3, r3, r2
 2676              	.LVL295:
 147:Inc/queue.h   ****     {
 2677              		.loc 2 147 8 view .LVU748
 2678 0354 55D4     		bmi	.L162
 2679              	.LVL296:
 2680              	.L142:
 152:Inc/queue.h   **** }
 2681              		.loc 2 152 5 is_stmt 1 view .LVU749
 152:Inc/queue.h   **** }
 2682              		.loc 2 152 13 is_stmt 0 view .LVU750
 2683 0356 9BB2     		uxth	r3, r3
 2684              	.LVL297:
 152:Inc/queue.h   **** }
 2685              		.loc 2 152 13 view .LVU751
 2686              	.LBE248:
 2687              	.LBE247:
 164:Inc/queue.h   ****     {
 2688              		.loc 2 164 8 view .LVU752
 2689 0358 022B     		cmp	r3, #2
 2690 035a 09D9     		bls	.L103
 2691              	.LBB250:
 166:Inc/queue.h   ****         __head += length;
 2692              		.loc 2 166 9 is_stmt 1 view .LVU753
 2693              	.LVL298:
 167:Inc/queue.h   ****         if (__head >= buff->size)
ARM GAS  /tmp/ccCyY6XY.s 			page 73


 2694              		.loc 2 167 9 view .LVU754
 167:Inc/queue.h   ****         if (__head >= buff->size)
 2695              		.loc 2 167 16 is_stmt 0 view .LVU755
 2696 035c 0332     		adds	r2, r2, #3
 2697              	.LVL299:
 167:Inc/queue.h   ****         if (__head >= buff->size)
 2698              		.loc 2 167 16 view .LVU756
 2699 035e 92B2     		uxth	r2, r2
 2700              	.LVL300:
 168:Inc/queue.h   ****         {
 2701              		.loc 2 168 9 is_stmt 1 view .LVU757
 168:Inc/queue.h   ****         {
 2702              		.loc 2 168 27 is_stmt 0 view .LVU758
 2703 0360 2B4B     		ldr	r3, .L168+4
 2704 0362 9B88     		ldrh	r3, [r3, #4]
 168:Inc/queue.h   ****         {
 2705              		.loc 2 168 12 view .LVU759
 2706 0364 9A42     		cmp	r2, r3
 2707 0366 01D3     		bcc	.L143
 170:Inc/queue.h   ****         }
 2708              		.loc 2 170 13 is_stmt 1 view .LVU760
 170:Inc/queue.h   ****         }
 2709              		.loc 2 170 20 is_stmt 0 view .LVU761
 2710 0368 D21A     		subs	r2, r2, r3
 2711              	.LVL301:
 170:Inc/queue.h   ****         }
 2712              		.loc 2 170 20 view .LVU762
 2713 036a 92B2     		uxth	r2, r2
 2714              	.LVL302:
 2715              	.L143:
 172:Inc/queue.h   ****     }
 2716              		.loc 2 172 9 is_stmt 1 view .LVU763
 172:Inc/queue.h   ****     }
 2717              		.loc 2 172 20 is_stmt 0 view .LVU764
 2718 036c 284B     		ldr	r3, .L168+4
 2719 036e 5A80     		strh	r2, [r3, #2]	@ movhi
 2720              	.LVL303:
 2721              	.L103:
 172:Inc/queue.h   ****     }
 2722              		.loc 2 172 20 view .LVU765
 2723              	.LBE250:
 2724              	.LBE246:
 2725              	.LBE245:
 627:Src/nexcore.c **** }
 2726              		.loc 1 627 1 view .LVU766
 2727 0370 02B0     		add	sp, sp, #8
 2728              	.LCFI32:
 2729              		.cfi_remember_state
 2730              		.cfi_def_cfa_offset 16
 2731              		@ sp needed
 2732 0372 70BD     		pop	{r4, r5, r6, pc}
 2733              	.LVL304:
 2734              	.L108:
 2735              	.LCFI33:
 2736              		.cfi_restore_state
 605:Src/nexcore.c ****         if (bytes_to_parse != 4)
 2737              		.loc 1 605 9 is_stmt 1 view .LVU767
ARM GAS  /tmp/ccCyY6XY.s 			page 74


 605:Src/nexcore.c ****         if (bytes_to_parse != 4)
 2738              		.loc 1 605 12 is_stmt 0 view .LVU768
 2739 0374 042C     		cmp	r4, #4
 2740 0376 01D1     		bne	.L163
 2741              	.LBB253:
 2742              	.LBB254:
 2743              	.LBB255:
 2744              	.LBB256:
 125:Inc/queue.h   ****     {
 2745              		.loc 2 125 19 view .LVU769
 2746 0378 0022     		movs	r2, #0
 2747 037a 1FE0     		b	.L136
 2748              	.L163:
 2749              	.LBE256:
 2750              	.LBE255:
 2751              	.LBE254:
 2752              	.LBE253:
 607:Src/nexcore.c ****             Nexcore_ErrorCb(ActiveTransactionId, NEXCORE_ERROR_INVALID_RECV_MSG);
 2753              		.loc 1 607 13 is_stmt 1 view .LVU770
 2754 037c 0421     		movs	r1, #4
 2755              	.LVL305:
 607:Src/nexcore.c ****             Nexcore_ErrorCb(ActiveTransactionId, NEXCORE_ERROR_INVALID_RECV_MSG);
 2756              		.loc 1 607 13 is_stmt 0 view .LVU771
 2757 037e 234B     		ldr	r3, .L168
 2758 0380 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2759              	.LVL306:
 607:Src/nexcore.c ****             Nexcore_ErrorCb(ActiveTransactionId, NEXCORE_ERROR_INVALID_RECV_MSG);
 2760              		.loc 1 607 13 view .LVU772
 2761 0382 FFF7FEFF 		bl	Nexcore_ErrorCb
 2762              	.LVL307:
 608:Src/nexcore.c ****             Queue_Remove(&RxQueue, bytes_to_parse);
 2763              		.loc 1 608 13 is_stmt 1 view .LVU773
 2764 0386 A2B2     		uxth	r2, r4
 2765              	.LVL308:
 2766              	.LBB260:
 2767              	.LBI260:
 161:Inc/queue.h   **** {
 2768              		.loc 2 161 20 view .LVU774
 2769              	.LBB261:
 164:Inc/queue.h   ****     {
 2770              		.loc 2 164 5 view .LVU775
 2771              	.LBB262:
 2772              	.LBI262:
 144:Inc/queue.h   **** {
 2773              		.loc 2 144 24 view .LVU776
 2774              	.LBB263:
 146:Inc/queue.h   ****     if (elements < 0)
 2775              		.loc 2 146 5 view .LVU777
 146:Inc/queue.h   ****     if (elements < 0)
 2776              		.loc 2 146 28 is_stmt 0 view .LVU778
 2777 0388 2149     		ldr	r1, .L168+4
 2778 038a 0B88     		ldrh	r3, [r1]
 146:Inc/queue.h   ****     if (elements < 0)
 2779              		.loc 2 146 41 view .LVU779
 2780 038c 4988     		ldrh	r1, [r1, #2]
 2781              	.LVL309:
 147:Inc/queue.h   ****     {
ARM GAS  /tmp/ccCyY6XY.s 			page 75


 2782              		.loc 2 147 5 is_stmt 1 view .LVU780
 147:Inc/queue.h   ****     {
 2783              		.loc 2 147 8 is_stmt 0 view .LVU781
 2784 038e 5B1A     		subs	r3, r3, r1
 2785              	.LVL310:
 147:Inc/queue.h   ****     {
 2786              		.loc 2 147 8 view .LVU782
 2787 0390 0DD4     		bmi	.L164
 2788              	.LVL311:
 2789              	.L137:
 152:Inc/queue.h   **** }
 2790              		.loc 2 152 5 is_stmt 1 view .LVU783
 152:Inc/queue.h   **** }
 2791              		.loc 2 152 13 is_stmt 0 view .LVU784
 2792 0392 9BB2     		uxth	r3, r3
 2793              	.LVL312:
 152:Inc/queue.h   **** }
 2794              		.loc 2 152 13 view .LVU785
 2795              	.LBE263:
 2796              	.LBE262:
 164:Inc/queue.h   ****     {
 2797              		.loc 2 164 8 view .LVU786
 2798 0394 9A42     		cmp	r2, r3
 2799 0396 D8D8     		bhi	.L105
 2800              	.LBB265:
 166:Inc/queue.h   ****         __head += length;
 2801              		.loc 2 166 9 is_stmt 1 view .LVU787
 2802              	.LVL313:
 167:Inc/queue.h   ****         if (__head >= buff->size)
 2803              		.loc 2 167 9 view .LVU788
 167:Inc/queue.h   ****         if (__head >= buff->size)
 2804              		.loc 2 167 16 is_stmt 0 view .LVU789
 2805 0398 0A44     		add	r2, r2, r1
 2806              	.LVL314:
 167:Inc/queue.h   ****         if (__head >= buff->size)
 2807              		.loc 2 167 16 view .LVU790
 2808 039a 92B2     		uxth	r2, r2
 2809              	.LVL315:
 168:Inc/queue.h   ****         {
 2810              		.loc 2 168 9 is_stmt 1 view .LVU791
 168:Inc/queue.h   ****         {
 2811              		.loc 2 168 27 is_stmt 0 view .LVU792
 2812 039c 1C4B     		ldr	r3, .L168+4
 2813 039e 9B88     		ldrh	r3, [r3, #4]
 168:Inc/queue.h   ****         {
 2814              		.loc 2 168 12 view .LVU793
 2815 03a0 9A42     		cmp	r2, r3
 2816 03a2 01D3     		bcc	.L138
 170:Inc/queue.h   ****         }
 2817              		.loc 2 170 13 is_stmt 1 view .LVU794
 170:Inc/queue.h   ****         }
 2818              		.loc 2 170 20 is_stmt 0 view .LVU795
 2819 03a4 D21A     		subs	r2, r2, r3
 2820              	.LVL316:
 170:Inc/queue.h   ****         }
 2821              		.loc 2 170 20 view .LVU796
 2822 03a6 92B2     		uxth	r2, r2
ARM GAS  /tmp/ccCyY6XY.s 			page 76


 2823              	.LVL317:
 2824              	.L138:
 172:Inc/queue.h   ****     }
 2825              		.loc 2 172 9 is_stmt 1 view .LVU797
 172:Inc/queue.h   ****     }
 2826              		.loc 2 172 20 is_stmt 0 view .LVU798
 2827 03a8 194B     		ldr	r3, .L168+4
 2828 03aa 5A80     		strh	r2, [r3, #2]	@ movhi
 2829 03ac CDE7     		b	.L105
 2830              	.LVL318:
 2831              	.L164:
 172:Inc/queue.h   ****     }
 2832              		.loc 2 172 20 view .LVU799
 2833              	.LBE265:
 2834              	.LBB266:
 2835              	.LBB264:
 149:Inc/queue.h   ****     }
 2836              		.loc 2 149 9 is_stmt 1 view .LVU800
 149:Inc/queue.h   ****     }
 2837              		.loc 2 149 25 is_stmt 0 view .LVU801
 2838 03ae 1848     		ldr	r0, .L168+4
 2839 03b0 8088     		ldrh	r0, [r0, #4]
 149:Inc/queue.h   ****     }
 2840              		.loc 2 149 18 view .LVU802
 2841 03b2 0344     		add	r3, r3, r0
 2842              	.LVL319:
 149:Inc/queue.h   ****     }
 2843              		.loc 2 149 18 view .LVU803
 2844 03b4 EDE7     		b	.L137
 2845              	.LVL320:
 2846              	.L149:
 149:Inc/queue.h   ****     }
 2847              		.loc 2 149 18 view .LVU804
 2848              	.LBE264:
 2849              	.LBE266:
 2850              	.LBE261:
 2851              	.LBE260:
 2852              	.LBB267:
 2853              	.LBB259:
 2854              	.LBB258:
 2855              	.LBB257:
 130:Inc/queue.h   ****         }
 2856              		.loc 2 130 20 view .LVU805
 2857 03b6 0023     		movs	r3, #0
 2858              	.L139:
 2859              	.LVL321:
 125:Inc/queue.h   ****     {
 2860              		.loc 2 125 43 view .LVU806
 2861 03b8 0132     		adds	r2, r2, #1
 2862              	.LVL322:
 125:Inc/queue.h   ****     {
 2863              		.loc 2 125 43 view .LVU807
 2864 03ba 92B2     		uxth	r2, r2
 2865              	.LVL323:
 2866              	.L136:
 125:Inc/queue.h   ****     {
 2867              		.loc 2 125 5 view .LVU808
ARM GAS  /tmp/ccCyY6XY.s 			page 77


 2868 03bc 032A     		cmp	r2, #3
 2869 03be 0BD8     		bhi	.L165
 127:Inc/queue.h   ****         if (__head == buff->size)
 2870              		.loc 2 127 9 is_stmt 1 view .LVU809
 127:Inc/queue.h   ****         if (__head == buff->size)
 2871              		.loc 2 127 23 is_stmt 0 view .LVU810
 2872 03c0 1348     		ldr	r0, .L168+4
 2873 03c2 8568     		ldr	r5, [r0, #8]
 127:Inc/queue.h   ****         if (__head == buff->size)
 2874              		.loc 2 127 42 view .LVU811
 2875 03c4 591C     		adds	r1, r3, #1
 2876 03c6 89B2     		uxth	r1, r1
 2877              	.LVL324:
 127:Inc/queue.h   ****         if (__head == buff->size)
 2878              		.loc 2 127 35 view .LVU812
 2879 03c8 ED5C     		ldrb	r5, [r5, r3]	@ zero_extendqisi2
 127:Inc/queue.h   ****         if (__head == buff->size)
 2880              		.loc 2 127 17 view .LVU813
 2881 03ca 01AB     		add	r3, sp, #4
 2882 03cc 9D54     		strb	r5, [r3, r2]
 128:Inc/queue.h   ****         {
 2883              		.loc 2 128 9 is_stmt 1 view .LVU814
 128:Inc/queue.h   ****         {
 2884              		.loc 2 128 27 is_stmt 0 view .LVU815
 2885 03ce 8388     		ldrh	r3, [r0, #4]
 128:Inc/queue.h   ****         {
 2886              		.loc 2 128 12 view .LVU816
 2887 03d0 9942     		cmp	r1, r3
 2888 03d2 F0D0     		beq	.L149
 127:Inc/queue.h   ****         if (__head == buff->size)
 2889              		.loc 2 127 42 view .LVU817
 2890 03d4 0B46     		mov	r3, r1
 2891 03d6 EFE7     		b	.L139
 2892              	.LVL325:
 2893              	.L165:
 127:Inc/queue.h   ****         if (__head == buff->size)
 2894              		.loc 2 127 42 view .LVU818
 2895              	.LBE257:
 134:Inc/queue.h   **** }
 2896              		.loc 2 134 5 is_stmt 1 view .LVU819
 134:Inc/queue.h   **** }
 2897              		.loc 2 134 16 is_stmt 0 view .LVU820
 2898 03d8 0D4A     		ldr	r2, .L168+4
 2899              	.LVL326:
 134:Inc/queue.h   **** }
 2900              		.loc 2 134 16 view .LVU821
 2901 03da 5380     		strh	r3, [r2, #2]	@ movhi
 2902              	.LVL327:
 134:Inc/queue.h   **** }
 2903              		.loc 2 134 16 view .LVU822
 2904              	.LBE258:
 2905              	.LBE259:
 615:Src/nexcore.c ****             value = bytes[0] + (bytes[1] << 8) + (bytes[2] << 16) + (bytes[3] << 24);
 2906              		.loc 1 615 13 is_stmt 1 view .LVU823
 615:Src/nexcore.c ****             value = bytes[0] + (bytes[1] << 8) + (bytes[2] << 16) + (bytes[3] << 24);
 2907              		.loc 1 615 26 is_stmt 0 view .LVU824
 2908 03dc 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
ARM GAS  /tmp/ccCyY6XY.s 			page 78


 615:Src/nexcore.c ****             value = bytes[0] + (bytes[1] << 8) + (bytes[2] << 16) + (bytes[3] << 24);
 2909              		.loc 1 615 38 view .LVU825
 2910 03e0 9DF80510 		ldrb	r1, [sp, #5]	@ zero_extendqisi2
 615:Src/nexcore.c ****             value = bytes[0] + (bytes[1] << 8) + (bytes[2] << 16) + (bytes[3] << 24);
 2911              		.loc 1 615 30 view .LVU826
 2912 03e4 03EB0123 		add	r3, r3, r1, lsl #8
 615:Src/nexcore.c ****             value = bytes[0] + (bytes[1] << 8) + (bytes[2] << 16) + (bytes[3] << 24);
 2913              		.loc 1 615 56 view .LVU827
 2914 03e8 9DF80610 		ldrb	r1, [sp, #6]	@ zero_extendqisi2
 615:Src/nexcore.c ****             value = bytes[0] + (bytes[1] << 8) + (bytes[2] << 16) + (bytes[3] << 24);
 2915              		.loc 1 615 48 view .LVU828
 2916 03ec 03EB0143 		add	r3, r3, r1, lsl #16
 615:Src/nexcore.c ****             value = bytes[0] + (bytes[1] << 8) + (bytes[2] << 16) + (bytes[3] << 24);
 2917              		.loc 1 615 75 view .LVU829
 2918 03f0 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
 2919              	.LVL328:
 616:Src/nexcore.c ****             Nexcore_GetNumberRspCb(ActiveTransactionId, value);
 2920              		.loc 1 616 13 is_stmt 1 view .LVU830
 2921 03f4 03EB0161 		add	r1, r3, r1, lsl #24
 2922              	.LVL329:
 616:Src/nexcore.c ****             Nexcore_GetNumberRspCb(ActiveTransactionId, value);
 2923              		.loc 1 616 13 is_stmt 0 view .LVU831
 2924 03f8 044B     		ldr	r3, .L168
 2925 03fa 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2926 03fc FFF7FEFF 		bl	Nexcore_GetNumberRspCb
 2927              	.LVL330:
 616:Src/nexcore.c ****             Nexcore_GetNumberRspCb(ActiveTransactionId, value);
 2928              		.loc 1 616 13 view .LVU832
 2929 0400 A3E7     		b	.L105
 2930              	.LVL331:
 2931              	.L162:
 616:Src/nexcore.c ****             Nexcore_GetNumberRspCb(ActiveTransactionId, value);
 2932              		.loc 1 616 13 view .LVU833
 2933              	.LBE267:
 2934              	.LBB268:
 2935              	.LBB252:
 2936              	.LBB251:
 2937              	.LBB249:
 149:Inc/queue.h   ****     }
 2938              		.loc 2 149 9 is_stmt 1 view .LVU834
 149:Inc/queue.h   ****     }
 2939              		.loc 2 149 25 is_stmt 0 view .LVU835
 2940 0402 0349     		ldr	r1, .L168+4
 2941 0404 8988     		ldrh	r1, [r1, #4]
 149:Inc/queue.h   ****     }
 2942              		.loc 2 149 18 view .LVU836
 2943 0406 0B44     		add	r3, r3, r1
 2944              	.LVL332:
 149:Inc/queue.h   ****     }
 2945              		.loc 2 149 18 view .LVU837
 2946 0408 A5E7     		b	.L142
 2947              	.L169:
 2948 040a 00BF     		.align	2
 2949              	.L168:
 2950 040c 00000000 		.word	.LANCHOR8
 2951 0410 00000000 		.word	.LANCHOR3
 2952              	.LBE249:
ARM GAS  /tmp/ccCyY6XY.s 			page 79


 2953              	.LBE251:
 2954              	.LBE252:
 2955              	.LBE268:
 2956              		.cfi_endproc
 2957              	.LFE98:
 2959              		.section	.text.Nexcore_Execute,"ax",%progbits
 2960              		.align	1
 2961              		.global	Nexcore_Execute
 2962              		.syntax unified
 2963              		.thumb
 2964              		.thumb_func
 2965              		.fpu softvfp
 2967              	Nexcore_Execute:
 2968              	.LFB87:
 132:Src/nexcore.c **** {
 2969              		.loc 1 132 1 is_stmt 1 view -0
 2970              		.cfi_startproc
 2971              		@ args = 0, pretend = 0, frame = 8
 2972              		@ frame_needed = 0, uses_anonymous_args = 0
 133:Src/nexcore.c ****     if (Status != OPERATING)
 2973              		.loc 1 133 5 view .LVU839
 133:Src/nexcore.c ****     if (Status != OPERATING)
 2974              		.loc 1 133 16 is_stmt 0 view .LVU840
 2975 0000 6B4B     		ldr	r3, .L215
 2976 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 133:Src/nexcore.c ****     if (Status != OPERATING)
 2977              		.loc 1 133 8 view .LVU841
 2978 0004 022B     		cmp	r3, #2
 2979 0006 40F0D180 		bne	.L201
 132:Src/nexcore.c **** {
 2980              		.loc 1 132 1 view .LVU842
 2981 000a 70B5     		push	{r4, r5, r6, lr}
 2982              	.LCFI34:
 2983              		.cfi_def_cfa_offset 16
 2984              		.cfi_offset 4, -16
 2985              		.cfi_offset 5, -12
 2986              		.cfi_offset 6, -8
 2987              		.cfi_offset 14, -4
 2988 000c 82B0     		sub	sp, sp, #8
 2989              	.LCFI35:
 2990              		.cfi_def_cfa_offset 24
 138:Src/nexcore.c ****     if (Busy)
 2991              		.loc 1 138 5 is_stmt 1 view .LVU843
 138:Src/nexcore.c ****     if (Busy)
 2992              		.loc 1 138 9 is_stmt 0 view .LVU844
 2993 000e 694B     		ldr	r3, .L215+4
 2994 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 138:Src/nexcore.c ****     if (Busy)
 2995              		.loc 1 138 8 view .LVU845
 2996 0012 002B     		cmp	r3, #0
 2997 0014 60D0     		beq	.L172
 141:Src/nexcore.c ****         if (ActiveTransactionBytesToSend)
 2998              		.loc 1 141 9 is_stmt 1 view .LVU846
 141:Src/nexcore.c ****         if (ActiveTransactionBytesToSend)
 2999              		.loc 1 141 13 is_stmt 0 view .LVU847
 3000 0016 684B     		ldr	r3, .L215+8
 3001 0018 1B88     		ldrh	r3, [r3]
ARM GAS  /tmp/ccCyY6XY.s 			page 80


 141:Src/nexcore.c ****         if (ActiveTransactionBytesToSend)
 3002              		.loc 1 141 12 view .LVU848
 3003 001a F3B9     		cbnz	r3, .L173
 3004              	.L174:
 175:Src/nexcore.c ****         if (!ActiveTransactionBytesToSend)
 3005              		.loc 1 175 9 is_stmt 1 view .LVU849
 175:Src/nexcore.c ****         if (!ActiveTransactionBytesToSend)
 3006              		.loc 1 175 13 is_stmt 0 view .LVU850
 3007 001c 664B     		ldr	r3, .L215+8
 3008 001e 1B88     		ldrh	r3, [r3]
 175:Src/nexcore.c ****         if (!ActiveTransactionBytesToSend)
 3009              		.loc 1 175 12 view .LVU851
 3010 0020 002B     		cmp	r3, #0
 3011 0022 49D0     		beq	.L204
 3012              	.L182:
 3013              	.LBB294:
 205:Src/nexcore.c ****         uint16_t message_length;
 3014              		.loc 1 205 9 is_stmt 1 view .LVU852
 206:Src/nexcore.c ****         message_length = Queue_SearchArr(&RxQueue, MessageTerminator,
 3015              		.loc 1 206 9 view .LVU853
 3016              	.LVL333:
 3017              	.LBB295:
 3018              	.LBI295:
 230:Inc/queue.h   **** {
 3019              		.loc 2 230 24 view .LVU854
 3020              	.LBB296:
 232:Inc/queue.h   ****     num_of_elements = Queue_GetElementCount(buff);
 3021              		.loc 2 232 5 view .LVU855
 233:Inc/queue.h   **** 
 3022              		.loc 2 233 5 view .LVU856
 3023              	.LBB297:
 3024              	.LBI297:
 144:Inc/queue.h   **** {
 3025              		.loc 2 144 24 view .LVU857
 3026              	.LBB298:
 146:Inc/queue.h   ****     if (elements < 0)
 3027              		.loc 2 146 5 view .LVU858
 146:Inc/queue.h   ****     if (elements < 0)
 3028              		.loc 2 146 28 is_stmt 0 view .LVU859
 3029 0024 654B     		ldr	r3, .L215+12
 3030 0026 1C88     		ldrh	r4, [r3]
 146:Inc/queue.h   ****     if (elements < 0)
 3031              		.loc 2 146 41 view .LVU860
 3032 0028 5D88     		ldrh	r5, [r3, #2]
 3033              	.LVL334:
 147:Inc/queue.h   ****     {
 3034              		.loc 2 147 5 is_stmt 1 view .LVU861
 147:Inc/queue.h   ****     {
 3035              		.loc 2 147 8 is_stmt 0 view .LVU862
 3036 002a 641B     		subs	r4, r4, r5
 3037              	.LVL335:
 147:Inc/queue.h   ****     {
 3038              		.loc 2 147 8 view .LVU863
 3039 002c 00F18B80 		bmi	.L205
 3040              	.LVL336:
 3041              	.L189:
 152:Inc/queue.h   **** }
ARM GAS  /tmp/ccCyY6XY.s 			page 81


 3042              		.loc 2 152 5 is_stmt 1 view .LVU864
 152:Inc/queue.h   **** }
 3043              		.loc 2 152 13 is_stmt 0 view .LVU865
 3044 0030 A4B2     		uxth	r4, r4
 3045              	.LVL337:
 152:Inc/queue.h   **** }
 3046              		.loc 2 152 13 view .LVU866
 3047              	.LBE298:
 3048              	.LBE297:
 236:Inc/queue.h   ****     {
 3049              		.loc 2 236 5 is_stmt 1 view .LVU867
 3050              	.LBB300:
 236:Inc/queue.h   ****     {
 3051              		.loc 2 236 10 view .LVU868
 236:Inc/queue.h   ****     {
 3052              		.loc 2 236 19 is_stmt 0 view .LVU869
 3053 0032 0020     		movs	r0, #0
 3054              	.LVL338:
 3055              	.L190:
 236:Inc/queue.h   ****     {
 3056              		.loc 2 236 5 view .LVU870
 3057 0034 8442     		cmp	r4, r0
 3058 0036 40F2AB80 		bls	.L206
 3059              	.LBB301:
 3060              	.LBB302:
 239:Inc/queue.h   ****         {
 3061              		.loc 2 239 23 view .LVU871
 3062 003a 0022     		movs	r2, #0
 3063              	.LBE302:
 238:Inc/queue.h   ****         for (uint16_t j = 0; j < arrLength; j++)
 3064              		.loc 2 238 16 view .LVU872
 3065 003c 0126     		movs	r6, #1
 3066 003e 8EE0     		b	.L195
 3067              	.LVL339:
 3068              	.L177:
 238:Inc/queue.h   ****         for (uint16_t j = 0; j < arrLength; j++)
 3069              		.loc 2 238 16 view .LVU873
 3070              	.LBE301:
 3071              	.LBE300:
 3072              	.LBE296:
 3073              	.LBE295:
 3074              	.LBE294:
 3075              	.LBB316:
 3076              	.LBB317:
 3077              	.LBB318:
 109:Inc/queue.h   **** 
 3078              		.loc 2 109 5 is_stmt 1 view .LVU874
 109:Inc/queue.h   **** 
 3079              		.loc 2 109 16 is_stmt 0 view .LVU875
 3080 0040 5F4A     		ldr	r2, .L215+16
 3081 0042 5380     		strh	r3, [r2, #2]	@ movhi
 111:Inc/queue.h   **** }
 3082              		.loc 2 111 5 is_stmt 1 view .LVU876
 3083              	.LVL340:
 111:Inc/queue.h   **** }
 3084              		.loc 2 111 5 is_stmt 0 view .LVU877
 3085              	.LBE318:
ARM GAS  /tmp/ccCyY6XY.s 			page 82


 3086              	.LBE317:
 154:Src/nexcore.c ****                     tfreg = Queue_Dequeue(&TxQueue);
 3087              		.loc 1 154 27 view .LVU878
 3088 0044 8DF80710 		strb	r1, [sp, #7]
 3089              	.L178:
 161:Src/nexcore.c ****                 Serial_Transmit(&tfreg, sizeof(tfreg));
 3090              		.loc 1 161 17 is_stmt 1 view .LVU879
 3091 0048 0121     		movs	r1, #1
 3092 004a 0DF10700 		add	r0, sp, #7
 3093 004e FFF7FEFF 		bl	Serial_Transmit
 3094              	.LVL341:
 162:Src/nexcore.c ****                 ActiveTransactionBytesToSend--;
 3095              		.loc 1 162 17 view .LVU880
 162:Src/nexcore.c ****                 ActiveTransactionBytesToSend--;
 3096              		.loc 1 162 45 is_stmt 0 view .LVU881
 3097 0052 594A     		ldr	r2, .L215+8
 3098 0054 1388     		ldrh	r3, [r2]
 3099 0056 013B     		subs	r3, r3, #1
 3100 0058 1380     		strh	r3, [r2]	@ movhi
 3101              	.L173:
 3102              	.LBE316:
 144:Src/nexcore.c ****             while (ActiveTransactionBytesToSend)
 3103              		.loc 1 144 20 view .LVU882
 3104 005a 574B     		ldr	r3, .L215+8
 3105 005c 1B88     		ldrh	r3, [r3]
 144:Src/nexcore.c ****             while (ActiveTransactionBytesToSend)
 3106              		.loc 1 144 19 view .LVU883
 3107 005e C3B1     		cbz	r3, .L179
 3108              	.LBB321:
 146:Src/nexcore.c ****                 if (!Serial_TxBuffAvailable())
 3109              		.loc 1 146 17 is_stmt 1 view .LVU884
 146:Src/nexcore.c ****                 if (!Serial_TxBuffAvailable())
 3110              		.loc 1 146 22 is_stmt 0 view .LVU885
 3111 0060 FFF7FEFF 		bl	Serial_TxBuffAvailable
 3112              	.LVL342:
 146:Src/nexcore.c ****                 if (!Serial_TxBuffAvailable())
 3113              		.loc 1 146 20 view .LVU886
 3114 0064 A8B1     		cbz	r0, .L179
 151:Src/nexcore.c ****                 uint8_t tfreg;
 3115              		.loc 1 151 17 is_stmt 1 view .LVU887
 152:Src/nexcore.c ****                 if (ActiveTransactionBytesToSend > sizeof(MessageTerminator))
 3116              		.loc 1 152 17 view .LVU888
 152:Src/nexcore.c ****                 if (ActiveTransactionBytesToSend > sizeof(MessageTerminator))
 3117              		.loc 1 152 50 is_stmt 0 view .LVU889
 3118 0066 544B     		ldr	r3, .L215+8
 3119 0068 1B88     		ldrh	r3, [r3]
 152:Src/nexcore.c ****                 if (ActiveTransactionBytesToSend > sizeof(MessageTerminator))
 3120              		.loc 1 152 20 view .LVU890
 3121 006a 032B     		cmp	r3, #3
 3122 006c 0AD9     		bls	.L176
 154:Src/nexcore.c ****                     tfreg = Queue_Dequeue(&TxQueue);
 3123              		.loc 1 154 21 is_stmt 1 view .LVU891
 3124              	.LVL343:
 3125              	.LBB320:
 3126              	.LBI317:
  98:Inc/queue.h   **** {
 3127              		.loc 2 98 23 view .LVU892
ARM GAS  /tmp/ccCyY6XY.s 			page 83


 3128              	.LBB319:
 100:Inc/queue.h   **** 
 3129              		.loc 2 100 5 view .LVU893
 100:Inc/queue.h   **** 
 3130              		.loc 2 100 14 is_stmt 0 view .LVU894
 3131 006e 544A     		ldr	r2, .L215+16
 3132 0070 5188     		ldrh	r1, [r2, #2]
 3133              	.LVL344:
 103:Inc/queue.h   ****     if (__head == buff->size)
 3134              		.loc 2 103 5 is_stmt 1 view .LVU895
 103:Inc/queue.h   ****     if (__head == buff->size)
 3135              		.loc 2 103 27 is_stmt 0 view .LVU896
 3136 0072 9068     		ldr	r0, [r2, #8]
 103:Inc/queue.h   ****     if (__head == buff->size)
 3137              		.loc 2 103 46 view .LVU897
 3138 0074 4B1C     		adds	r3, r1, #1
 3139 0076 9BB2     		uxth	r3, r3
 3140              	.LVL345:
 103:Inc/queue.h   ****     if (__head == buff->size)
 3141              		.loc 2 103 13 view .LVU898
 3142 0078 415C     		ldrb	r1, [r0, r1]	@ zero_extendqisi2
 3143              	.LVL346:
 104:Inc/queue.h   ****     {
 3144              		.loc 2 104 5 is_stmt 1 view .LVU899
 104:Inc/queue.h   ****     {
 3145              		.loc 2 104 23 is_stmt 0 view .LVU900
 3146 007a 9288     		ldrh	r2, [r2, #4]
 104:Inc/queue.h   ****     {
 3147              		.loc 2 104 8 view .LVU901
 3148 007c 9342     		cmp	r3, r2
 3149 007e DFD1     		bne	.L177
 106:Inc/queue.h   ****     }
 3150              		.loc 2 106 16 view .LVU902
 3151 0080 0023     		movs	r3, #0
 3152              	.LVL347:
 106:Inc/queue.h   ****     }
 3153              		.loc 2 106 16 view .LVU903
 3154 0082 DDE7     		b	.L177
 3155              	.LVL348:
 3156              	.L176:
 106:Inc/queue.h   ****     }
 3157              		.loc 2 106 16 view .LVU904
 3158              	.LBE319:
 3159              	.LBE320:
 158:Src/nexcore.c ****                     tfreg = MessageTerminator[sizeof(MessageTerminator) - ActiveTransactionBytesToS
 3160              		.loc 1 158 21 is_stmt 1 view .LVU905
 158:Src/nexcore.c ****                     tfreg = MessageTerminator[sizeof(MessageTerminator) - ActiveTransactionBytesToS
 3161              		.loc 1 158 73 is_stmt 0 view .LVU906
 3162 0084 C3F10303 		rsb	r3, r3, #3
 158:Src/nexcore.c ****                     tfreg = MessageTerminator[sizeof(MessageTerminator) - ActiveTransactionBytesToS
 3163              		.loc 1 158 46 view .LVU907
 3164 0088 4E4A     		ldr	r2, .L215+20
 3165 008a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 158:Src/nexcore.c ****                     tfreg = MessageTerminator[sizeof(MessageTerminator) - ActiveTransactionBytesToS
 3166              		.loc 1 158 27 view .LVU908
 3167 008c 8DF80730 		strb	r3, [sp, #7]
 3168 0090 DAE7     		b	.L178
ARM GAS  /tmp/ccCyY6XY.s 			page 84


 3169              	.L179:
 3170              	.LBE321:
 165:Src/nexcore.c ****             if (ActiveTransactionBytesToSend == 0)
 3171              		.loc 1 165 13 is_stmt 1 view .LVU909
 165:Src/nexcore.c ****             if (ActiveTransactionBytesToSend == 0)
 3172              		.loc 1 165 46 is_stmt 0 view .LVU910
 3173 0092 494B     		ldr	r3, .L215+8
 3174 0094 1A88     		ldrh	r2, [r3]
 165:Src/nexcore.c ****             if (ActiveTransactionBytesToSend == 0)
 3175              		.loc 1 165 16 view .LVU911
 3176 0096 002A     		cmp	r2, #0
 3177 0098 C0D1     		bne	.L174
 168:Src/nexcore.c ****                 Queue_Dequeue(&TxQueue);
 3178              		.loc 1 168 17 is_stmt 1 view .LVU912
 3179              	.LVL349:
 3180              	.LBB322:
 3181              	.LBI322:
  98:Inc/queue.h   **** {
 3182              		.loc 2 98 23 view .LVU913
 3183              	.LBB323:
 100:Inc/queue.h   **** 
 3184              		.loc 2 100 5 view .LVU914
 100:Inc/queue.h   **** 
 3185              		.loc 2 100 14 is_stmt 0 view .LVU915
 3186 009a 4949     		ldr	r1, .L215+16
 3187 009c 4B88     		ldrh	r3, [r1, #2]
 3188              	.LVL350:
 103:Inc/queue.h   ****     if (__head == buff->size)
 3189              		.loc 2 103 5 is_stmt 1 view .LVU916
 103:Inc/queue.h   ****     if (__head == buff->size)
 3190              		.loc 2 103 46 is_stmt 0 view .LVU917
 3191 009e 0133     		adds	r3, r3, #1
 3192              	.LVL351:
 103:Inc/queue.h   ****     if (__head == buff->size)
 3193              		.loc 2 103 46 view .LVU918
 3194 00a0 9BB2     		uxth	r3, r3
 3195              	.LVL352:
 104:Inc/queue.h   ****     {
 3196              		.loc 2 104 5 is_stmt 1 view .LVU919
 104:Inc/queue.h   ****     {
 3197              		.loc 2 104 23 is_stmt 0 view .LVU920
 3198 00a2 8988     		ldrh	r1, [r1, #4]
 104:Inc/queue.h   ****     {
 3199              		.loc 2 104 8 view .LVU921
 3200 00a4 8B42     		cmp	r3, r1
 3201 00a6 00D0     		beq	.L181
 103:Inc/queue.h   ****     if (__head == buff->size)
 3202              		.loc 2 103 46 view .LVU922
 3203 00a8 1A46     		mov	r2, r3
 3204              	.L181:
 3205              	.LVL353:
 109:Inc/queue.h   **** 
 3206              		.loc 2 109 5 is_stmt 1 view .LVU923
 109:Inc/queue.h   **** 
 3207              		.loc 2 109 16 is_stmt 0 view .LVU924
 3208 00aa 454B     		ldr	r3, .L215+16
 3209 00ac 5A80     		strh	r2, [r3, #2]	@ movhi
ARM GAS  /tmp/ccCyY6XY.s 			page 85


 3210              	.LVL354:
 111:Inc/queue.h   **** }
 3211              		.loc 2 111 5 is_stmt 1 view .LVU925
 111:Inc/queue.h   **** }
 3212              		.loc 2 111 5 is_stmt 0 view .LVU926
 3213              	.LBE323:
 3214              	.LBE322:
 169:Src/nexcore.c ****                 ResponseStartTick = HAL_GetTick();
 3215              		.loc 1 169 17 is_stmt 1 view .LVU927
 169:Src/nexcore.c ****                 ResponseStartTick = HAL_GetTick();
 3216              		.loc 1 169 37 is_stmt 0 view .LVU928
 3217 00ae FFF7FEFF 		bl	HAL_GetTick
 3218              	.LVL355:
 169:Src/nexcore.c ****                 ResponseStartTick = HAL_GetTick();
 3219              		.loc 1 169 35 view .LVU929
 3220 00b2 454B     		ldr	r3, .L215+24
 3221 00b4 1860     		str	r0, [r3]
 3222 00b6 B1E7     		b	.L174
 3223              	.L204:
 177:Src/nexcore.c ****             if (HAL_GetTick() - ResponseStartTick > NEXCORE_TRANSACTION_TIMEOUT)
 3224              		.loc 1 177 13 is_stmt 1 view .LVU930
 177:Src/nexcore.c ****             if (HAL_GetTick() - ResponseStartTick > NEXCORE_TRANSACTION_TIMEOUT)
 3225              		.loc 1 177 17 is_stmt 0 view .LVU931
 3226 00b8 FFF7FEFF 		bl	HAL_GetTick
 3227              	.LVL356:
 177:Src/nexcore.c ****             if (HAL_GetTick() - ResponseStartTick > NEXCORE_TRANSACTION_TIMEOUT)
 3228              		.loc 1 177 31 view .LVU932
 3229 00bc 424B     		ldr	r3, .L215+24
 3230 00be 1B68     		ldr	r3, [r3]
 3231 00c0 C01A     		subs	r0, r0, r3
 177:Src/nexcore.c ****             if (HAL_GetTick() - ResponseStartTick > NEXCORE_TRANSACTION_TIMEOUT)
 3232              		.loc 1 177 16 view .LVU933
 3233 00c2 3228     		cmp	r0, #50
 3234 00c4 AED9     		bls	.L182
 180:Src/nexcore.c ****                 Nexcore_ErrorCb(ActiveTransactionId, NEXCORE_ERROR_NO_RESPONSE);
 3235              		.loc 1 180 17 is_stmt 1 view .LVU934
 3236 00c6 0321     		movs	r1, #3
 3237 00c8 404B     		ldr	r3, .L215+28
 3238 00ca 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 3239 00cc FFF7FEFF 		bl	Nexcore_ErrorCb
 3240              	.LVL357:
 181:Src/nexcore.c ****                 Busy = FALSE;
 3241              		.loc 1 181 17 view .LVU935
 181:Src/nexcore.c ****                 Busy = FALSE;
 3242              		.loc 1 181 22 is_stmt 0 view .LVU936
 3243 00d0 384B     		ldr	r3, .L215+4
 3244 00d2 0022     		movs	r2, #0
 3245 00d4 1A70     		strb	r2, [r3]
 3246 00d6 A5E7     		b	.L182
 3247              	.L172:
 3248              	.LBB324:
 187:Src/nexcore.c ****         uint16_t message_end_idx;
 3249              		.loc 1 187 9 is_stmt 1 view .LVU937
 188:Src/nexcore.c ****         message_end_idx = Queue_Search(&TxQueue, '\0');
 3250              		.loc 1 188 9 view .LVU938
 3251              	.LVL358:
 3252              	.LBB325:
ARM GAS  /tmp/ccCyY6XY.s 			page 86


 3253              	.LBI325:
 204:Inc/queue.h   **** {
 3254              		.loc 2 204 24 view .LVU939
 3255              	.LBB326:
 206:Inc/queue.h   ****     num_of_elements = Queue_GetElementCount(buff);
 3256              		.loc 2 206 5 view .LVU940
 207:Inc/queue.h   **** 
 3257              		.loc 2 207 5 view .LVU941
 3258              	.LBB327:
 3259              	.LBI327:
 144:Inc/queue.h   **** {
 3260              		.loc 2 144 24 view .LVU942
 3261              	.LBB328:
 146:Inc/queue.h   ****     if (elements < 0)
 3262              		.loc 2 146 5 view .LVU943
 146:Inc/queue.h   ****     if (elements < 0)
 3263              		.loc 2 146 28 is_stmt 0 view .LVU944
 3264 00d8 394B     		ldr	r3, .L215+16
 3265 00da 1888     		ldrh	r0, [r3]
 146:Inc/queue.h   ****     if (elements < 0)
 3266              		.loc 2 146 41 view .LVU945
 3267 00dc 5C88     		ldrh	r4, [r3, #2]
 3268              	.LVL359:
 147:Inc/queue.h   ****     {
 3269              		.loc 2 147 5 is_stmt 1 view .LVU946
 147:Inc/queue.h   ****     {
 3270              		.loc 2 147 8 is_stmt 0 view .LVU947
 3271 00de 001B     		subs	r0, r0, r4
 3272              	.LVL360:
 147:Inc/queue.h   ****     {
 3273              		.loc 2 147 8 view .LVU948
 3274 00e0 02D4     		bmi	.L207
 3275              	.LVL361:
 3276              	.L183:
 152:Inc/queue.h   **** }
 3277              		.loc 2 152 5 is_stmt 1 view .LVU949
 152:Inc/queue.h   **** }
 3278              		.loc 2 152 13 is_stmt 0 view .LVU950
 3279 00e2 80B2     		uxth	r0, r0
 3280              	.LVL362:
 152:Inc/queue.h   **** }
 3281              		.loc 2 152 13 view .LVU951
 3282              	.LBE328:
 3283              	.LBE327:
 210:Inc/queue.h   ****     {
 3284              		.loc 2 210 5 is_stmt 1 view .LVU952
 3285              	.LBB330:
 210:Inc/queue.h   ****     {
 3286              		.loc 2 210 10 view .LVU953
 210:Inc/queue.h   ****     {
 3287              		.loc 2 210 19 is_stmt 0 view .LVU954
 3288 00e4 0022     		movs	r2, #0
 3289 00e6 0AE0     		b	.L184
 3290              	.LVL363:
 3291              	.L207:
 210:Inc/queue.h   ****     {
 3292              		.loc 2 210 19 view .LVU955
ARM GAS  /tmp/ccCyY6XY.s 			page 87


 3293              	.LBE330:
 3294              	.LBB335:
 3295              	.LBB329:
 149:Inc/queue.h   ****     }
 3296              		.loc 2 149 9 is_stmt 1 view .LVU956
 149:Inc/queue.h   ****     }
 3297              		.loc 2 149 25 is_stmt 0 view .LVU957
 3298 00e8 9B88     		ldrh	r3, [r3, #4]
 149:Inc/queue.h   ****     }
 3299              		.loc 2 149 18 view .LVU958
 3300 00ea 1844     		add	r0, r0, r3
 3301              	.LVL364:
 149:Inc/queue.h   ****     }
 3302              		.loc 2 149 18 view .LVU959
 3303 00ec F9E7     		b	.L183
 3304              	.LVL365:
 3305              	.L209:
 149:Inc/queue.h   ****     }
 3306              		.loc 2 149 18 view .LVU960
 3307              	.LBE329:
 3308              	.LBE335:
 3309              	.LBB336:
 3310              	.LBB331:
 3311              	.LBB332:
 189:Inc/queue.h   ****     }
 3312              		.loc 2 189 9 is_stmt 1 view .LVU961
 189:Inc/queue.h   ****     }
 3313              		.loc 2 189 26 is_stmt 0 view .LVU962
 3314 00ee 5B1A     		subs	r3, r3, r1
 3315              	.LVL366:
 189:Inc/queue.h   ****     }
 3316              		.loc 2 189 26 view .LVU963
 3317 00f0 9BB2     		uxth	r3, r3
 3318              	.LVL367:
 3319              	.L185:
 192:Inc/queue.h   **** }
 3320              		.loc 2 192 5 is_stmt 1 view .LVU964
 192:Inc/queue.h   **** }
 3321              		.loc 2 192 17 is_stmt 0 view .LVU965
 3322 00f2 3349     		ldr	r1, .L215+16
 3323 00f4 8968     		ldr	r1, [r1, #8]
 192:Inc/queue.h   **** }
 3324              		.loc 2 192 29 view .LVU966
 3325 00f6 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 3326              	.LVL368:
 192:Inc/queue.h   **** }
 3327              		.loc 2 192 29 view .LVU967
 3328              	.LBE332:
 3329              	.LBE331:
 212:Inc/queue.h   ****         {
 3330              		.loc 2 212 12 view .LVU968
 3331 00f8 63B1     		cbz	r3, .L186
 210:Inc/queue.h   ****     {
 3332              		.loc 2 210 48 view .LVU969
 3333 00fa 0132     		adds	r2, r2, #1
 3334              	.LVL369:
 210:Inc/queue.h   ****     {
ARM GAS  /tmp/ccCyY6XY.s 			page 88


 3335              		.loc 2 210 48 view .LVU970
 3336 00fc 92B2     		uxth	r2, r2
 3337              	.LVL370:
 3338              	.L184:
 210:Inc/queue.h   ****     {
 3339              		.loc 2 210 5 view .LVU971
 3340 00fe 9042     		cmp	r0, r2
 3341 0100 06D9     		bls	.L208
 212:Inc/queue.h   ****         {
 3342              		.loc 2 212 9 is_stmt 1 view .LVU972
 3343              	.LVL371:
 3344              	.LBB334:
 3345              	.LBI331:
 184:Inc/queue.h   **** {
 3346              		.loc 2 184 23 view .LVU973
 3347              	.LBB333:
 186:Inc/queue.h   ****     if (element_position >= buff->size)
 3348              		.loc 2 186 5 view .LVU974
 186:Inc/queue.h   ****     if (element_position >= buff->size)
 3349              		.loc 2 186 14 is_stmt 0 view .LVU975
 3350 0102 A318     		adds	r3, r4, r2
 3351 0104 9BB2     		uxth	r3, r3
 3352              	.LVL372:
 187:Inc/queue.h   ****     {
 3353              		.loc 2 187 5 is_stmt 1 view .LVU976
 187:Inc/queue.h   ****     {
 3354              		.loc 2 187 33 is_stmt 0 view .LVU977
 3355 0106 2E49     		ldr	r1, .L215+16
 3356 0108 8988     		ldrh	r1, [r1, #4]
 187:Inc/queue.h   ****     {
 3357              		.loc 2 187 8 view .LVU978
 3358 010a 8B42     		cmp	r3, r1
 3359 010c F1D3     		bcc	.L185
 3360 010e EEE7     		b	.L209
 3361              	.LVL373:
 3362              	.L208:
 187:Inc/queue.h   ****     {
 3363              		.loc 2 187 8 view .LVU979
 3364              	.LBE333:
 3365              	.LBE334:
 3366              	.LBE336:
 218:Inc/queue.h   **** }
 3367              		.loc 2 218 12 view .LVU980
 3368 0110 4FF6FF72 		movw	r2, #65535
 3369              	.LVL374:
 3370              	.L186:
 218:Inc/queue.h   **** }
 3371              		.loc 2 218 12 view .LVU981
 3372              	.LBE326:
 3373              	.LBE325:
 191:Src/nexcore.c ****         if (message_end_idx != 0xFFFF)
 3374              		.loc 1 191 9 is_stmt 1 view .LVU982
 191:Src/nexcore.c ****         if (message_end_idx != 0xFFFF)
 3375              		.loc 1 191 12 is_stmt 0 view .LVU983
 3376 0114 4FF6FF73 		movw	r3, #65535
 3377 0118 9A42     		cmp	r2, r3
 3378 011a 83D0     		beq	.L182
ARM GAS  /tmp/ccCyY6XY.s 			page 89


 194:Src/nexcore.c ****             ActiveTransactionId = Queue_Dequeue(&TxQueue);
 3379              		.loc 1 194 13 is_stmt 1 view .LVU984
 3380              	.LVL375:
 3381              	.LBB337:
 3382              	.LBI337:
  98:Inc/queue.h   **** {
 3383              		.loc 2 98 23 view .LVU985
 3384              	.LBB338:
 100:Inc/queue.h   **** 
 3385              		.loc 2 100 5 view .LVU986
 103:Inc/queue.h   ****     if (__head == buff->size)
 3386              		.loc 2 103 5 view .LVU987
 103:Inc/queue.h   ****     if (__head == buff->size)
 3387              		.loc 2 103 27 is_stmt 0 view .LVU988
 3388 011c 2849     		ldr	r1, .L215+16
 3389 011e 8868     		ldr	r0, [r1, #8]
 3390              	.LVL376:
 103:Inc/queue.h   ****     if (__head == buff->size)
 3391              		.loc 2 103 46 view .LVU989
 3392 0120 631C     		adds	r3, r4, #1
 3393 0122 9BB2     		uxth	r3, r3
 3394              	.LVL377:
 103:Inc/queue.h   ****     if (__head == buff->size)
 3395              		.loc 2 103 13 view .LVU990
 3396 0124 005D     		ldrb	r0, [r0, r4]	@ zero_extendqisi2
 3397              	.LVL378:
 104:Inc/queue.h   ****     {
 3398              		.loc 2 104 5 is_stmt 1 view .LVU991
 104:Inc/queue.h   ****     {
 3399              		.loc 2 104 23 is_stmt 0 view .LVU992
 3400 0126 8988     		ldrh	r1, [r1, #4]
 104:Inc/queue.h   ****     {
 3401              		.loc 2 104 8 view .LVU993
 3402 0128 8B42     		cmp	r3, r1
 3403 012a 0AD0     		beq	.L210
 3404              	.LVL379:
 3405              	.L188:
 109:Inc/queue.h   **** 
 3406              		.loc 2 109 5 is_stmt 1 view .LVU994
 109:Inc/queue.h   **** 
 3407              		.loc 2 109 16 is_stmt 0 view .LVU995
 3408 012c 2449     		ldr	r1, .L215+16
 3409 012e 4B80     		strh	r3, [r1, #2]	@ movhi
 111:Inc/queue.h   **** }
 3410              		.loc 2 111 5 is_stmt 1 view .LVU996
 3411              	.LVL380:
 111:Inc/queue.h   **** }
 3412              		.loc 2 111 5 is_stmt 0 view .LVU997
 3413              	.LBE338:
 3414              	.LBE337:
 194:Src/nexcore.c ****             ActiveTransactionId = Queue_Dequeue(&TxQueue);
 3415              		.loc 1 194 33 view .LVU998
 3416 0130 264B     		ldr	r3, .L215+28
 3417 0132 1870     		strb	r0, [r3]
 195:Src/nexcore.c ****             message_end_idx--;
 3418              		.loc 1 195 13 is_stmt 1 view .LVU999
 3419              	.LVL381:
ARM GAS  /tmp/ccCyY6XY.s 			page 90


 198:Src/nexcore.c ****             ActiveTransactionBytesToSend = message_end_idx + sizeof(MessageTerminator);
 3420              		.loc 1 198 13 view .LVU1000
 198:Src/nexcore.c ****             ActiveTransactionBytesToSend = message_end_idx + sizeof(MessageTerminator);
 3421              		.loc 1 198 60 is_stmt 0 view .LVU1001
 3422 0134 0232     		adds	r2, r2, #2
 3423              	.LVL382:
 198:Src/nexcore.c ****             ActiveTransactionBytesToSend = message_end_idx + sizeof(MessageTerminator);
 3424              		.loc 1 198 42 view .LVU1002
 3425 0136 204B     		ldr	r3, .L215+8
 3426 0138 1A80     		strh	r2, [r3]	@ movhi
 199:Src/nexcore.c ****             Busy = TRUE;
 3427              		.loc 1 199 13 is_stmt 1 view .LVU1003
 199:Src/nexcore.c ****             Busy = TRUE;
 3428              		.loc 1 199 18 is_stmt 0 view .LVU1004
 3429 013a 1E4B     		ldr	r3, .L215+4
 3430 013c 0122     		movs	r2, #1
 3431 013e 1A70     		strb	r2, [r3]
 3432 0140 70E7     		b	.L182
 3433              	.LVL383:
 3434              	.L210:
 3435              	.LBB340:
 3436              	.LBB339:
 106:Inc/queue.h   ****     }
 3437              		.loc 2 106 16 view .LVU1005
 3438 0142 0023     		movs	r3, #0
 3439              	.LVL384:
 106:Inc/queue.h   ****     }
 3440              		.loc 2 106 16 view .LVU1006
 3441 0144 F2E7     		b	.L188
 3442              	.LVL385:
 3443              	.L205:
 106:Inc/queue.h   ****     }
 3444              		.loc 2 106 16 view .LVU1007
 3445              	.LBE339:
 3446              	.LBE340:
 3447              	.LBE324:
 3448              	.LBB341:
 3449              	.LBB314:
 3450              	.LBB312:
 3451              	.LBB309:
 3452              	.LBB299:
 149:Inc/queue.h   ****     }
 3453              		.loc 2 149 9 is_stmt 1 view .LVU1008
 149:Inc/queue.h   ****     }
 3454              		.loc 2 149 25 is_stmt 0 view .LVU1009
 3455 0146 9B88     		ldrh	r3, [r3, #4]
 149:Inc/queue.h   ****     }
 3456              		.loc 2 149 18 view .LVU1010
 3457 0148 1C44     		add	r4, r4, r3
 3458              	.LVL386:
 149:Inc/queue.h   ****     }
 3459              		.loc 2 149 18 view .LVU1011
 3460 014a 71E7     		b	.L189
 3461              	.LVL387:
 3462              	.L191:
 149:Inc/queue.h   ****     }
 3463              		.loc 2 149 18 view .LVU1012
ARM GAS  /tmp/ccCyY6XY.s 			page 91


 3464              	.LBE299:
 3465              	.LBE309:
 3466              	.LBB310:
 3467              	.LBB308:
 3468              	.LBB307:
 3469              	.LBB303:
 3470              	.LBB304:
 192:Inc/queue.h   **** }
 3471              		.loc 2 192 5 is_stmt 1 view .LVU1013
 192:Inc/queue.h   **** }
 3472              		.loc 2 192 17 is_stmt 0 view .LVU1014
 3473 014c 1B49     		ldr	r1, .L215+12
 3474 014e 8968     		ldr	r1, [r1, #8]
 192:Inc/queue.h   **** }
 3475              		.loc 2 192 29 view .LVU1015
 3476 0150 C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 3477              	.LVL388:
 192:Inc/queue.h   **** }
 3478              		.loc 2 192 29 view .LVU1016
 3479              	.LBE304:
 3480              	.LBE303:
 241:Inc/queue.h   ****             {
 3481              		.loc 2 241 47 view .LVU1017
 3482 0152 1C4B     		ldr	r3, .L215+20
 3483 0154 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 241:Inc/queue.h   ****             {
 3484              		.loc 2 241 16 view .LVU1018
 3485 0156 9942     		cmp	r1, r3
 3486 0158 0ED1     		bne	.L211
 3487              	.LVL389:
 3488              	.L192:
 239:Inc/queue.h   ****         {
 3489              		.loc 2 239 46 view .LVU1019
 3490 015a 0132     		adds	r2, r2, #1
 3491              	.LVL390:
 239:Inc/queue.h   ****         {
 3492              		.loc 2 239 46 view .LVU1020
 3493 015c 92B2     		uxth	r2, r2
 3494              	.LVL391:
 3495              	.L195:
 239:Inc/queue.h   ****         {
 3496              		.loc 2 239 9 view .LVU1021
 3497 015e 022A     		cmp	r2, #2
 3498 0160 0CD8     		bhi	.L212
 241:Inc/queue.h   ****             {
 3499              		.loc 2 241 13 is_stmt 1 view .LVU1022
 241:Inc/queue.h   ****             {
 3500              		.loc 2 241 17 is_stmt 0 view .LVU1023
 3501 0162 8318     		adds	r3, r0, r2
 3502 0164 9BB2     		uxth	r3, r3
 3503              	.LVL392:
 3504              	.LBB306:
 3505              	.LBI303:
 184:Inc/queue.h   **** {
 3506              		.loc 2 184 23 is_stmt 1 view .LVU1024
 3507              	.LBB305:
 186:Inc/queue.h   ****     if (element_position >= buff->size)
ARM GAS  /tmp/ccCyY6XY.s 			page 92


 3508              		.loc 2 186 5 view .LVU1025
 186:Inc/queue.h   ****     if (element_position >= buff->size)
 3509              		.loc 2 186 14 is_stmt 0 view .LVU1026
 3510 0166 2B44     		add	r3, r3, r5
 3511              	.LVL393:
 186:Inc/queue.h   ****     if (element_position >= buff->size)
 3512              		.loc 2 186 14 view .LVU1027
 3513 0168 9BB2     		uxth	r3, r3
 3514              	.LVL394:
 187:Inc/queue.h   ****     {
 3515              		.loc 2 187 5 is_stmt 1 view .LVU1028
 187:Inc/queue.h   ****     {
 3516              		.loc 2 187 33 is_stmt 0 view .LVU1029
 3517 016a 1449     		ldr	r1, .L215+12
 3518 016c 8988     		ldrh	r1, [r1, #4]
 187:Inc/queue.h   ****     {
 3519              		.loc 2 187 8 view .LVU1030
 3520 016e 8B42     		cmp	r3, r1
 3521 0170 ECD3     		bcc	.L191
 189:Inc/queue.h   ****     }
 3522              		.loc 2 189 9 is_stmt 1 view .LVU1031
 189:Inc/queue.h   ****     }
 3523              		.loc 2 189 26 is_stmt 0 view .LVU1032
 3524 0172 5B1A     		subs	r3, r3, r1
 3525              	.LVL395:
 189:Inc/queue.h   ****     }
 3526              		.loc 2 189 26 view .LVU1033
 3527 0174 9BB2     		uxth	r3, r3
 3528              	.LVL396:
 189:Inc/queue.h   ****     }
 3529              		.loc 2 189 26 view .LVU1034
 3530 0176 E9E7     		b	.L191
 3531              	.LVL397:
 3532              	.L211:
 189:Inc/queue.h   ****     }
 3533              		.loc 2 189 26 view .LVU1035
 3534              	.LBE305:
 3535              	.LBE306:
 243:Inc/queue.h   ****                 continue;
 3536              		.loc 2 243 25 view .LVU1036
 3537 0178 0026     		movs	r6, #0
 3538              	.LVL398:
 243:Inc/queue.h   ****                 continue;
 3539              		.loc 2 243 25 view .LVU1037
 3540 017a EEE7     		b	.L192
 3541              	.LVL399:
 3542              	.L212:
 243:Inc/queue.h   ****                 continue;
 3543              		.loc 2 243 25 view .LVU1038
 3544              	.LBE307:
 249:Inc/queue.h   ****         {
 3545              		.loc 2 249 9 is_stmt 1 view .LVU1039
 249:Inc/queue.h   ****         {
 3546              		.loc 2 249 12 is_stmt 0 view .LVU1040
 3547 017c 2EB1     		cbz	r6, .L213
 3548              	.LVL400:
 3549              	.L194:
ARM GAS  /tmp/ccCyY6XY.s 			page 93


 249:Inc/queue.h   ****         {
 3550              		.loc 2 249 12 view .LVU1041
 3551              	.LBE308:
 3552              	.LBE310:
 3553              	.LBE312:
 3554              	.LBE314:
 210:Src/nexcore.c ****         if (message_length != 0xFFFF)
 3555              		.loc 1 210 9 is_stmt 1 view .LVU1042
 210:Src/nexcore.c ****         if (message_length != 0xFFFF)
 3556              		.loc 1 210 12 is_stmt 0 view .LVU1043
 3557 017e 4FF6FF73 		movw	r3, #65535
 3558 0182 9842     		cmp	r0, r3
 3559 0184 07D1     		bne	.L214
 3560              	.LVL401:
 3561              	.L170:
 210:Src/nexcore.c ****         if (message_length != 0xFFFF)
 3562              		.loc 1 210 12 view .LVU1044
 3563              	.LBE341:
 223:Src/nexcore.c **** }
 3564              		.loc 1 223 1 view .LVU1045
 3565 0186 02B0     		add	sp, sp, #8
 3566              	.LCFI36:
 3567              		.cfi_remember_state
 3568              		.cfi_def_cfa_offset 16
 3569              		@ sp needed
 3570 0188 70BD     		pop	{r4, r5, r6, pc}
 3571              	.LVL402:
 3572              	.L213:
 3573              	.LCFI37:
 3574              		.cfi_restore_state
 3575              	.LBB342:
 3576              	.LBB315:
 3577              	.LBB313:
 3578              	.LBB311:
 236:Inc/queue.h   ****     {
 3579              		.loc 2 236 48 view .LVU1046
 3580 018a 0130     		adds	r0, r0, #1
 3581              	.LVL403:
 236:Inc/queue.h   ****     {
 3582              		.loc 2 236 48 view .LVU1047
 3583 018c 80B2     		uxth	r0, r0
 3584              	.LVL404:
 236:Inc/queue.h   ****     {
 3585              		.loc 2 236 48 view .LVU1048
 3586 018e 51E7     		b	.L190
 3587              	.LVL405:
 3588              	.L206:
 236:Inc/queue.h   ****     {
 3589              		.loc 2 236 48 view .LVU1049
 3590              	.LBE311:
 3591              		.loc 2 255 12 view .LVU1050
 3592 0190 4FF6FF70 		movw	r0, #65535
 3593              	.LVL406:
 3594              		.loc 2 255 12 view .LVU1051
 3595 0194 F3E7     		b	.L194
 3596              	.LVL407:
 3597              	.L214:
ARM GAS  /tmp/ccCyY6XY.s 			page 94


 3598              		.loc 2 255 12 view .LVU1052
 3599              	.LBE313:
 3600              	.LBE315:
 214:Src/nexcore.c ****             messageReceived(message_length);
 3601              		.loc 1 214 13 is_stmt 1 view .LVU1053
 3602 0196 C0B2     		uxtb	r0, r0
 3603              	.LVL408:
 214:Src/nexcore.c ****             messageReceived(message_length);
 3604              		.loc 1 214 13 is_stmt 0 view .LVU1054
 3605 0198 FFF7FEFF 		bl	messageReceived
 3606              	.LVL409:
 217:Src/nexcore.c ****             if (Busy)
 3607              		.loc 1 217 13 is_stmt 1 view .LVU1055
 217:Src/nexcore.c ****             if (Busy)
 3608              		.loc 1 217 17 is_stmt 0 view .LVU1056
 3609 019c 054B     		ldr	r3, .L215+4
 3610 019e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 217:Src/nexcore.c ****             if (Busy)
 3611              		.loc 1 217 16 view .LVU1057
 3612 01a0 002B     		cmp	r3, #0
 3613 01a2 F0D0     		beq	.L170
 219:Src/nexcore.c ****                 Busy = FALSE;
 3614              		.loc 1 219 17 is_stmt 1 view .LVU1058
 219:Src/nexcore.c ****                 Busy = FALSE;
 3615              		.loc 1 219 22 is_stmt 0 view .LVU1059
 3616 01a4 034B     		ldr	r3, .L215+4
 3617 01a6 0022     		movs	r2, #0
 3618 01a8 1A70     		strb	r2, [r3]
 3619 01aa ECE7     		b	.L170
 3620              	.LVL410:
 3621              	.L201:
 3622              	.LCFI38:
 3623              		.cfi_def_cfa_offset 0
 3624              		.cfi_restore 4
 3625              		.cfi_restore 5
 3626              		.cfi_restore 6
 3627              		.cfi_restore 14
 219:Src/nexcore.c ****                 Busy = FALSE;
 3628              		.loc 1 219 22 view .LVU1060
 3629 01ac 7047     		bx	lr
 3630              	.L216:
 3631 01ae 00BF     		.align	2
 3632              	.L215:
 3633 01b0 00000000 		.word	.LANCHOR0
 3634 01b4 00000000 		.word	.LANCHOR6
 3635 01b8 00000000 		.word	.LANCHOR9
 3636 01bc 00000000 		.word	.LANCHOR3
 3637 01c0 00000000 		.word	.LANCHOR1
 3638 01c4 00000000 		.word	.LANCHOR7
 3639 01c8 00000000 		.word	.LANCHOR10
 3640 01cc 00000000 		.word	.LANCHOR8
 3641              	.LBE342:
 3642              		.cfi_endproc
 3643              	.LFE87:
 3645              		.section	.bss.ActiveTransactionBytesToSend,"aw",%nobits
 3646              		.align	1
 3647              		.set	.LANCHOR9,. + 0
ARM GAS  /tmp/ccCyY6XY.s 			page 95


 3650              	ActiveTransactionBytesToSend:
 3651 0000 0000     		.space	2
 3652              		.section	.bss.ActiveTransactionId,"aw",%nobits
 3653              		.set	.LANCHOR8,. + 0
 3656              	ActiveTransactionId:
 3657 0000 00       		.space	1
 3658              		.section	.bss.Busy,"aw",%nobits
 3659              		.set	.LANCHOR6,. + 0
 3662              	Busy:
 3663 0000 00       		.space	1
 3664              		.section	.bss.ResponseStartTick,"aw",%nobits
 3665              		.align	2
 3666              		.set	.LANCHOR10,. + 0
 3669              	ResponseStartTick:
 3670 0000 00000000 		.space	4
 3671              		.section	.bss.RxQueue,"aw",%nobits
 3672              		.align	2
 3673              		.set	.LANCHOR3,. + 0
 3676              	RxQueue:
 3677 0000 00000000 		.space	12
 3677      00000000 
 3677      00000000 
 3678              		.section	.bss.RxQueueContainer,"aw",%nobits
 3679              		.align	2
 3680              		.set	.LANCHOR4,. + 0
 3683              	RxQueueContainer:
 3684 0000 00000000 		.space	64
 3684      00000000 
 3684      00000000 
 3684      00000000 
 3684      00000000 
 3685              		.section	.bss.Status,"aw",%nobits
 3686              		.set	.LANCHOR0,. + 0
 3689              	Status:
 3690 0000 00       		.space	1
 3691              		.section	.bss.TransactionNumerator,"aw",%nobits
 3692              		.set	.LANCHOR5,. + 0
 3695              	TransactionNumerator:
 3696 0000 00       		.space	1
 3697              		.section	.bss.TxQueue,"aw",%nobits
 3698              		.align	2
 3699              		.set	.LANCHOR1,. + 0
 3702              	TxQueue:
 3703 0000 00000000 		.space	12
 3703      00000000 
 3703      00000000 
 3704              		.section	.bss.TxQueueContainer,"aw",%nobits
 3705              		.align	2
 3706              		.set	.LANCHOR2,. + 0
 3709              	TxQueueContainer:
 3710 0000 00000000 		.space	256
 3710      00000000 
 3710      00000000 
 3710      00000000 
 3710      00000000 
 3711              		.section	.data.MessageTerminator,"aw"
 3712              		.align	2
ARM GAS  /tmp/ccCyY6XY.s 			page 96


 3713              		.set	.LANCHOR7,. + 0
 3716              	MessageTerminator:
 3717 0000 FF       		.byte	-1
 3718 0001 FF       		.byte	-1
 3719 0002 FF       		.byte	-1
 3720              		.section	.rodata.Nexcore_AddPointToWaveform.str1.4,"aMS",%progbits,1
 3721              		.align	2
 3722              	.LC5:
 3723 0000 61646420 		.ascii	"add \000"
 3723      00
 3724              		.section	.rodata.Nexcore_ClearWaveform.str1.4,"aMS",%progbits,1
 3725              		.align	2
 3726              	.LC6:
 3727 0000 636C6520 		.ascii	"cle \000"
 3727      00
 3728              		.section	.rodata.Nexcore_Get.str1.4,"aMS",%progbits,1
 3729              		.align	2
 3730              	.LC0:
 3731 0000 67657420 		.ascii	"get \000"
 3731      00
 3732              		.section	.rodata.Nexcore_Page.str1.4,"aMS",%progbits,1
 3733              		.align	2
 3734              	.LC3:
 3735 0000 70616765 		.ascii	"page \000"
 3735      2000
 3736              		.section	.rodata.Nexcore_Reset.str1.4,"aMS",%progbits,1
 3737              		.align	2
 3738              	.LC7:
 3739 0000 72657374 		.ascii	"rest\000"
 3739      00
 3740              		.section	.rodata.Nexcore_Start.str1.4,"aMS",%progbits,1
 3741              		.align	2
 3742              	.LC2:
 3743 0000 3300     		.ascii	"3\000"
 3744 0002 0000     		.space	2
 3745              	.LC1:
 3746 0004 626B636D 		.ascii	"bkcmd\000"
 3746      6400
 3747              		.section	.rodata.Nexcore_Visible.str1.4,"aMS",%progbits,1
 3748              		.align	2
 3749              	.LC4:
 3750 0000 76697320 		.ascii	"vis \000"
 3750      00
 3751              		.text
 3752              	.Letext0:
 3753              		.file 3 "/home/onur/STM32Toolchain/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/machine
 3754              		.file 4 "/home/onur/STM32Toolchain/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/_st
 3755              		.file 5 "Drivers/CMSIS/Include/core_cm3.h"
 3756              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 3757              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 3758              		.file 8 "/home/onur/STM32Toolchain/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/loc
 3759              		.file 9 "/home/onur/STM32Toolchain/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/_ty
 3760              		.file 10 "/home/onur/STM32Toolchain/gcc-arm-none-eabi-8-2018-q4-major/lib/gcc/arm-none-eabi/8.2.1/
 3761              		.file 11 "/home/onur/STM32Toolchain/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/re
 3762              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 3763              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 3764              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
ARM GAS  /tmp/ccCyY6XY.s 			page 97


 3765              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 3766              		.file 16 "Inc/global.h"
 3767              		.file 17 "Inc/nexcore.h"
 3768              		.file 18 "Inc/utilities.h"
 3769              		.file 19 "Inc/nexserial.h"
ARM GAS  /tmp/ccCyY6XY.s 			page 98


DEFINED SYMBOLS
                            *ABS*:0000000000000000 nexcore.c
     /tmp/ccCyY6XY.s:16     .text.Nexcore_Init:0000000000000000 $t
     /tmp/ccCyY6XY.s:24     .text.Nexcore_Init:0000000000000000 Nexcore_Init
     /tmp/ccCyY6XY.s:100    .text.Nexcore_Init:0000000000000030 $d
     /tmp/ccCyY6XY.s:109    .text.Nexcore_Stop:0000000000000000 $t
     /tmp/ccCyY6XY.s:116    .text.Nexcore_Stop:0000000000000000 Nexcore_Stop
     /tmp/ccCyY6XY.s:151    .text.Nexcore_Stop:000000000000001c $d
     /tmp/ccCyY6XY.s:157    .text.Nexcore_EnqueueMsg:0000000000000000 $t
     /tmp/ccCyY6XY.s:164    .text.Nexcore_EnqueueMsg:0000000000000000 Nexcore_EnqueueMsg
     /tmp/ccCyY6XY.s:393    .text.Nexcore_EnqueueMsg:00000000000000a0 $d
     /tmp/ccCyY6XY.s:401    .text.Nexcore_Get:0000000000000000 $t
     /tmp/ccCyY6XY.s:408    .text.Nexcore_Get:0000000000000000 Nexcore_Get
     /tmp/ccCyY6XY.s:488    .text.Nexcore_Get:0000000000000038 $d
     /tmp/ccCyY6XY.s:493    .text.Nexcore_Set:0000000000000000 $t
     /tmp/ccCyY6XY.s:500    .text.Nexcore_Set:0000000000000000 Nexcore_Set
     /tmp/ccCyY6XY.s:595    .text.Nexcore_Start:0000000000000000 $t
     /tmp/ccCyY6XY.s:602    .text.Nexcore_Start:0000000000000000 Nexcore_Start
     /tmp/ccCyY6XY.s:691    .text.Nexcore_Start:0000000000000048 $d
     /tmp/ccCyY6XY.s:702    .text.Nexcore_Page:0000000000000000 $t
     /tmp/ccCyY6XY.s:709    .text.Nexcore_Page:0000000000000000 Nexcore_Page
     /tmp/ccCyY6XY.s:755    .text.Nexcore_Page:0000000000000028 $d
     /tmp/ccCyY6XY.s:760    .text.Nexcore_Visible:0000000000000000 $t
     /tmp/ccCyY6XY.s:767    .text.Nexcore_Visible:0000000000000000 Nexcore_Visible
     /tmp/ccCyY6XY.s:833    .text.Nexcore_Visible:000000000000003c $d
     /tmp/ccCyY6XY.s:838    .text.Nexcore_AddPointToWaveform:0000000000000000 $t
     /tmp/ccCyY6XY.s:845    .text.Nexcore_AddPointToWaveform:0000000000000000 Nexcore_AddPointToWaveform
     /tmp/ccCyY6XY.s:924    .text.Nexcore_AddPointToWaveform:000000000000004c $d
     /tmp/ccCyY6XY.s:929    .text.Nexcore_ClearWaveform:0000000000000000 $t
     /tmp/ccCyY6XY.s:936    .text.Nexcore_ClearWaveform:0000000000000000 Nexcore_ClearWaveform
     /tmp/ccCyY6XY.s:1004   .text.Nexcore_ClearWaveform:000000000000003c $d
     /tmp/ccCyY6XY.s:1009   .text.Nexcore_Reset:0000000000000000 $t
     /tmp/ccCyY6XY.s:1016   .text.Nexcore_Reset:0000000000000000 Nexcore_Reset
     /tmp/ccCyY6XY.s:1055   .text.Nexcore_Reset:0000000000000024 $d
     /tmp/ccCyY6XY.s:1060   .text.Nexcore_ParseReturnedString:0000000000000000 $t
     /tmp/ccCyY6XY.s:1067   .text.Nexcore_ParseReturnedString:0000000000000000 Nexcore_ParseReturnedString
     /tmp/ccCyY6XY.s:1470   .text.Nexcore_ParseReturnedString:00000000000000e4 $d
     /tmp/ccCyY6XY.s:1480   .text.Nexcore_ErrorCb:0000000000000000 $t
     /tmp/ccCyY6XY.s:1487   .text.Nexcore_ErrorCb:0000000000000000 Nexcore_ErrorCb
     /tmp/ccCyY6XY.s:1501   .text.Nexcore_InfoCb:0000000000000000 $t
     /tmp/ccCyY6XY.s:1508   .text.Nexcore_InfoCb:0000000000000000 Nexcore_InfoCb
     /tmp/ccCyY6XY.s:1522   .text.Nexcore_TouchEventCb:0000000000000000 $t
     /tmp/ccCyY6XY.s:1529   .text.Nexcore_TouchEventCb:0000000000000000 Nexcore_TouchEventCb
     /tmp/ccCyY6XY.s:1543   .text.Nexcore_GetStringRspCb:0000000000000000 $t
     /tmp/ccCyY6XY.s:1550   .text.Nexcore_GetStringRspCb:0000000000000000 Nexcore_GetStringRspCb
     /tmp/ccCyY6XY.s:1564   .text.Nexcore_GetNumberRspCb:0000000000000000 $t
     /tmp/ccCyY6XY.s:1571   .text.Nexcore_GetNumberRspCb:0000000000000000 Nexcore_GetNumberRspCb
     /tmp/ccCyY6XY.s:1585   .text.messageReceived:0000000000000000 $t
     /tmp/ccCyY6XY.s:1591   .text.messageReceived:0000000000000000 messageReceived
     /tmp/ccCyY6XY.s:1659   .text.messageReceived:000000000000002a $d
     /tmp/ccCyY6XY.s:1797   .text.messageReceived:000000000000013c $t
     /tmp/ccCyY6XY.s:2157   .text.messageReceived:0000000000000220 $d
     /tmp/ccCyY6XY.s:2163   .text.messageReceived:0000000000000228 $t
     /tmp/ccCyY6XY.s:2950   .text.messageReceived:000000000000040c $d
     /tmp/ccCyY6XY.s:2960   .text.Nexcore_Execute:0000000000000000 $t
     /tmp/ccCyY6XY.s:2967   .text.Nexcore_Execute:0000000000000000 Nexcore_Execute
     /tmp/ccCyY6XY.s:3633   .text.Nexcore_Execute:00000000000001b0 $d
ARM GAS  /tmp/ccCyY6XY.s 			page 99


     /tmp/ccCyY6XY.s:3646   .bss.ActiveTransactionBytesToSend:0000000000000000 $d
     /tmp/ccCyY6XY.s:3650   .bss.ActiveTransactionBytesToSend:0000000000000000 ActiveTransactionBytesToSend
     /tmp/ccCyY6XY.s:3656   .bss.ActiveTransactionId:0000000000000000 ActiveTransactionId
     /tmp/ccCyY6XY.s:3657   .bss.ActiveTransactionId:0000000000000000 $d
     /tmp/ccCyY6XY.s:3662   .bss.Busy:0000000000000000 Busy
     /tmp/ccCyY6XY.s:3663   .bss.Busy:0000000000000000 $d
     /tmp/ccCyY6XY.s:3665   .bss.ResponseStartTick:0000000000000000 $d
     /tmp/ccCyY6XY.s:3669   .bss.ResponseStartTick:0000000000000000 ResponseStartTick
     /tmp/ccCyY6XY.s:3672   .bss.RxQueue:0000000000000000 $d
     /tmp/ccCyY6XY.s:3676   .bss.RxQueue:0000000000000000 RxQueue
     /tmp/ccCyY6XY.s:3679   .bss.RxQueueContainer:0000000000000000 $d
     /tmp/ccCyY6XY.s:3683   .bss.RxQueueContainer:0000000000000000 RxQueueContainer
     /tmp/ccCyY6XY.s:3689   .bss.Status:0000000000000000 Status
     /tmp/ccCyY6XY.s:3690   .bss.Status:0000000000000000 $d
     /tmp/ccCyY6XY.s:3695   .bss.TransactionNumerator:0000000000000000 TransactionNumerator
     /tmp/ccCyY6XY.s:3696   .bss.TransactionNumerator:0000000000000000 $d
     /tmp/ccCyY6XY.s:3698   .bss.TxQueue:0000000000000000 $d
     /tmp/ccCyY6XY.s:3702   .bss.TxQueue:0000000000000000 TxQueue
     /tmp/ccCyY6XY.s:3705   .bss.TxQueueContainer:0000000000000000 $d
     /tmp/ccCyY6XY.s:3709   .bss.TxQueueContainer:0000000000000000 TxQueueContainer
     /tmp/ccCyY6XY.s:3712   .data.MessageTerminator:0000000000000000 $d
     /tmp/ccCyY6XY.s:3716   .data.MessageTerminator:0000000000000000 MessageTerminator
     /tmp/ccCyY6XY.s:3721   .rodata.Nexcore_AddPointToWaveform.str1.4:0000000000000000 $d
     /tmp/ccCyY6XY.s:3725   .rodata.Nexcore_ClearWaveform.str1.4:0000000000000000 $d
     /tmp/ccCyY6XY.s:3729   .rodata.Nexcore_Get.str1.4:0000000000000000 $d
     /tmp/ccCyY6XY.s:3733   .rodata.Nexcore_Page.str1.4:0000000000000000 $d
     /tmp/ccCyY6XY.s:3737   .rodata.Nexcore_Reset.str1.4:0000000000000000 $d
     /tmp/ccCyY6XY.s:3741   .rodata.Nexcore_Start.str1.4:0000000000000000 $d
     /tmp/ccCyY6XY.s:3748   .rodata.Nexcore_Visible.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_UART_Abort_IT
huart1
strLen
num2str
Serial_Transmit
Serial_TxBuffAvailable
HAL_GetTick
